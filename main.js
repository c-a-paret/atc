/*
 * ATTENTION: The "eval" devtool has been used (maybe by default in mode: "development").
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
/******/ (() => { // webpackBootstrap
/******/ 	"use strict";
/******/ 	var __webpack_modules__ = ({

/***/ "./src/Application/AeroplaneService.js":
/*!*********************************************!*\
  !*** ./src/Application/AeroplaneService.js ***!
  \*********************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"AeroplaneService\": () => (/* binding */ AeroplaneService)\n/* harmony export */ });\n/* harmony import */ var _Domain_Aeroplane_Aeroplane__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../Domain/Aeroplane/Aeroplane */ \"./src/Domain/Aeroplane/Aeroplane.js\");\n/* harmony import */ var _Command_CommandParser_CommandParser__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../Command/CommandParser/CommandParser */ \"./src/Command/CommandParser/CommandParser.js\");\n\n\n\nclass AeroplaneService {\n    constructor(map, statsService, initialState) {\n        this.aeroplanes = []\n        this.map = map\n        this.statsService = statsService\n\n        this.state = undefined\n        this.transitionTo(initialState)\n    }\n\n    transitionTo = (state) => {\n        this.state = state\n        this.state.setMachine(this)\n        this.state.setMap(this.map)\n    }\n\n    tick = () => {\n        this.state.tick()\n    }\n\n    clear = () => {\n        this.aeroplanes = []\n        this.statsService.reset()\n    }\n\n    initTestAeroplanes = () => {\n        // for (let x = 0; x < this.spawnLocations.length; x++) {\n        //     const callSign = `${AIRCRAFT[Math.floor(Math.random() * AIRCRAFT.length)].operatorIATA}${getRandomNumberBetween(100, 999)}`\n        //     const location = this.spawnLocations[x];\n        //     const startX = location.x\n        //     const startY = location.y\n        //     const startHeading = location.heading\n        //     const aeroplane = new Aeroplane(callSign, startX, startY, 120, startHeading, 2800, 1)\n        //     this.aeroplanes.push(aeroplane)\n        // }\n        this.aeroplanes = [\n            new _Domain_Aeroplane_Aeroplane__WEBPACK_IMPORTED_MODULE_0__.Aeroplane(\"BA123\", \"A321\", 1300, 425, 200, 90, 6000, 1),\n            // new Aeroplane(\"BA999\", \"A321\", 300, 425, 200, 90, 6000, 1),\n            // new Aeroplane(\"BA789\", \"A321\", 500, 400, 200, 135, 6000, 1),\n            // new Aeroplane(\"BA101\", \"A321\", 500, 500, 200, 180, 6000, 1),\n            // new Aeroplane(\"BA112\", \"A321\", 500, 250, 200, 305, 6000, 1),\n            // new Aeroplane(\"BA131\", \"A321\", 500, 350, 200, 270, 6000, 1),\n            // new Aeroplane(\"BA415\", \"A321\", 500, 450, 200, 225, 6000, 1),\n            // new Aeroplane(\"BA161\", \"A321\", 500, 450, 200, 225, 6000, 1),\n            // new Aeroplane(\"BA171\", \"A321\", 500, 450, 200, 225, 6000, 1),\n            // new Aeroplane(\"BA181\", \"A321\", 500, 450, 200, 225, 6000, 1),\n            // new Aeroplane(\"BA191\", \"A321\", 500, 450, 200, 225, 6000, 1),\n            // new Aeroplane(\"BA202\", \"A321\", 500, 450, 200, 225, 6000, 1),\n            // new Aeroplane(\"BA212\", \"A321\", 500, 450, 200, 225, 6000, 1),\n        ]\n\n        // this.aeroplanes.forEach(plane => {\n        //     plane.setLanding(this.map, \"9L\")\n        // })\n    }\n\n    sendCommand = (rawCommand) => {\n        const command = (0,_Command_CommandParser_CommandParser__WEBPACK_IMPORTED_MODULE_1__.parseCommand)(rawCommand)\n        let callSign;\n        let speedSet;\n        let headingSet;\n        let altitudeSet;\n        let waypointSet;\n        let runwaySet;\n        let holdSet;\n        this.aeroplanes.forEach(plane => {\n            if (plane.callSign === command.callSign) {\n                callSign = plane.callSign\n\n                if (command.speed) {\n                    speedSet = plane.setSpeed(this.map, command.speed)\n                }\n                if (command.heading) {\n                    headingSet = plane.setHeading(this.map, command.heading)\n                }\n                if (command.altitude) {\n                    altitudeSet = plane.setAltitude(this.map, command.altitude)\n                }\n                if (command.waypoint) {\n                    waypointSet = plane.setWaypoint(this.map, command.waypoint)\n                }\n                if (command.runway) {\n                    runwaySet = plane.setLanding(this.map, command.runway)\n                }\n                if (command.hold) {\n                    holdSet = plane.setHold(this.map, command.hold)\n                }\n            }\n        })\n        return {\n            \"callSign\": callSign,\n            \"speed\": speedSet,\n            \"heading\": headingSet,\n            \"altitude\": altitudeSet,\n            \"waypoint\": waypointSet,\n            \"runway\": runwaySet,\n            \"hold\": holdSet\n        }\n    }\n\n    getCallSignByPosition = (x, y) => {\n        for (let n = 0; n < this.aeroplanes.length; n++) {\n            let plane = this.aeroplanes[n]\n            if (plane.withinPosition(x, y)) {\n                return plane.callSign\n            }\n        }\n        return null\n    }\n\n    deactivateAeroplanes = () => {\n        this.aeroplanes.forEach(plane => {\n            if (plane.isOutsideBoundaries(this.map.mapBoundaries, this.statsService.incrementExited) || plane.hasLanded(this.statsService.incrementLanded)) {\n                this.aeroplanes = this.aeroplanes.filter(activePlane => activePlane !== plane)\n            }\n        })\n    }\n\n    applyActions = () => {\n        this.aeroplanes.forEach(plane => {\n            plane.applyActions()\n            plane.simulatePath()\n        })\n    }\n\n    markAeroplanesBreakingProximity = () => {\n        this.aeroplanes.forEach(plane => {\n            plane.markAdheringProximityLimits()\n        })\n\n        // With other aeroplanes\n        this.aeroplanes.forEach(plane => {\n            this.aeroplanes.forEach(comparisonPlane => {\n                if (plane.callSign !== comparisonPlane.callSign) {\n                    if (comparisonPlane.proximalTo(plane)) {\n                        plane.markBreachingProximityLimits()\n                        comparisonPlane.markBreachingProximityLimits()\n                    }\n                }\n            })\n        })\n\n        // With restricted zones\n        this.aeroplanes.forEach(plane => {\n            this.map.features.exclusionZones.forEach(zone => {\n                if (plane.breachingRestrictedZone(this.map, zone)) {\n                    plane.markBreachingProximityLimits()\n                }\n            })\n        })\n    }\n}\n\n//# sourceURL=webpack://atc/./src/Application/AeroplaneService.js?");

/***/ }),

/***/ "./src/Application/GameLoop.js":
/*!*************************************!*\
  !*** ./src/Application/GameLoop.js ***!
  \*************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"GameLoop\": () => (/* binding */ GameLoop)\n/* harmony export */ });\nclass GameLoop {\n    constructor(uiController, interfaceController, aeroplaneService, statsService) {\n        this.uiController = uiController\n        this.interfaceController = interfaceController\n        this.aeroplaneService = aeroplaneService\n        this.statsService = statsService\n\n    }\n\n    init() {\n        this.aeroplaneService.tick()\n        // this.aeroplaneService.initTestAeroplanes()\n        this.uiController.drawAeroplanes()\n        this.interfaceController.drawStrips()\n    }\n\n    start() {\n        // State ticker\n        setInterval(() => {\n            if (!this.interfaceController.gamePaused && this.aeroplaneService.aeroplanes.length < 10) {\n                this.aeroplaneService.tick()\n            }\n        }, 1000)\n\n        // Stats updater\n        setInterval(() => {\n            if (!this.interfaceController.gamePaused) {\n                if (this.aeroplaneService.aeroplanes.some(plane => plane.breachingProximity)) {\n                    this.statsService.incrementBreachedTimer()\n                }\n                this.interfaceController.setStats(\n                    this.statsService.landedCount,\n                    this.statsService.exitedBoundaryCount,\n                    this.statsService.proximityTimer\n                )\n            }\n        }, 1000)\n\n        // Aeroplanes and strips display updater\n        setInterval(() => {\n            if (!this.interfaceController.gamePaused) {\n                this.uiController.clearAeroplaneLayer()\n\n                this.aeroplaneService.deactivateAeroplanes()\n                this.aeroplaneService.markAeroplanesBreakingProximity()\n                this.aeroplaneService.applyActions()\n\n                this.uiController.drawAeroplanes()\n\n                this.interfaceController.clearInactiveStrips()\n                this.interfaceController.drawStrips()\n                this.interfaceController.updateStrips()\n            }\n        }, 900)\n    }\n}\n\n//# sourceURL=webpack://atc/./src/Application/GameLoop.js?");

/***/ }),

/***/ "./src/Application/StatsService.js":
/*!*****************************************!*\
  !*** ./src/Application/StatsService.js ***!
  \*****************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"StatsService\": () => (/* binding */ StatsService)\n/* harmony export */ });\nclass StatsService {\n    constructor() {\n        this.landedCount = 0\n        this.exitedBoundaryCount = 0\n        this.proximityTimer = 0\n    }\n\n    reset = () => {\n        this.landedCount = 0\n        this.exitedBoundaryCount = 0\n        this.proximityTimer = 0\n    }\n\n    incrementLanded = () => {\n        this.landedCount += 1\n    }\n\n    incrementExited = () => {\n        this.exitedBoundaryCount += 1\n    }\n\n    incrementBreachedTimer = () => {\n        this.proximityTimer += 1\n    }\n}\n\n//# sourceURL=webpack://atc/./src/Application/StatsService.js?");

/***/ }),

/***/ "./src/Command/CommandParser/CommandParser.js":
/*!****************************************************!*\
  !*** ./src/Command/CommandParser/CommandParser.js ***!
  \****************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"commandMessage\": () => (/* binding */ commandMessage),\n/* harmony export */   \"parseAltitude\": () => (/* binding */ parseAltitude),\n/* harmony export */   \"parseCommand\": () => (/* binding */ parseCommand),\n/* harmony export */   \"parseHeading\": () => (/* binding */ parseHeading),\n/* harmony export */   \"parseHold\": () => (/* binding */ parseHold),\n/* harmony export */   \"parseRunway\": () => (/* binding */ parseRunway),\n/* harmony export */   \"parseSpeed\": () => (/* binding */ parseSpeed),\n/* harmony export */   \"parseWaypoint\": () => (/* binding */ parseWaypoint)\n/* harmony export */ });\nconst parseCommand = (rawCommand) => {\n    const command = rawCommand.toUpperCase()\n    let callSign = command.substring(0, 5).toUpperCase();\n    let actionCommands = command.substring(5);\n    let parsedHeading = parseHeading(actionCommands);\n    let parsedWaypoint = parseWaypoint(actionCommands);\n    let parsedRunway = parseRunway(actionCommands)\n\n    const heading = parsedWaypoint || parsedRunway ? null : parsedHeading\n    const waypoint = parsedHeading || parsedRunway ? null : parsedWaypoint\n\n    return {\n        callSign: callSign,\n        speed: parseSpeed(actionCommands),\n        heading: heading,\n        altitude: parseAltitude(actionCommands),\n        waypoint: waypoint,\n        runway: parsedRunway,\n        hold: parseHold(actionCommands)\n    }\n}\n\nconst commandMessage = (acceptedCommands) => {\n    if ([acceptedCommands.callSign, acceptedCommands.speed, acceptedCommands.heading, acceptedCommands.altitude, acceptedCommands.waypoint, acceptedCommands.runway, acceptedCommands.hold].every(value => value === undefined)) {\n        return 'Unrecognised command'\n    }\n    if ([acceptedCommands.speed, acceptedCommands.heading, acceptedCommands.altitude, acceptedCommands.waypoint, acceptedCommands.runway, acceptedCommands.hold].every(value => value === undefined)) {\n        return 'No valid commands'\n    }\n    return `${acceptedCommands.callSign}` +\n        `${acceptedCommands.speed ? ' Speed: ' + acceptedCommands.speed : ''}` +\n        `${acceptedCommands.heading ? ' Heading: ' + acceptedCommands.heading : ''}` +\n        `${acceptedCommands.altitude ? ' Altitude: ' + acceptedCommands.altitude + 'ft' : ''}` +\n        `${acceptedCommands.waypoint ? ' Waypoint: ' + acceptedCommands.waypoint : ''}` +\n        `${acceptedCommands.runway ? ' cleared to land runway ' + acceptedCommands.runway : ''}` +\n        `${Math.abs(acceptedCommands.hold) === 1 ? ` Holding to the ${acceptedCommands.hold === 1 ? 'right' : 'left'} ` : ''}`\n}\n\nconst parseSpeed = (command) => {\n    const match = command.match(/S(\\d{2,3})/g);\n    if (match && match.length === 1) {\n        return parseInt(match[0].substring(1))\n    }\n    return null\n}\n\nconst parseHeading = (command) => {\n    const match = command.match(/T(\\d{3})/g);\n    if (match && match.length === 1) {\n        let heading = parseInt(match[0].substring(1));\n        return heading === 0 ? 360 : heading\n    }\n    return null\n}\n\nconst parseAltitude = (command) => {\n    const match = command.match(/[A](\\d{1,3})/g);\n    if (match && match.length === 1) {\n        return parseInt(match[0].substring(1)) * 100\n    }\n    return null\n}\n\nconst parseWaypoint = (command) => {\n    const match = command.match(/[>](\\w{3})/g);\n    if (match && match.length === 1) {\n        return match[0].substring(1)\n    }\n    return null\n}\n\nconst parseRunway = (command) => {\n    const matches = command.match(/(.)*?ILS(\\d{1,2}[LRC])(.)*?/);\n    if (matches) {\n        return matches[2]\n    }\n    return null\n}\n\nconst parseHold = (command) => {\n    const match = command.match(/H[LR]/g);\n    if (match && match.length === 1) {\n        return match[0][1] === \"R\" ? 1 : -1\n    }\n    return null\n}\n\n\n\n//# sourceURL=webpack://atc/./src/Command/CommandParser/CommandParser.js?");

/***/ }),

/***/ "./src/Domain/Action/Action.js":
/*!*************************************!*\
  !*** ./src/Domain/Action/Action.js ***!
  \*************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"Altitude\": () => (/* binding */ Altitude),\n/* harmony export */   \"Heading\": () => (/* binding */ Heading),\n/* harmony export */   \"HoldingPattern\": () => (/* binding */ HoldingPattern),\n/* harmony export */   \"Landing\": () => (/* binding */ Landing),\n/* harmony export */   \"Speed\": () => (/* binding */ Speed),\n/* harmony export */   \"Waypoint\": () => (/* binding */ Waypoint)\n/* harmony export */ });\n/* harmony import */ var _utils_maths__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../utils/maths */ \"./src/utils/maths.js\");\n/* harmony import */ var _config_constants__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../config/constants */ \"./src/config/constants.js\");\n/* harmony import */ var _utils_geometry__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../utils/geometry */ \"./src/utils/geometry.js\");\n\n\n\n\nclass Action {\n    constructor(map, aeroplane, targetValue) {\n        this.map = map\n        this.aeroplane = aeroplane\n        this.targetValue = targetValue\n    }\n\n    type = () => {\n        return this.constructor.name\n    }\n\n    apply = () => {\n\n    };\n\n    isActionable = () => {\n\n    };\n\n    isValid = () => {\n\n    };\n\n    copy = (aeroplane) => {\n\n    }\n}\n\nclass Speed extends Action {\n    weightMultiplierMap = {\n        3: 1,\n        2: 2,\n        1: 3\n    };\n\n    constructor(map, aeroplane, targetSpeed) {\n        super(null, aeroplane, targetSpeed);\n    }\n\n    apply = () => {\n        if (this.aeroplane.speed < this.targetValue) {\n            const newValue = this.aeroplane.speed + this.weightMultiplierMap[this.aeroplane.weight]\n            this.aeroplane.speed = Math.min(newValue, this.targetValue)\n        }\n        if (this.aeroplane.speed > this.targetValue) {\n            const newValue = this.aeroplane.speed - this.weightMultiplierMap[this.aeroplane.weight]\n            this.aeroplane.speed = Math.max(newValue, this.targetValue)\n        }\n    }\n\n    isActionable = () => {\n        return this.aeroplane.speed !== this.targetValue\n    }\n\n    isValid = () => {\n        return this.targetValue\n            && this.targetValue !== this.aeroplane.speed\n            && this.targetValue >= _config_constants__WEBPACK_IMPORTED_MODULE_1__.MIN_SPEED\n    }\n\n    copy = (aeroplane) => {\n        return new Speed(this.map, aeroplane, this.targetValue)\n    }\n}\n\nclass Heading extends Action {\n    constructor(map, aeroplane, targetHeading) {\n        super(null, aeroplane, targetHeading);\n    }\n\n    apply = () => {\n        const currentHeading = this.aeroplane.heading\n        const targetHeading = this.targetValue\n\n        if (this._wouldEndUpBeyondTarget(targetHeading, currentHeading)) {\n            this.aeroplane.heading = targetHeading\n            return\n        }\n\n        if ((0,_utils_geometry__WEBPACK_IMPORTED_MODULE_2__.shortestAngle)(currentHeading, targetHeading) > 0) {\n            // turn right\n            this.aeroplane.heading = (this.aeroplane.heading + this._change_rate()) % 360;\n        } else {\n            // turn left\n            let newHeading = this.aeroplane.heading - this._change_rate();\n            this.aeroplane.heading = newHeading < 0 ? newHeading + 360 : newHeading;\n        }\n    };\n\n    _wouldEndUpBeyondTarget(targetHeading, currentHeading) {\n        return Math.abs(targetHeading - currentHeading) < this._change_rate();\n    }\n\n    _change_rate = () => {\n        if (this.aeroplane.weight === 1) {\n            return -0.002275 * this.aeroplane.speed + 5\n        } else if (this.aeroplane.weight === 2) {\n            return -0.002275 * this.aeroplane.speed + 4\n        } else {\n            return -0.002275 * this.aeroplane.speed + 3\n        }\n    }\n\n    isActionable = () => {\n        return this.aeroplane.heading !== this.targetValue\n    };\n\n    isValid = () => {\n        return this.targetValue\n            && this.targetValue !== this.aeroplane.heading\n            && this.targetValue >= 0\n            && this.targetValue <= 360\n    };\n\n    copy = (aeroplane) => {\n        return new Heading(this.map, aeroplane, this.targetValue)\n    }\n}\n\nclass Altitude extends Action {\n    constructor(map, aeroplane, targetAltitude) {\n        super(null, aeroplane, targetAltitude);\n    }\n\n    apply = () => {\n        if (this.aeroplane.altitude < this.targetValue) {\n            const newValue = this.aeroplane.altitude + 20\n            this.aeroplane.altitude = Math.min(newValue, this.targetValue)\n        }\n        if (this.aeroplane.altitude > this.targetValue) {\n            const newValue = this.aeroplane.altitude - 20\n            this.aeroplane.altitude = Math.max(newValue, this.targetValue)\n        }\n    }\n\n    isActionable = () => {\n        return this.aeroplane.altitude !== this.targetValue\n    }\n\n    isValid = () => {\n        return this.targetValue\n            && this.targetValue !== this.aeroplane.altitude\n            && this.targetValue >= _config_constants__WEBPACK_IMPORTED_MODULE_1__.MIN_ALTITUDE\n            && this.targetValue <= _config_constants__WEBPACK_IMPORTED_MODULE_1__.MAX_ALTITUDE\n            && this.targetValue % 20 === 0\n    }\n\n    copy = (aeroplane) => {\n        return new Altitude(this.map, aeroplane, this.targetValue)\n    }\n}\n\nclass Waypoint extends Action {\n    constructor(map, aeroplane, targetWaypoint) {\n        super(map, aeroplane, targetWaypoint);\n        this.map.features.waypoints.forEach(vor => {\n            if (vor.id === targetWaypoint) {\n                this.targetX = vor.x\n                this.targetY = vor.y\n            }\n        })\n\n        this.targetWaypoint = targetWaypoint\n        this.targetValue = this._determine_heading()\n    }\n\n    _determine_heading = () => {\n        const opposite = Math.abs(this.targetY - this.aeroplane.y)\n        const adjacent = Math.abs(this.targetX - this.aeroplane.x)\n        const theta = Math.round((0,_utils_maths__WEBPACK_IMPORTED_MODULE_0__.toDegrees)(Math.atan((opposite / adjacent))))\n\n        let heading;\n        if (this.targetX > this.aeroplane.x) {\n            if (this.targetY < this.aeroplane.y) {\n                heading = 90 - theta\n            } else {\n                heading = 90 + theta\n            }\n        } else {\n            if (this.targetY < this.aeroplane.y) {\n                heading = 270 + theta\n            } else {\n                heading = 270 - theta\n            }\n        }\n        return heading\n    }\n\n    isActionable = () => {\n        const distanceToWaypoint = (0,_utils_geometry__WEBPACK_IMPORTED_MODULE_2__.distance)(this.aeroplane.x, this.aeroplane.y, this.targetX, this.targetY)\n        const arrived = distanceToWaypoint <= 8\n        return !arrived\n    }\n\n    apply = () => {\n        const currentHeading = this.aeroplane.heading\n        const targetHeading = this._determine_heading()\n\n        if (this._wouldEndUpBeyondTarget(targetHeading, currentHeading)) {\n            this.aeroplane.heading = targetHeading\n            return\n        }\n\n        if ((0,_utils_geometry__WEBPACK_IMPORTED_MODULE_2__.shortestAngle)(currentHeading, targetHeading) > 0) {\n            // turn right\n            this.aeroplane.heading = (this.aeroplane.heading + this._change_rate()) % 360;\n        } else {\n            // turn left\n            let newHeading = this.aeroplane.heading - this._change_rate();\n            this.aeroplane.heading = newHeading < 0 ? newHeading + 360 : newHeading;\n        }\n    };\n\n    _wouldEndUpBeyondTarget(targetHeading, currentHeading) {\n        return Math.abs(targetHeading - currentHeading) < this._change_rate();\n    }\n\n    _change_rate = () => {\n        if (this.aeroplane.speed < 200) {\n            return 5\n        } else if (this.aeroplane.speed < 300) {\n            return 3\n        } else {\n            return 2\n        }\n    }\n\n    isValid = () => {\n        for (let x = 0; x < this.map.features.waypoints.length; x++) {\n            if (this.map.features.waypoints[x].id === this.targetWaypoint) {\n                return true\n            }\n        }\n        return false;\n    }\n\n    copy = (aeroplane) => {\n        return new Waypoint(this.map, aeroplane, this.targetWaypoint)\n    }\n}\n\nclass Landing extends Action {\n    constructor(map, aeroplane, targetRunway) {\n        super(map, aeroplane, targetRunway);\n        this.map = map\n        this.targetRunway = targetRunway\n        this.speedSet = false\n        this.waypointSet = false\n        this.executed = false\n    }\n\n    isActionable = () => {\n        return !this.executed\n    }\n\n    apply = () => {\n        if (!this.speedSet && !this.waypointSet) {\n            this.aeroplane.actions.push(new Speed(this.map, this.aeroplane, _config_constants__WEBPACK_IMPORTED_MODULE_1__.LANDING_SPEED))\n            this.aeroplane.actions.push(new Waypoint(this.map, this.aeroplane, this.targetRunway))\n            this.speedSet = true\n            this.waypointSet = true\n        }\n        const runway = this.map.getRunwayInfo(this.targetRunway)\n        const distanceToRunway = (0,_utils_geometry__WEBPACK_IMPORTED_MODULE_2__.distance)(this.aeroplane.x, this.aeroplane.y, runway.landingZone.x, runway.landingZone.y)\n\n        if (distanceToRunway < 5 && this.aeroplane.altitude < _config_constants__WEBPACK_IMPORTED_MODULE_1__.LANDED_ALTITUDE) {\n            this.executed = true\n        }\n\n        const rateOfDescent = (this.aeroplane.altitude - runway.altitude) / distanceToRunway * 2\n        this.aeroplane.altitude -= rateOfDescent\n    };\n\n    isValid = () => {\n        if (this.map.runwayExists(this.targetRunway)) {\n            const runway = this.map.getRunwayInfo(this.targetRunway)\n\n            const withinMaximumX = Math.abs(this.aeroplane.x - runway.ILS.innerMarker.x) <= _config_constants__WEBPACK_IMPORTED_MODULE_1__.ILS_MAX_X;\n            const withinMinimumX = Math.abs(this.aeroplane.x - runway.ILS.innerMarker.x) >= _config_constants__WEBPACK_IMPORTED_MODULE_1__.ILS_MIN_X;\n            const withinY = Math.abs(this.aeroplane.y - runway.ILS.innerMarker.y) <= 20;\n            const withinMaximumAltitude = Math.abs(this.aeroplane.altitude - runway.altitude) <= 3000;\n            const withinMaximumSpeed = this.aeroplane.speed <= _config_constants__WEBPACK_IMPORTED_MODULE_1__.MIN_APPROACH_SPEED;\n            const withinRunwayHeading = Math.abs(runway.heading - this.aeroplane.heading) <= 10;\n\n            return this._onCorrectSideOfRunway(this.aeroplane, runway)\n                && withinMaximumX\n                && withinMinimumX\n                && withinY\n                && withinMaximumAltitude\n                && withinMaximumSpeed\n                && withinRunwayHeading\n        }\n        return false\n    }\n\n    copy = (aeroplane) => {\n\n    }\n\n    _onCorrectSideOfRunway = (aeroplane, runway) => {\n        if (runway.heading <= 180 && runway.heading >= 0) {\n            return aeroplane.x < runway.landingZone.x\n        } else {\n            return aeroplane.x > runway.landingZone.x\n        }\n    }\n}\n\nclass HoldingPattern extends Action {\n    constructor(map, aeroplane, direction) {\n        const directionName = direction === 1 ? 'right' : 'left'\n        super(map, aeroplane, directionName);\n        this.map = map\n        this.direction = direction\n    }\n\n    isActionable = () => {\n        return true\n    }\n\n    isValid = () => {\n        return true\n    }\n\n    apply = () => {\n        const rateOfTurn = this._change_rate()\n        let newHeading = this.aeroplane.heading + (this.direction * rateOfTurn)\n        if (newHeading < 360) {\n            newHeading = 360 + newHeading\n        }\n        if (newHeading > 360) {\n            newHeading = newHeading - 360\n        }\n        this.aeroplane.heading = newHeading\n    };\n\n    copy = (aeroplane) => {\n        return new HoldingPattern(this.map, aeroplane, this.direction)\n    }\n\n    _change_rate = () => {\n        if (this.aeroplane.speed < 200) {\n            return {\n                1: 5,\n                2: 3,\n                3: 2,\n            }[this.aeroplane.weight]\n        } else if (this.aeroplane.speed < 300) {\n            return {\n                1: 3,\n                2: 2,\n                3: 2,\n            }[this.aeroplane.weight]\n        } else {\n            return {\n                1: 3,\n                2: 2,\n                3: 2,\n            }[this.aeroplane.weight]\n        }\n    }\n}\n\n\n//# sourceURL=webpack://atc/./src/Domain/Action/Action.js?");

/***/ }),

/***/ "./src/Domain/Aeroplane/Aeroplane.js":
/*!*******************************************!*\
  !*** ./src/Domain/Aeroplane/Aeroplane.js ***!
  \*******************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"Aeroplane\": () => (/* binding */ Aeroplane)\n/* harmony export */ });\n/* harmony import */ var _Action_Action__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../Action/Action */ \"./src/Domain/Action/Action.js\");\n/* harmony import */ var _utils_maths__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../utils/maths */ \"./src/utils/maths.js\");\n/* harmony import */ var _utils_geometry__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../utils/geometry */ \"./src/utils/geometry.js\");\n/* harmony import */ var _config_constants__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../config/constants */ \"./src/config/constants.js\");\n\n\n\n\n\nclass Aeroplane {\n    constructor(callSign, shortClass, x, y, speed, hdg, altitude, weight) {\n        this.callSign = callSign;\n        this.shortClass = shortClass;\n        this.weight = weight;\n        this.x = x;\n        this.y = y;\n        this.speed = speed;\n        this.heading = hdg;\n        this.altitude = altitude;\n        this.actions = []\n        this.breachingProximity = false\n        this.lastPositions = []\n        this.nextPositions = []\n\n        this.targetLocation = undefined\n        this.targetAltitude = undefined\n        this.targetSpeed = undefined\n    }\n\n    _clear_targets = () => {\n        const activeActions = this.actions.map(action => action.type())\n        if (activeActions.every(action => ![\"Waypoint\", \"Heading\", \"Landing\"].includes(action))) {\n            this.targetLocation = undefined\n        }\n        this.targetAltitude = activeActions.includes('Altitude') ? this.targetAltitude : undefined\n        this.targetSpeed = activeActions.includes('Speed') ? this.targetSpeed : undefined\n    }\n\n    _update_targets = () => {\n        // Add targets from current actions\n        this.actions.forEach(action => {\n            if (action.type() === \"Waypoint\") {\n                this.targetLocation = action.targetWaypoint\n            }\n            if ([\"Heading\", \"Landing\"].includes(action.type())) {\n                this.targetLocation = action.targetValue\n            }\n            if (action.type() === \"Altitude\") {\n                this.targetAltitude = action.targetValue\n            }\n            if (action.type() === \"Speed\") {\n                this.targetSpeed = action.targetValue\n            }\n        })\n    }\n\n    addAction = (action) => {\n        // Nothing overwrites Landing\n        if (this.actions.length > 0 && this.actions[0].type() === 'Landing') {\n            return\n        }\n\n        // Landing overwrites everything\n        if (action.type() === \"Landing\") {\n            this.actions = [action]\n            this._update_targets()\n            return\n        }\n\n        for (let x = 0; x < this.actions.length; x++) {\n            // replace same action\n            if (this.actions[x].type() === action.type()) {\n                this.actions[x] = action\n                this._update_targets()\n                return\n            }\n            // Directional actions override one another\n            const directionalActions = [\"HoldingPattern\", \"Heading\", \"Waypoint\"]\n            if (directionalActions.includes(action.type()) && directionalActions.includes(this.actions[x].type())) {\n                this.actions[x] = action\n                this._update_targets()\n                return\n            }\n        }\n        this.actions.push(action)\n        this._update_targets()\n    }\n\n    setSpeed = (map, speed) => {\n        const newSpeed = new _Action_Action__WEBPACK_IMPORTED_MODULE_0__.Speed(map, this, speed);\n        if (newSpeed.isValid()) {\n            this.addAction(newSpeed)\n            return speed\n        }\n    }\n\n    setHeading = (map, heading) => {\n        const newHeading = new _Action_Action__WEBPACK_IMPORTED_MODULE_0__.Heading(map, this, heading);\n        if (newHeading.isValid()) {\n            this.addAction(newHeading)\n            return heading\n        }\n    }\n\n    setAltitude = (map, altitude) => {\n        const newAltitude = new _Action_Action__WEBPACK_IMPORTED_MODULE_0__.Altitude(map, this, altitude);\n        if (newAltitude.isValid()) {\n            this.addAction(newAltitude)\n            return altitude\n        }\n    }\n\n    setWaypoint = (map, waypoint) => {\n        const newWaypoint = new _Action_Action__WEBPACK_IMPORTED_MODULE_0__.Waypoint(map, this, waypoint);\n        if (newWaypoint.isValid()) {\n            this.addAction(newWaypoint)\n            return waypoint\n        }\n    }\n\n    setLanding = (map, runway) => {\n        const newLanding = new _Action_Action__WEBPACK_IMPORTED_MODULE_0__.Landing(map, this, runway);\n        if (newLanding.isValid()) {\n            this.addAction(newLanding)\n            return runway\n        }\n    }\n\n    setHold = (map, direction) => {\n        const newHoldingPattern = new _Action_Action__WEBPACK_IMPORTED_MODULE_0__.HoldingPattern(map, this, direction);\n        if (newHoldingPattern.isValid()) {\n            this.addAction(newHoldingPattern)\n            return direction\n        }\n    }\n\n    _clean_actions = () => {\n        this.actions = this.actions.filter(action => action.isActionable())\n        this._clear_targets()\n    }\n\n    applyActions = () => {\n        this.actions.forEach(action => {\n            action.apply()\n        })\n\n        const headingRadians = (0,_utils_maths__WEBPACK_IMPORTED_MODULE_1__.toRadians)(this.heading)\n        const distancePerTick = 1 + ((this.speed - 100) / 20 * 0.5)\n        this.x = (0,_utils_maths__WEBPACK_IMPORTED_MODULE_1__.round)(this.x + distancePerTick * Math.sin(headingRadians), 2);\n        this.y = (0,_utils_maths__WEBPACK_IMPORTED_MODULE_1__.round)(this.y - distancePerTick * Math.cos(headingRadians), 2);\n\n        this.updateLastPositions(this.x, this.y)\n\n        this._clean_actions()\n    }\n\n    simulatePath = () => {\n        if (this.isLanding()) {\n            this.nextPositions = []\n        } else {\n            const simulatedAeroplane = new Aeroplane(null, null, this.x, this.y, this.speed, this.heading, this.altitude, this.weight)\n            this.actions.forEach(action => {\n                const copiedAction = action.copy(simulatedAeroplane);\n                if (copiedAction) {\n                    simulatedAeroplane.actions.push(copiedAction)\n                }\n            })\n\n            const projectedLocations = []\n            let altitudeMarker = false\n            for (let x = 0; x < _config_constants__WEBPACK_IMPORTED_MODULE_3__.NUM_PROJECTED_TICKS; x++) {\n                simulatedAeroplane.applyActions()\n                if (!altitudeMarker && this.isChangingAltitude() && simulatedAeroplane.altitude === this.targetAltitude) {\n                    projectedLocations.push({x: simulatedAeroplane.x, y: simulatedAeroplane.y, marker: true})\n                    altitudeMarker = true\n                }\n                projectedLocations.push({x: simulatedAeroplane.x, y: simulatedAeroplane.y, marker: false})\n            }\n            this.nextPositions = projectedLocations\n        }\n    }\n\n    updateLastPositions = (x, y) => {\n        if (this.lastPositions.length === _config_constants__WEBPACK_IMPORTED_MODULE_3__.SPEED_TAIL_LENGTH + 1) {\n            this.lastPositions = this.lastPositions.slice(1)\n        }\n\n        this.lastPositions.push({x: x, y: y})\n    }\n\n    withinPosition = (x, y) => {\n        const minX = x - 30\n        const maxX = x + 30\n        const minY = y - 30\n        const maxY = y + 30\n        const withinX = (minX < this.x && this.x < maxX)\n        const withinY = (minY < this.y && this.y < maxY)\n        return withinX && withinY\n    }\n\n    isOutsideBoundaries = (mapBoundaries, outsideCallback) => {\n        const outsideX = (this.x < mapBoundaries.minX || this.x > mapBoundaries.maxX)\n        const outsideY = (this.y < mapBoundaries.minY || this.y > mapBoundaries.maxY)\n        const outside = outsideX || outsideY;\n        if (outside && outsideCallback) {\n            outsideCallback()\n        }\n        return outside\n    }\n\n    isLanding = () => {\n        return this.actions.length > 0 && this.actions[0].type() === \"Landing\"\n    }\n\n    isHolding = () => {\n        return this.actions.length > 0 && this.actions.map(action => action.type()).includes(\"HoldingPattern\")\n    }\n\n    isChangingAltitude = () => {\n        return this.actions.length > 0 && this.actions.map(action => action.type()).includes(\"Altitude\")\n    }\n\n    hasLanded = (landedCallback) => {\n        const landed = this.altitude < _config_constants__WEBPACK_IMPORTED_MODULE_3__.LANDED_ALTITUDE;\n        if (landed && landedCallback) {\n            landedCallback()\n        }\n        return landed\n    }\n\n    proximalTo = (otherAeroplane) => {\n        const horizontalDistance = (0,_utils_geometry__WEBPACK_IMPORTED_MODULE_2__.distance)(this.x, this.y, otherAeroplane.x, otherAeroplane.y);\n        const verticalDistance = Math.abs(this.altitude - otherAeroplane.altitude)\n        return horizontalDistance < _config_constants__WEBPACK_IMPORTED_MODULE_3__.HORIZONTAL_SEPARATION_MINIMUM\n            && verticalDistance <= _config_constants__WEBPACK_IMPORTED_MODULE_3__.VERTICAL_SEPARATION_MINIMUM\n    }\n\n    breachingRestrictedZone = (map, zone) => {\n        const planeInverseY = map.maxY - this.y\n        return (0,_utils_geometry__WEBPACK_IMPORTED_MODULE_2__.isInsidePolygon)(zone.boundaries, this.x, planeInverseY) && this.breachingAltitudeRestriction(zone)\n    }\n\n    breachingAltitudeRestriction = (zone) => {\n        if (zone.minAltitude === null && zone.maxAltitude === null) {\n            return true\n        }\n        return this.altitude < zone.minAltitude || this.altitude > zone.maxAltitude\n    }\n\n    markBreachingProximityLimits = () => {\n        this.breachingProximity = true\n    }\n\n    markAdheringProximityLimits = () => {\n        this.breachingProximity = false\n    }\n}\n\n\n//# sourceURL=webpack://atc/./src/Domain/Aeroplane/Aeroplane.js?");

/***/ }),

/***/ "./src/Domain/GameMap/GameMap.js":
/*!***************************************!*\
  !*** ./src/Domain/GameMap/GameMap.js ***!
  \***************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"GameMap\": () => (/* binding */ GameMap)\n/* harmony export */ });\nclass GameMap {\n    constructor(mapConfig) {\n        this.name = mapConfig.name\n        this.shortCode = mapConfig.shortCode\n        this.defaultWaypoint = mapConfig.defaultWaypoint\n        this.maxX = mapConfig.maxX\n        this.maxY = mapConfig.maxY\n        this.focusableConfig = mapConfig.focusableConfig\n        this.mapBoundaries = {\n            minX: 0,\n            maxX: mapConfig.maxX,\n            minY: 0,\n            maxY: mapConfig.maxY,\n        }\n        this.features = mapConfig.features\n        this.terrain = mapConfig.terrain\n    }\n\n    runwayExists = (targetRunway) => {\n        for (let x = 0; x < this.features.runways.length; x++) {\n            let runway = this.features.runways[x]\n            if (runway.start.label === targetRunway || runway.end.label === targetRunway) {\n                return true\n            }\n        }\n        return false\n    }\n\n    getRunwayInfo = (targetRunway) => {\n        for (let x = 0; x < this.features.runways.length; x++) {\n            let runway = this.features.runways[x]\n            if (runway.start.label === targetRunway) {\n                return runway.start\n            }\n            if (runway.end.label === targetRunway) {\n                return runway.end\n            }\n        }\n        return null\n    }\n}\n\n//# sourceURL=webpack://atc/./src/Domain/GameMap/GameMap.js?");

/***/ }),

/***/ "./src/Interface/InterfaceController.js":
/*!**********************************************!*\
  !*** ./src/Interface/InterfaceController.js ***!
  \**********************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"InterfaceController\": () => (/* binding */ InterfaceController)\n/* harmony export */ });\n/* harmony import */ var _Command_CommandParser_CommandParser__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../Command/CommandParser/CommandParser */ \"./src/Command/CommandParser/CommandParser.js\");\n/* harmony import */ var _utils_timeFormatters__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../utils/timeFormatters */ \"./src/utils/timeFormatters.js\");\n/* harmony import */ var _elements__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./elements */ \"./src/Interface/elements.js\");\n/* harmony import */ var _States_CoreGamePlay__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../States/CoreGamePlay */ \"./src/States/CoreGamePlay.js\");\n/* harmony import */ var _States_Tutorial__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../States/Tutorial */ \"./src/States/Tutorial.js\");\n/* harmony import */ var _utils_maths__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../utils/maths */ \"./src/utils/maths.js\");\n\n\n\n\n\n\n\nclass TargetValue {\n    constructor(value) {\n        this.value = value\n        this.isTarget = true\n    }\n}\n\nclass CurrentValue {\n    constructor(value) {\n        this.value = value\n        this.isTarget = false\n    }\n}\n\nclass InterfaceController {\n    constructor(aeroplaneService) {\n        this.aeroplaneService = aeroplaneService\n\n        this.lastCallSign = null\n        this.selectedStrip = null\n        this.selectedCallSign = null\n\n        this.gamePaused = false;\n        this._init()\n    }\n\n    setStats = (landedCount, exitedCount, breachedRestrictions) => {\n        if (exitedCount > 0) {\n            document.getElementById(\"exited-count\").classList.remove('good')\n            document.getElementById(\"exited-count\").classList.add('bad')\n        } else {\n            document.getElementById(\"exited-count\").classList.remove('bad')\n            document.getElementById(\"exited-count\").classList.add('good')\n        }\n        if (breachedRestrictions > 0) {\n            document.getElementById(\"breached-restrictions\").classList.remove('good')\n            document.getElementById(\"breached-restrictions\").classList.add('bad')\n        } else {\n            document.getElementById(\"breached-restrictions\").classList.remove('bad')\n            document.getElementById(\"breached-restrictions\").classList.add('good')\n        }\n        document.getElementById(\"landed-count\").innerText = landedCount\n        document.getElementById(\"exited-count\").innerText = exitedCount\n        document.getElementById(\"breached-restrictions\").innerText = (0,_utils_timeFormatters__WEBPACK_IMPORTED_MODULE_1__.timeStringFromSeconds)(breachedRestrictions)\n    }\n\n    _drawGameModeButtons = () => {\n        document.getElementById(\"game\").addEventListener(\"click\", this._setGameMode)\n        document.getElementById(\"tutorial\").addEventListener(\"click\", this._setTutorialMode)\n    }\n\n    _setGameMode = () => {\n        this.hideHint()\n        this.blurAttention()\n        this.aeroplaneService.transitionTo(new _States_CoreGamePlay__WEBPACK_IMPORTED_MODULE_3__.CoreGamePlay())\n    }\n\n    _setTutorialMode = () => {\n        this.aeroplaneService.transitionTo(new _States_Tutorial__WEBPACK_IMPORTED_MODULE_4__.Tutorial(this.aeroplaneService.map, this))\n    }\n\n    showHint = (hintTitle, hintBodyBefore, hintCode, hintBodyAfter, confirmButtonText, confirmButtonCallback) => {\n        document.getElementById(\"hint\").style.display = 'none'\n\n        const title = document.getElementById('hint-title')\n        const bodyBefore = document.getElementById('hint-body-before')\n        const code = document.getElementById('hint-code')\n        const bodyAfter = document.getElementById('hint-body-after')\n        const confirmButton = document.getElementById(\"hint-confirm\")\n\n        // Hide optional elements\n        code.style.display = 'none'\n        bodyAfter.style.display = 'none'\n        confirmButton.style.display = 'none'\n\n        // Clear optional elements' content\n        code.innerText = ''\n        bodyAfter.innerText = ''\n        confirmButton.innerText = ''\n\n        // Always have a title and some content\n        title.innerText = hintTitle\n        bodyBefore.innerText = hintBodyBefore\n\n        // Display optional content\n        if (hintCode) {\n            code.innerText = hintCode\n            code.style.display = 'inline-block'\n        } else {\n            code.style.display = 'none'\n        }\n\n        if (hintBodyAfter) {\n            bodyAfter.innerText = hintBodyAfter\n            bodyAfter.style.display = 'inline-block'\n        } else {\n            bodyAfter.style.display = 'none'\n        }\n\n        if (confirmButtonText) {\n            confirmButton.innerText = confirmButtonText\n            confirmButton.style.display = 'inline-block'\n            document.getElementById(\"hint-confirm\").onclick = confirmButtonCallback\n        } else {\n            confirmButton.style.display = 'none'\n        }\n\n        document.getElementById(\"hint\").style.display = 'block'\n    }\n\n    hideHint = () => {\n        document.getElementById(\"hint\").style.display = 'none'\n    }\n\n    focusAttention = (focusableElementConfig) => {\n        const attentionElement = document.getElementById(\"attention-focus\");\n\n        attentionElement.style.left = `${(0,_utils_maths__WEBPACK_IMPORTED_MODULE_5__.round)(focusableElementConfig.minX, 0)}px`\n        attentionElement.style.top = `${focusableElementConfig.minY}px`\n\n        attentionElement.style.width = `${focusableElementConfig.maxX - focusableElementConfig.minX}px`\n        attentionElement.style.height = `${focusableElementConfig.maxY - focusableElementConfig.minY}px`\n\n        attentionElement.style.display = 'block'\n    }\n\n    blurAttention = () => {\n        document.getElementById(\"attention-focus\").style.display = 'none';\n    }\n\n    drawStrips = () => {\n        this.aeroplaneService.aeroplanes.forEach(plane => {\n            if (!this._getStripFor(plane.callSign)) {\n                this.addStrip(plane)\n            }\n        })\n    }\n\n    addStrip = (aeroplane) => {\n        // <div className=\"aeroplane-strip\">\n        //     <div className=\"overview\">\n        //         <div className=\"value\">\n        //             <p className=\"text\">BA123</p>\n        //         </div>\n        //         <div className=\"target\">\n        //             <p className=\"text\">27L</p>\n        //         </div>\n        //     </div>\n        //     <div className=\"separator\"></div>\n        //     <div className=\"actions-overview\">\n        //         <div className=\"action-target\">\n        //             <p className=\"text\">262</p>\n        //         </div>\n        //         <div className=\"action-target with-direction\">\n        //             <p className=\"text\">50</p>\n        //             <p className=\"text arrow\">↘︎︎</p>\n        //         </div>\n        //         <div className=\"action-target\">\n        //             <p className=\"text\">260</p>\n        //         </div>\n        //     </div>\n        // </div>\n        const sidebar = document.getElementById(\"sidebar\");\n        const strip = (0,_elements__WEBPACK_IMPORTED_MODULE_2__.div)([\"aeroplane-strip\"], aeroplane.callSign)\n\n        const overview = this._overviewBlock(aeroplane)\n        const separator = (0,_elements__WEBPACK_IMPORTED_MODULE_2__.div)([\"separator\"])\n        const actionsOverview = this._actionsOverviewBlock(aeroplane)\n\n        strip.appendChild(overview)\n        strip.appendChild(separator)\n        strip.appendChild(actionsOverview)\n\n        strip.addEventListener('click', () => this._selectStrip(strip))\n\n        sidebar.appendChild(strip)\n    }\n\n    updateStrips = () => {\n        this.aeroplaneService.aeroplanes.forEach(plane => {\n            const overviewValues = this._get_overview_values(plane)\n\n            // Location\n            const locationTextElement = document.getElementById(`${plane.callSign}-location`)\n            const locationColourClass = this._colour_class(overviewValues.location);\n            locationTextElement.classList.add(locationColourClass)\n            locationTextElement.classList.remove(this._invert(locationColourClass))\n            locationTextElement.innerText = overviewValues.location.value\n\n            // Altitude\n            const altitudeTextElement = document.getElementById(`${plane.callSign}-altitude`)\n            const altitudeColourClass = this._colour_class(overviewValues.altitude);\n            altitudeTextElement.classList.add(altitudeColourClass)\n            altitudeTextElement.classList.remove(this._invert(altitudeColourClass))\n            altitudeTextElement.innerText = overviewValues.altitude.value\n\n            // Speed\n            const speedTextElement = document.getElementById(`${plane.callSign}-speed`)\n            const speedColourClass = this._colour_class(overviewValues.speed);\n            speedTextElement.classList.add(speedColourClass)\n            speedTextElement.classList.remove(this._invert(speedColourClass))\n            speedTextElement.innerText = overviewValues.speed.value\n        })\n    }\n\n    clearInactiveStrips = () => {\n        const strips = document.querySelectorAll(\".aeroplane-strip\")\n        const aeroplaneCallSigns = this.aeroplaneService.aeroplanes.map(plane => plane.callSign)\n        strips.forEach(strip => {\n            if (!aeroplaneCallSigns.includes(strip.id)) {\n                strip.remove()\n            }\n        })\n    }\n\n    _init = () => {\n        this._setupCommandInterface()\n        this._setupClickInterface()\n        this._focusCommandEntry()\n        this._setupPlayPauseInterface()\n        this._setupButtonsInterface()\n        this._drawGameModeButtons()\n    }\n\n    _overviewBlock = (aeroplane) => {\n        const overview = (0,_elements__WEBPACK_IMPORTED_MODULE_2__.div)([\"overview\"])\n\n        //  Call Sign\n        const callSign = (0,_elements__WEBPACK_IMPORTED_MODULE_2__.div)([\"value\"])\n        const callSignText = (0,_elements__WEBPACK_IMPORTED_MODULE_2__.p)([\"text\"])\n        callSignText.innerText = aeroplane.callSign\n        callSign.appendChild(callSignText)\n\n        //  Target\n        const target = (0,_elements__WEBPACK_IMPORTED_MODULE_2__.div)([\"value\"])\n        const targetText = (0,_elements__WEBPACK_IMPORTED_MODULE_2__.p)([\"text\", \"center\"])\n        targetText.innerText = \"\"\n        target.appendChild(targetText)\n\n        //  Short class\n        const shortClass = (0,_elements__WEBPACK_IMPORTED_MODULE_2__.div)([\"value\"])\n        const shortClassText = (0,_elements__WEBPACK_IMPORTED_MODULE_2__.p)([\"text\", \"right\", \"short-class\"])\n        shortClassText.innerText = aeroplane.shortClass\n        shortClass.appendChild(shortClassText)\n\n        overview.appendChild(callSign)\n        overview.appendChild(target)\n        overview.appendChild(shortClass)\n\n        return overview\n    }\n\n    _get_location = (aeroplane) => {\n        if (aeroplane.isLanding()) {\n            return new TargetValue('Landing')\n        } else if (aeroplane.isHolding()) {\n            return new TargetValue(`Hold`)\n        } else {\n            if (aeroplane.targetLocation) {\n                return new TargetValue(aeroplane.targetLocation)\n            }\n            return new CurrentValue(aeroplane.heading)\n        }\n    }\n\n    _get_altitude = (aeroplane) => {\n        if (!aeroplane.isLanding()) {\n            if (aeroplane.targetAltitude) {\n                return new TargetValue(aeroplane.targetAltitude)\n            }\n            return new CurrentValue(aeroplane.altitude)\n        }\n        return new CurrentValue('')\n    }\n\n    _get_speed = (aeroplane) => {\n        if (!aeroplane.isLanding()) {\n            if (aeroplane.targetSpeed) {\n                return new TargetValue(aeroplane.targetSpeed)\n            }\n            return new CurrentValue(aeroplane.speed)\n        }\n        return new CurrentValue('')\n    }\n\n    _get_overview_values = (aeroplane) => {\n        return {\n            location: this._get_location(aeroplane),\n            altitude: this._get_altitude(aeroplane),\n            speed: this._get_speed(aeroplane)\n        }\n    }\n\n    _colour_class = (value) => {\n        if (value.isTarget) {\n            return 'target-value'\n        }\n        return 'current-value'\n    }\n\n    _invert = (cls) => {\n        if (cls === 'target-value') {\n            return 'current-value'\n        }\n        return 'target-value'\n    }\n\n    _actionsOverviewBlock = (aeroplane) => {\n        const actionsOverview = (0,_elements__WEBPACK_IMPORTED_MODULE_2__.div)([\"actions-overview\"])\n\n        const overviewValues = this._get_overview_values(aeroplane)\n\n        //  Location\n        const location = (0,_elements__WEBPACK_IMPORTED_MODULE_2__.div)([\"action-target\"])\n        const locationText = (0,_elements__WEBPACK_IMPORTED_MODULE_2__.p)([\"text\", this._colour_class(overviewValues.location)], `${aeroplane.callSign}-location`)\n        locationText.innerText = overviewValues.location.value\n        location.appendChild(locationText)\n\n        //  Speed\n        const speed = (0,_elements__WEBPACK_IMPORTED_MODULE_2__.div)([\"action-target\"])\n        const speedText = (0,_elements__WEBPACK_IMPORTED_MODULE_2__.p)([\"text\", this._colour_class(overviewValues.speed), \"center\"], `${aeroplane.callSign}-speed`)\n        speedText.innerText = overviewValues.speed.value\n        speed.appendChild(speedText)\n\n        //  Altitude\n        const altitude = (0,_elements__WEBPACK_IMPORTED_MODULE_2__.div)([\"action-target\"])\n        const altitudeText = (0,_elements__WEBPACK_IMPORTED_MODULE_2__.p)([\"text\", this._colour_class(overviewValues.altitude), \"right\"], `${aeroplane.callSign}-altitude`)\n        altitudeText.innerText = overviewValues.altitude.value\n        altitude.appendChild(altitudeText)\n\n\n        actionsOverview.appendChild(location)\n        actionsOverview.appendChild(speed)\n        actionsOverview.appendChild(altitude)\n\n        return actionsOverview\n    }\n\n    _clearStripFocus = () => {\n        try {\n            this.selectedStrip.classList.remove('selected')\n        } catch (e) {\n\n        }\n    }\n\n    _selectStrip = (strip) => {\n        this._clearStripFocus()\n        strip.classList.add('selected')\n        this.selectedStrip = strip\n        this.selectedCallSign = strip.id\n        this.lastCallSign = strip.id\n        let commandField = document.getElementById(\"command-entry-field\");\n        commandField.value = this.selectedCallSign\n        this._focusCommandEntry()\n    }\n\n    _getStripFor = (callSign) => {\n        return document.getElementById(callSign)\n    }\n\n    _newCommandHandler = () => {\n        let commandField = document.getElementById(\"command-entry-field\");\n        const acceptedCommands = this.aeroplaneService.sendCommand(commandField.value)\n        this.lastCallSign = acceptedCommands.callSign\n        commandField.value = \"\"\n        this._clearStripFocus()\n        this._displayMessage((0,_Command_CommandParser_CommandParser__WEBPACK_IMPORTED_MODULE_0__.commandMessage)(acceptedCommands))\n        setTimeout(() => {\n            this._clearMessage()\n            this.selectedCallSign = \"\"\n        }, 2000)\n    };\n\n    clearCommandEntry = () => {\n        let commandField = document.getElementById(\"command-entry-field\");\n        commandField.value = \"\"\n    }\n\n    _displayMessage = (message) => {\n        let messageContainer = document.getElementById(\"message-container\");\n        let messageField = document.getElementById(\"message-display\");\n        messageContainer.style.display = \"flex\"\n        messageField.innerText = message\n    }\n\n    _clearMessage = () => {\n        document.getElementById(\"message-display\").innerText = \"\"\n        document.getElementById(\"message-container\").style.display = \"none\"\n    }\n\n    _previousCallSignHandler = () => {\n        let commandField = document.getElementById(\"command-entry-field\");\n        commandField.value = this.lastCallSign\n        this.selectedCallSign = this.lastCallSign\n        const strip = this._getStripFor(this.lastCallSign)\n        this._selectStrip(strip)\n    };\n\n    _setupCommandInterface = () => {\n        document.getElementById(\"send-command\").addEventListener(\"click\", this._newCommandHandler)\n        document.addEventListener('keyup', (e) => {\n            if (e.code === \"Enter\") {\n                this._newCommandHandler()\n            }\n        });\n        document.addEventListener('keyup', (e) => {\n            if (e.code === \"ArrowUp\") {\n                this._previousCallSignHandler()\n            }\n        });\n    }\n\n    _setupPlayPauseInterface = () => {\n        document.getElementById(\"pause-play\").addEventListener(\"click\", this._playPauseHandler)\n    }\n\n    _playPauseHandler = () => {\n        if (this.gamePaused) {\n            this._unPauseGame()\n        } else {\n            this._pauseGame()\n        }\n    }\n\n    _pauseGame = () => {\n        document.getElementById(\"pause-play\").style.backgroundColor = 'rgba(255,2,109,0.5)'\n        this.gamePaused = true\n    }\n\n    _unPauseGame = () => {\n        this._hideHelpMenu()\n        document.getElementById(\"pause-play\").style.backgroundColor = 'rgba(22, 145, 203, 0.5)'\n        this.gamePaused = false\n    }\n\n    _focusCommandEntry = () => {\n        document.getElementById(\"command-entry-field\").focus()\n    }\n\n    _setupClickInterface = () => {\n        document.addEventListener('click', (e) => {\n            const clickedX = e.clientX\n            const clickedY = e.clientY\n            const callSign = this.aeroplaneService.getCallSignByPosition(clickedX, clickedY)\n            if (callSign) {\n                let commandField = document.getElementById(\"command-entry-field\");\n                commandField.value = callSign\n                this.lastCallSign = callSign\n                const strip = this._getStripFor(callSign)\n                this._selectStrip(strip)\n                this._focusCommandEntry()\n            }\n        });\n    }\n\n    _setupButtonsInterface = () => {\n        const helpButton = document.getElementById('help')\n        helpButton.addEventListener('click', (_) => {\n            this._handleHelpMenu()\n        });\n    }\n\n    _handleHelpMenu = () => {\n        const helpMenu = document.getElementById('help-menu')\n        if (this.gamePaused) {\n            const display = helpMenu.style.display;\n            if (display === '' || display === 'none') {\n                this._showHelpMenu()\n            } else {\n                this._hideHelpMenu()\n            }\n        } else {\n            this._pauseGame()\n            this._showHelpMenu()\n        }\n    }\n\n    _hideHelpMenu = () => {\n        const helpMenu = document.getElementById('help-menu')\n        helpMenu.style.display = 'none'\n    }\n\n    _showHelpMenu = () => {\n        const helpMenu = document.getElementById('help-menu')\n        helpMenu.style.display = 'block'\n    }\n\n}\n\n//# sourceURL=webpack://atc/./src/Interface/InterfaceController.js?");

/***/ }),

/***/ "./src/Interface/UIController.js":
/*!***************************************!*\
  !*** ./src/Interface/UIController.js ***!
  \***************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"UIController\": () => (/* binding */ UIController)\n/* harmony export */ });\n/* harmony import */ var _config_colours__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../config/colours */ \"./src/config/colours.js\");\n/* harmony import */ var _config_constants__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../config/constants */ \"./src/config/constants.js\");\n/* harmony import */ var _utils_maths__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../utils/maths */ \"./src/utils/maths.js\");\n\n\n\n\nclass UIController {\n    constructor(map, aeroplaneService) {\n        this.map = map\n        this.aeroplaneService = aeroplaneService\n\n        this.backgroundCanvas = document.getElementById(\"background\");\n        this.backgroundContext = this.backgroundCanvas.getContext('2d');\n        this.featuresCanvas = document.getElementById(\"features\");\n        this.featuresContext = this.featuresCanvas.getContext('2d');\n        this.aeroplaneCanvas = document.getElementById(\"aeroplanes\");\n        this.aeroplaneContext = this.aeroplaneCanvas.getContext('2d');\n\n        this.mapBoundaries = {\n            minX: 0,\n            maxX: document.body.clientWidth,\n            minY: 0,\n            maxY: document.body.clientHeight,\n        }\n\n        this.initBackgroundLayer()\n        this.initFeaturesLayer()\n        this.initAeroplaneLayer()\n\n        this.initFeatures()\n    }\n\n    initBackgroundLayer = () => {\n        this.backgroundCanvas.width = document.body.clientWidth;\n        this.backgroundCanvas.height = document.body.clientHeight;\n\n        this.backgroundContext.fillStyle = _config_colours__WEBPACK_IMPORTED_MODULE_0__.COLOURS.BACKGROUND;\n        this.backgroundContext.fillRect(0, 0, this.backgroundCanvas.width, this.backgroundCanvas.height)\n    }\n\n    initFeaturesLayer = () => {\n        this.featuresCanvas.width = document.body.clientWidth;\n        this.featuresCanvas.height = document.body.clientHeight;\n    }\n\n    initAeroplaneLayer = () => {\n        this.aeroplaneCanvas.width = document.body.clientWidth;\n        this.aeroplaneCanvas.height = document.body.clientHeight;\n    }\n\n    clearAeroplaneLayer = () => {\n        this.aeroplaneContext.clearRect(0, 0, document.body.clientWidth, document.body.clientHeight);\n    }\n\n    initFeatures = () => {\n        this._drawExclusionZones(this.map.features.exclusionZones)\n        this._drawVORs(this.map.features.waypoints)\n        this._drawRunways(this.map.features.runways)\n        this._drawILSFeathers(this.map.features.runways)\n        this._drawMapLines(this.map.features.mapLines)\n        this._drawMapCrosses(this.map.features.crosses)\n        this._drawTallStructures(this.map.features.tallStructures)\n        this._drawTerrain(this.map.terrain)\n    }\n\n    drawAeroplanes = () => {\n        this.aeroplaneService.aeroplanes.forEach(plane => {\n            this._drawAeroplanePosition(plane)\n            this._drawAeroplaneSpeedTail(plane)\n            this._drawHeadingLabel(plane)\n            this._drawSpeedLabel(plane)\n            this._drawAltitudeLabel(plane)\n            this._drawCallSignLabel(plane)\n            this._drawProjectedPath(plane)\n        })\n    }\n\n    _drawExclusionZones = (exclusionZones) => {\n        exclusionZones.forEach(zone => {\n            const severityColourMap = {\n                critical: {\n                    solid: _config_colours__WEBPACK_IMPORTED_MODULE_0__.COLOURS.RED,\n                    transparent: _config_colours__WEBPACK_IMPORTED_MODULE_0__.COLOURS.RED_TRANSPARENT\n                },\n                moderate: {\n                    solid: _config_colours__WEBPACK_IMPORTED_MODULE_0__.COLOURS.ORANGE,\n                    transparent: _config_colours__WEBPACK_IMPORTED_MODULE_0__.COLOURS.ORANGE_TRANSPARENT\n                },\n                informational: {\n                    solid: _config_colours__WEBPACK_IMPORTED_MODULE_0__.COLOURS.BLUE,\n                    transparent: _config_colours__WEBPACK_IMPORTED_MODULE_0__.COLOURS.BLUE_TRANSPARENT\n                }\n            }\n            // Border\n            this.featuresContext.strokeStyle = severityColourMap[zone.level].solid;\n            this.featuresContext.lineWidth = 3;\n            this.featuresContext.lineJoin = 'round';\n            this.featuresContext.setLineDash([zone.dashes]);\n            this.featuresContext.beginPath();\n            for (let x = 0; x < zone.boundaries.length; x++) {\n                let boundary = zone.boundaries[x]\n                if (x === 0) {\n                    this.featuresContext.moveTo(boundary.x, boundary.y)\n                } else {\n                    this.featuresContext.lineTo(boundary.x, boundary.y)\n                }\n\n            }\n            this.featuresContext.closePath()\n            this.featuresContext.stroke();\n\n            // Fill\n            if (zone.level !== 'informational') {\n                this.featuresContext.fillStyle = severityColourMap[zone.level].transparent;\n                this.featuresContext.beginPath();\n                for (let x = 0; x < zone.boundaries.length; x++) {\n                    let boundary = zone.boundaries[x]\n                    if (x === 0) {\n                        this.featuresContext.moveTo(boundary.x, boundary.y)\n                    } else {\n                        this.featuresContext.lineTo(boundary.x, boundary.y)\n                    }\n                }\n                this.featuresContext.closePath()\n                this.featuresContext.fill();\n            }\n\n            // Label\n            this.featuresContext.fillStyle = _config_colours__WEBPACK_IMPORTED_MODULE_0__.COLOURS.WHITE;\n            this.featuresContext.font = \"12px Courier New\";\n            this.featuresContext.beginPath();\n            this.featuresContext.fillText(zone.label.text, zone.label.location.x, zone.label.location.y);\n\n            const labelHeight = this.featuresContext.measureText(`${zone.label.text}`).fontBoundingBoxAscent;\n            let minAltitudeLabel;\n            if (zone.minAltitude) {\n                minAltitudeLabel = `${zone.minAltitude / 100}`;\n                this.featuresContext.fillStyle = _config_colours__WEBPACK_IMPORTED_MODULE_0__.COLOURS.YELLOW;\n                this.featuresContext.font = \"12px Courier New\";\n                this.featuresContext.beginPath();\n                this.featuresContext.fillText(minAltitudeLabel, zone.label.location.x, zone.label.location.y + labelHeight);\n            }\n            if (zone.minAltitude && zone.maxAltitude) {\n                const maxAltitudeLabel = `${zone.maxAltitude / 100}`;\n                const minAltitudeLabelWidth = this.featuresContext.measureText(minAltitudeLabel).width;\n                this.featuresContext.fillStyle = _config_colours__WEBPACK_IMPORTED_MODULE_0__.COLOURS.WHITE;\n                this.featuresContext.font = \"12px Courier New\";\n                this.featuresContext.beginPath();\n                this.featuresContext.fillText(maxAltitudeLabel, zone.label.location.x + minAltitudeLabelWidth + 4, zone.label.location.y + labelHeight);\n            }\n        })\n    }\n\n    _drawRunways = (runways) => {\n        runways.forEach(runway => {\n            this.featuresContext.strokeStyle = _config_colours__WEBPACK_IMPORTED_MODULE_0__.COLOURS.MINT;\n            this.featuresContext.lineWidth = 4;\n            this.featuresContext.setLineDash([]);\n            this.featuresContext.beginPath();\n            this.featuresContext.moveTo(runway.start.ILS.innerMarker.x, runway.start.ILS.innerMarker.y)\n            this.featuresContext.lineTo(runway.end.ILS.innerMarker.x, runway.end.ILS.innerMarker.y)\n            this.featuresContext.stroke();\n            // Labels\n            this.featuresContext.fillStyle = _config_colours__WEBPACK_IMPORTED_MODULE_0__.COLOURS.WHITE;\n            this.featuresContext.beginPath();\n            this.featuresContext.font = \"12px Courier New\";\n            this.featuresContext.fillText(runway.start.label, runway.start.ILS.innerMarker.x - 20, runway.start.ILS.innerMarker.y - 5);\n            this.featuresContext.fillText(runway.end.label, runway.end.ILS.innerMarker.x + 10, runway.end.ILS.innerMarker.y - 5);\n\n        })\n    }\n\n    _drawILSFeathers = (runways) => {\n        runways.forEach(runway => {\n            this.featuresContext.strokeStyle = _config_colours__WEBPACK_IMPORTED_MODULE_0__.COLOURS.GREY;\n            this.featuresContext.fillStyle = _config_colours__WEBPACK_IMPORTED_MODULE_0__.COLOURS.GREY_TRANSPARENT\n\n            const spikiness = 15\n            const spread = 20;\n\n            // Feathers\n            this.featuresContext.lineWidth = 1;\n            this.featuresContext.setLineDash([4]);\n            this.featuresContext.beginPath();\n            this.featuresContext.moveTo(runway.start.ILS.innerMarker.x, runway.start.ILS.innerMarker.y)\n            this.featuresContext.lineTo(runway.start.ILS.outerMarker.x - spikiness, runway.start.ILS.outerMarker.y - spread)\n            this.featuresContext.lineTo(runway.start.ILS.outerMarker.x, runway.start.ILS.outerMarker.y)\n            this.featuresContext.lineTo(runway.start.ILS.outerMarker.x - spikiness, runway.start.ILS.outerMarker.y + spread)\n            this.featuresContext.lineTo(runway.start.ILS.innerMarker.x, runway.start.ILS.innerMarker.y)\n\n            this.featuresContext.moveTo(runway.end.ILS.innerMarker.x, runway.end.ILS.innerMarker.y)\n            this.featuresContext.lineTo(runway.end.ILS.outerMarker.x + spikiness, runway.end.ILS.outerMarker.y - spread)\n            this.featuresContext.lineTo(runway.end.ILS.outerMarker.x, runway.end.ILS.outerMarker.y)\n            this.featuresContext.lineTo(runway.end.ILS.outerMarker.x + spikiness, runway.end.ILS.outerMarker.y + spread)\n            this.featuresContext.lineTo(runway.end.ILS.innerMarker.x, runway.end.ILS.innerMarker.y)\n            this.featuresContext.stroke();\n\n            // Landing command limits indicator\n            this.featuresContext.lineWidth = 2;\n            this.featuresContext.setLineDash([1]);\n            this.featuresContext.beginPath();\n            this.featuresContext.moveTo(runway.start.ILS.outerMarker.x, runway.start.ILS.outerMarker.y)\n            this.featuresContext.lineTo(runway.start.ILS.innerMarker.x - _config_constants__WEBPACK_IMPORTED_MODULE_1__.ILS_MIN_X, runway.start.ILS.innerMarker.y)\n            this.featuresContext.moveTo(runway.end.ILS.outerMarker.x, runway.end.ILS.outerMarker.y)\n            this.featuresContext.lineTo(runway.end.ILS.innerMarker.x + _config_constants__WEBPACK_IMPORTED_MODULE_1__.ILS_MIN_X, runway.end.ILS.innerMarker.y)\n            this.featuresContext.stroke();\n        })\n    }\n\n    _drawMapLines = (mapLines) => {\n        mapLines.forEach(line => {\n            this.featuresContext.strokeStyle = _config_colours__WEBPACK_IMPORTED_MODULE_0__.COLOURS.WHITE_TRANSPARENT;\n            this.featuresContext.lineWidth = 1;\n            this.featuresContext.setLineDash([line.dashes]);\n            this.featuresContext.beginPath();\n            this.featuresContext.moveTo(line.start.x, line.start.y);\n            this.featuresContext.lineTo(line.end.x, line.end.y);\n            this.featuresContext.stroke();\n        })\n    }\n\n    _drawMapCrosses = (crosses) => {\n        crosses.forEach(cross => {\n            this.featuresContext.strokeStyle = _config_colours__WEBPACK_IMPORTED_MODULE_0__.COLOURS.WHITE;\n            this.featuresContext.lineWidth = 2;\n            this.featuresContext.setLineDash([]);\n            this.featuresContext.beginPath();\n            this.featuresContext.moveTo(cross.x - 4, cross.y);\n            this.featuresContext.lineTo(cross.x + 4, cross.y);\n            this.featuresContext.moveTo(cross.x, cross.y - 4);\n            this.featuresContext.lineTo(cross.x, cross.y + 4);\n            this.featuresContext.stroke();\n        })\n    }\n\n    _drawTallStructures = (structures) => {\n        structures.forEach(structure => {\n            this.featuresContext.fillStyle = _config_colours__WEBPACK_IMPORTED_MODULE_0__.COLOURS.WHITE;\n            this.featuresContext.lineWidth = 1;\n            this.featuresContext.setLineDash([]);\n            this.featuresContext.beginPath();\n            this.featuresContext.moveTo(structure.x - 5, structure.y + 5);\n            this.featuresContext.lineTo(structure.x, structure.y - 5);\n            this.featuresContext.lineTo(structure.x + 5, structure.y + 5);\n            this.featuresContext.closePath();\n            this.featuresContext.fill();\n\n            this.featuresContext.font = \"12px Courier New\";\n            this.featuresContext.beginPath();\n            this.featuresContext.fillText(structure.label, structure.x + 5, structure.y - 5);\n        })\n    }\n\n    _drawAeroplanePosition = (aeroplane) => {\n        if (aeroplane.breachingProximity) {\n            this.aeroplaneContext.strokeStyle = _config_colours__WEBPACK_IMPORTED_MODULE_0__.COLOURS.RED;\n        } else {\n            this.aeroplaneContext.strokeStyle = _config_colours__WEBPACK_IMPORTED_MODULE_0__.COLOURS.YELLOW;\n        }\n        // Construct diamond shape\n        const radius = 6\n        this.aeroplaneContext.lineWidth = 1;\n        this.aeroplaneContext.beginPath();\n        this.aeroplaneContext.moveTo(aeroplane.x, aeroplane.y - radius)\n        this.aeroplaneContext.lineTo(aeroplane.x + radius, aeroplane.y)\n        this.aeroplaneContext.lineTo(aeroplane.x, aeroplane.y + radius)\n        this.aeroplaneContext.lineTo(aeroplane.x - radius, aeroplane.y)\n        this.aeroplaneContext.closePath()\n        this.aeroplaneContext.stroke();\n    }\n\n    _drawAeroplaneSpeedTail = (aeroplane) => {\n        if (aeroplane.breachingProximity) {\n            this.aeroplaneContext.strokeStyle = _config_colours__WEBPACK_IMPORTED_MODULE_0__.COLOURS.RED;\n        } else {\n            this.aeroplaneContext.strokeStyle = _config_colours__WEBPACK_IMPORTED_MODULE_0__.COLOURS.YELLOW;\n        }\n        for (let x = 0; x < aeroplane.lastPositions.length - 2; x += 2) {\n            let markerX = aeroplane.lastPositions[x].x\n            let markerY = aeroplane.lastPositions[x].y\n            this.aeroplaneContext.beginPath();\n            const offset = 5\n            this.aeroplaneContext.moveTo(markerX - offset, markerY + offset)\n            this.aeroplaneContext.lineTo(markerX + offset / 1.2, markerY - offset / 1.2)\n            this.aeroplaneContext.stroke();\n        }\n    }\n\n    _drawHeadingLabel = (aeroplane) => {\n        if (aeroplane.breachingProximity) {\n            this.aeroplaneContext.fillStyle = _config_colours__WEBPACK_IMPORTED_MODULE_0__.COLOURS.RED;\n        } else {\n            this.aeroplaneContext.fillStyle = _config_colours__WEBPACK_IMPORTED_MODULE_0__.COLOURS.MINT;\n        }\n        this.aeroplaneContext.font = \"bold 12px Courier New\";\n        this.aeroplaneContext.beginPath();\n        this.aeroplaneContext.fillText(`${(0,_utils_maths__WEBPACK_IMPORTED_MODULE_2__.round)(aeroplane.heading, 0)}`, aeroplane.x - 20, aeroplane.y - 20);\n    }\n\n    _drawSpeedLabel = (aeroplane) => {\n        if (aeroplane.breachingProximity) {\n            this.aeroplaneContext.fillStyle = _config_colours__WEBPACK_IMPORTED_MODULE_0__.COLOURS.RED;\n        } else {\n            this.aeroplaneContext.fillStyle = _config_colours__WEBPACK_IMPORTED_MODULE_0__.COLOURS.YELLOW;\n        }\n        this.aeroplaneContext.font = \"bold 12px Courier New\";\n        this.aeroplaneContext.beginPath();\n        const headingLabelWidth = this.aeroplaneContext.measureText(`${(0,_utils_maths__WEBPACK_IMPORTED_MODULE_2__.round)(aeroplane.heading, 0)}`).width;\n        this.aeroplaneContext.fillText(`${(0,_utils_maths__WEBPACK_IMPORTED_MODULE_2__.round)(aeroplane.speed, 0)}`, aeroplane.x - 20 + headingLabelWidth + 5, aeroplane.y - 20);\n    }\n\n    _drawAltitudeLabel = (aeroplane) => {\n        if (aeroplane.breachingProximity) {\n            this.aeroplaneContext.fillStyle = _config_colours__WEBPACK_IMPORTED_MODULE_0__.COLOURS.RED;\n        } else {\n            this.aeroplaneContext.fillStyle = _config_colours__WEBPACK_IMPORTED_MODULE_0__.COLOURS.MINT;\n        }\n        this.aeroplaneContext.font = \"bold 12px Courier New\";\n        this.aeroplaneContext.beginPath();\n        const headingLabelWidth = this.aeroplaneContext.measureText(`${(0,_utils_maths__WEBPACK_IMPORTED_MODULE_2__.round)(aeroplane.heading, 0)}`).width;\n        const speedLabelWidth = this.aeroplaneContext.measureText(`${(0,_utils_maths__WEBPACK_IMPORTED_MODULE_2__.round)(aeroplane.speed, 0)}`).width;\n        this.aeroplaneContext.fillText(`${Math.round(aeroplane.altitude / 100)}`, aeroplane.x - 20 + (headingLabelWidth + 5) + (speedLabelWidth + 5), aeroplane.y - 20);\n    }\n\n    _drawCallSignLabel = (aeroplane) => {\n        if (aeroplane.breachingProximity) {\n            this.aeroplaneContext.fillStyle = _config_colours__WEBPACK_IMPORTED_MODULE_0__.COLOURS.RED;\n        } else {\n            this.aeroplaneContext.fillStyle = _config_colours__WEBPACK_IMPORTED_MODULE_0__.COLOURS.MINT;\n        }\n        this.aeroplaneContext.font = \"bold 12px Courier New\";\n        this.aeroplaneContext.beginPath();\n        this.aeroplaneContext.fillText(aeroplane.callSign, aeroplane.x - 20, aeroplane.y - 30);\n    }\n\n    _drawProjectedPath = (aeroplane) => {\n        if (aeroplane.nextPositions.length > 0) {\n            const firstX = aeroplane.nextPositions[0].x\n            const firstY = aeroplane.nextPositions[0].y\n            const lastX = aeroplane.nextPositions[aeroplane.nextPositions.length - 1].x\n            const lastY = aeroplane.nextPositions[aeroplane.nextPositions.length - 1].y\n\n            const gradient = this.aeroplaneContext.createLinearGradient(firstX, firstY, lastX, lastY);\n            gradient.addColorStop(0, _config_colours__WEBPACK_IMPORTED_MODULE_0__.COLOURS.GREY);\n            gradient.addColorStop(1, _config_colours__WEBPACK_IMPORTED_MODULE_0__.COLOURS.GREY_TRANSPARENT);\n\n            this.aeroplaneContext.strokeStyle = gradient;\n            this.aeroplaneContext.lineWidth = 2;\n\n            // Projected path\n            this.aeroplaneContext.beginPath();\n            this.aeroplaneContext.moveTo(aeroplane.nextPositions[0].x, aeroplane.nextPositions[0].y)\n            aeroplane.nextPositions.forEach(position => {\n                this.aeroplaneContext.lineTo(position.x, position.y)\n            })\n            this.aeroplaneContext.stroke();\n\n            // Marker\n            aeroplane.nextPositions.forEach(position => {\n                if (position.marker) {\n                    this._drawMarker(position.x, position.y)\n                }\n            })\n        }\n    }\n\n    _drawMarker = (x, y) => {\n        this.aeroplaneContext.strokeStyle = _config_colours__WEBPACK_IMPORTED_MODULE_0__.COLOURS.MINT;\n        this.aeroplaneContext.lineWidth = 2;\n        this.aeroplaneContext.beginPath();\n        this.aeroplaneContext.moveTo(x - 4, y);\n        this.aeroplaneContext.lineTo(x + 4, y);\n        this.aeroplaneContext.moveTo(x, y - 4);\n        this.aeroplaneContext.lineTo(x, y + 4);\n        this.aeroplaneContext.stroke();\n        this.aeroplaneContext.strokeStyle = _config_colours__WEBPACK_IMPORTED_MODULE_0__.COLOURS.GREY;\n    }\n\n    _drawVORs = (waypoints) => {\n        for (let x = 0; x < waypoints.length; x++) {\n            const waypoint = waypoints[x]\n            if (waypoint.type === \"VOR\") {\n                this.featuresContext.strokeStyle = _config_colours__WEBPACK_IMPORTED_MODULE_0__.COLOURS.WHITE;\n                this.featuresContext.lineWidth = 2;\n                this.featuresContext.setLineDash([2]);\n                this.featuresContext.beginPath();\n                this.featuresContext.arc(waypoint.x, waypoint.y, 12, 0, Math.PI * 2, false);\n                this.featuresContext.stroke();\n\n                this.featuresContext.fillStyle = _config_colours__WEBPACK_IMPORTED_MODULE_0__.COLOURS.WHITE;\n                this.featuresContext.beginPath();\n                this.featuresContext.arc(waypoint.x, waypoint.y, 2, 0, Math.PI * 2, false);\n                this.featuresContext.fill();\n\n                this.featuresContext.fillStyle = _config_colours__WEBPACK_IMPORTED_MODULE_0__.COLOURS.WHITE;\n                this.featuresContext.font = \"14px Courier New\";\n                this.featuresContext.beginPath();\n                this.featuresContext.fillText(waypoint.id, waypoint.x - 12, waypoint.y - 20);\n            }\n        }\n    }\n\n    _drawTerrain = (terrain) => {\n        terrain.waterBodies.forEach(river => {\n            river.borders.forEach(border => {\n                this.featuresContext.fillStyle = _config_colours__WEBPACK_IMPORTED_MODULE_0__.COLOURS.WHITE_TRANSPARENT_MAX;\n                this.featuresContext.lineWidth = 1;\n                this.featuresContext.beginPath();\n                this.featuresContext.moveTo(border[0].x, border[0].y);\n                border.forEach(point => {\n                    this.featuresContext.lineTo(point.x, point.y);\n                })\n                this.featuresContext.closePath()\n                this.featuresContext.fill();\n            })\n        })\n    }\n}\n\n\n//# sourceURL=webpack://atc/./src/Interface/UIController.js?");

/***/ }),

/***/ "./src/Interface/elements.js":
/*!***********************************!*\
  !*** ./src/Interface/elements.js ***!
  \***********************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"div\": () => (/* binding */ div),\n/* harmony export */   \"element\": () => (/* binding */ element),\n/* harmony export */   \"p\": () => (/* binding */ p)\n/* harmony export */ });\nconst element = (tag, classes, id) => {\n    const element = document.createElement(tag)\n    classes.forEach(cls => {\n        element.classList.add(cls)\n    })\n    element.setAttribute('id', id)\n    return element\n}\n\nconst div = (classes, id) => {\n    return element(\"div\", classes, id)\n}\n\nconst p = (classes, id) => {\n    return element(\"p\", classes, id)\n}\n\n//# sourceURL=webpack://atc/./src/Interface/elements.js?");

/***/ }),

/***/ "./src/States/CoreGamePlay.js":
/*!************************************!*\
  !*** ./src/States/CoreGamePlay.js ***!
  \************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"CoreGamePlay\": () => (/* binding */ CoreGamePlay)\n/* harmony export */ });\n/* harmony import */ var _config_aircraft__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../config/aircraft */ \"./src/config/aircraft.js\");\n/* harmony import */ var _utils_maths__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../utils/maths */ \"./src/utils/maths.js\");\n/* harmony import */ var _Domain_Aeroplane_Aeroplane__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../Domain/Aeroplane/Aeroplane */ \"./src/Domain/Aeroplane/Aeroplane.js\");\n/* harmony import */ var _GameState__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./GameState */ \"./src/States/GameState.js\");\n\n\n\n\n\n\nclass CoreGamePlay extends _GameState__WEBPACK_IMPORTED_MODULE_3__.GameState {\n    constructor() {\n        super();\n        this.machine = undefined\n        this.initialised = false\n    }\n\n    setMachine = (machine) => {\n        this.machine = machine\n    }\n\n    tick = () => {\n        if (!this.initialised) {\n            this.machine.clear()\n            this.initialised = true\n        }\n        if (this.ticks % 105 === 0) {\n            this.initArrival()\n        }\n        this.ticks += 1\n    }\n\n    spawnLocations = () => [\n        {x: 0.2 * this.map.mapBoundaries.maxX, y: 1, heading: 135},\n        {x: 0.5 * this.map.mapBoundaries.maxX, y: 1, heading: 135},\n        {x: 0.8 * this.map.mapBoundaries.maxX, y: 1, heading: 225},\n        {x: 1, y: 0.33 * this.map.mapBoundaries.maxY, heading: 110},\n        {x: 1, y: 0.66 * this.map.mapBoundaries.maxY, heading: 80},\n        {x: 0.2 * this.map.mapBoundaries.maxX, y: this.map.mapBoundaries.maxY, heading: 20},\n        {x: 0.5 * this.map.mapBoundaries.maxX, y: this.map.mapBoundaries.maxY, heading: 360},\n        {x: 0.8 * this.map.mapBoundaries.maxX, y: this.map.mapBoundaries.maxY, heading: 340},\n    ]\n\n    initArrival = () => {\n        const aeroplaneConfig = _config_aircraft__WEBPACK_IMPORTED_MODULE_0__.AIRCRAFT[Math.floor(Math.random() * _config_aircraft__WEBPACK_IMPORTED_MODULE_0__.AIRCRAFT.length)]\n        const callSign = `${aeroplaneConfig.operatorIATA}${(0,_utils_maths__WEBPACK_IMPORTED_MODULE_1__.getRandomNumberBetween)(100, 999)}`\n        const shortClass = aeroplaneConfig.shortClass\n        const spawnLocations = this.spawnLocations()\n        const location = spawnLocations[Math.floor(Math.random() * spawnLocations.length)];\n        const startX = location.x\n        const startY = location.y\n        const startHeading = location.heading\n        const startSpeed = (0,_utils_maths__WEBPACK_IMPORTED_MODULE_1__.roundToNearest)((0,_utils_maths__WEBPACK_IMPORTED_MODULE_1__.getRandomNumberBetween)(180, 260), 10)\n        const startAltitude = (0,_utils_maths__WEBPACK_IMPORTED_MODULE_1__.roundToNearest)((0,_utils_maths__WEBPACK_IMPORTED_MODULE_1__.getRandomNumberBetween)(5000, 8000), 500)\n        const weight = aeroplaneConfig.weight\n        const plane = new _Domain_Aeroplane_Aeroplane__WEBPACK_IMPORTED_MODULE_2__.Aeroplane(callSign, shortClass, startX, startY, startSpeed, startHeading, startAltitude, weight)\n        plane.setWaypoint(this.map, this.map.defaultWaypoint)\n        this.machine.aeroplanes.push(plane)\n    }\n}\n\n//# sourceURL=webpack://atc/./src/States/CoreGamePlay.js?");

/***/ }),

/***/ "./src/States/GameState.js":
/*!*********************************!*\
  !*** ./src/States/GameState.js ***!
  \*********************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"GameState\": () => (/* binding */ GameState)\n/* harmony export */ });\nclass GameState {\n    constructor() {\n        this.machine = undefined\n        this.map = undefined\n        this.ticks = 0\n    }\n\n    setMachine = (machine) => {\n        this.machine = machine\n    }\n\n    setMap = (map) => {\n        this.map = map\n    }\n\n    tick = () => {\n\n    }\n\n}\n\n//# sourceURL=webpack://atc/./src/States/GameState.js?");

/***/ }),

/***/ "./src/States/Tutorial.js":
/*!********************************!*\
  !*** ./src/States/Tutorial.js ***!
  \********************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"Tutorial\": () => (/* binding */ Tutorial)\n/* harmony export */ });\n/* harmony import */ var _GameState__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./GameState */ \"./src/States/GameState.js\");\n/* harmony import */ var _Tutorial_TutorialMapOverview__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./Tutorial/TutorialMapOverview */ \"./src/States/Tutorial/TutorialMapOverview.js\");\n\n\n\n\nclass Tutorial extends _GameState__WEBPACK_IMPORTED_MODULE_0__.GameState {\n    constructor(map, interfaceController) {\n        super();\n        this.setMap(map)\n        this.interfaceController = interfaceController\n        this.state = undefined\n        this.transitionTo(new _Tutorial_TutorialMapOverview__WEBPACK_IMPORTED_MODULE_1__.TutorialMapOverview(this.map))\n    }\n\n    transitionTo = (state) => {\n        this.state = state\n        this.state.setMachine(this)\n    }\n\n    tick = () => {\n        if (!this.state.initialised) {\n            this.state.init()\n        }\n        this.ticks += 1\n    }\n\n}\n\n//# sourceURL=webpack://atc/./src/States/Tutorial.js?");

/***/ }),

/***/ "./src/States/Tutorial/TutorialAircraftAltitude.js":
/*!*********************************************************!*\
  !*** ./src/States/Tutorial/TutorialAircraftAltitude.js ***!
  \*********************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"TutorialAircraftAltitude\": () => (/* binding */ TutorialAircraftAltitude)\n/* harmony export */ });\n/* harmony import */ var _Domain_Aeroplane_Aeroplane__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../Domain/Aeroplane/Aeroplane */ \"./src/Domain/Aeroplane/Aeroplane.js\");\n/* harmony import */ var _config_constants__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../config/constants */ \"./src/config/constants.js\");\n/* harmony import */ var _TutorialAircraftHolding__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./TutorialAircraftHolding */ \"./src/States/Tutorial/TutorialAircraftHolding.js\");\n\n\n\n\nclass TutorialAircraftAltitude {\n    constructor(map) {\n        this.map = map\n        this.machine = undefined\n        this.initialised = false\n    }\n\n    setMachine = (machine) => {\n        this.machine = machine\n    }\n\n    init = () => {\n        this.machine.machine.clear()\n        this._aircraftSpeed()\n        this.machine.interfaceController.showHint(\n            \"Controlling altitude\",\n            \"Currently, BA354 is flying at 8000 feet.\\n\\n\" +\n            \"You can see this on the aircraft label and its sidebar strip (the last of the three numbers).\\n\\n\" +\n            \"Notice that on the aircraft label the altitude is specified in 100s of feet (80) but in the sidebar it is shown in its full form.\\n\\n\" +\n            \"Select the aircraft and type the command below into the command field after the call sign, and press Enter.\",\n            \"A40\",\n            \"This will tell the aeroplane to change altitude to 4000 feet.\\n\\n\" +\n            \"Notice that the altitude command is also specified in 100s of feet.\\n\\n\" +\n            \"Watch the last number on the aircraft label change as the aircraft descends.\\n\\n\" +\n            \"Like before, the relevant number on the label and sidebar change.\\n\\n\" +\n            `You can choose any value between ${_config_constants__WEBPACK_IMPORTED_MODULE_1__.MIN_ALTITUDE}ft and ${_config_constants__WEBPACK_IMPORTED_MODULE_1__.MAX_ALTITUDE}ft.`,\n            \"Next\",\n            this.next\n        )\n        this.initialised = true\n    }\n\n    next = () => {\n        this.machine.machine.clear()\n        this.machine.interfaceController.clearCommandEntry()\n        this.machine.transitionTo(new _TutorialAircraftHolding__WEBPACK_IMPORTED_MODULE_2__.TutorialAircraftHolding(this.map))\n    }\n\n    _aircraftSpeed = () => {\n        const plane = new _Domain_Aeroplane_Aeroplane__WEBPACK_IMPORTED_MODULE_0__.Aeroplane(\n            'BA354',\n            'TUT',\n            0.1 * this.map.mapBoundaries.maxX,\n            0.25 * this.map.mapBoundaries.maxY,\n            260,\n            90,\n            8000,\n            1)\n        this.machine.machine.aeroplanes.push(plane)\n    }\n}\n\n//# sourceURL=webpack://atc/./src/States/Tutorial/TutorialAircraftAltitude.js?");

/***/ }),

/***/ "./src/States/Tutorial/TutorialAircraftHeading.js":
/*!********************************************************!*\
  !*** ./src/States/Tutorial/TutorialAircraftHeading.js ***!
  \********************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"TutorialAircraftHeading\": () => (/* binding */ TutorialAircraftHeading)\n/* harmony export */ });\n/* harmony import */ var _Domain_Aeroplane_Aeroplane__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../Domain/Aeroplane/Aeroplane */ \"./src/Domain/Aeroplane/Aeroplane.js\");\n/* harmony import */ var _TutorialAircraftWaypoint__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./TutorialAircraftWaypoint */ \"./src/States/Tutorial/TutorialAircraftWaypoint.js\");\n\n\n\nclass TutorialAircraftHeading {\n    constructor(map) {\n        this.map = map\n        this.machine = undefined\n        this.initialised = false\n    }\n\n    setMachine = (machine) => {\n        this.machine = machine\n    }\n\n    init = () => {\n        this.machine.machine.clear()\n        this._aircraftHeading()\n        this.machine.interfaceController.showHint(\n            \"Turning aircraft\",\n            \"Currently, LH534 is heading 90 degrees.\\n\\n\" +\n            \"You can see this on the aircraft label and its sidebar strip (the first of the three numbers).\\n\\n\" +\n            \"Select the aircraft and type the command below into the command field after the call sign, and press Enter.\",\n            \"T180\",\n            \"This will tell the aeroplane to turn to heading 180 degrees (directly south).\\n\\n\" +\n            \"Watch the first number on the aircraft label change as the aircraft turns.\\n\\n\" +\n            \"Notice also that the first number on the sidebar has changed to Blue and shows the target heading value.\\n\\n\" +\n            \"Once the aircraft has reached the target heading, the sidebar value will display the current heading again, in White.\\n\\n\" +\n            \"You can choose any value between 000 and 360 degrees, always as three digits.\",\n            \"Next\",\n            this.next\n        )\n        this.initialised = true\n    }\n\n    next = () => {\n        this.machine.machine.clear()\n        this.machine.interfaceController.clearCommandEntry()\n        this.machine.transitionTo(new _TutorialAircraftWaypoint__WEBPACK_IMPORTED_MODULE_1__.TutorialAircraftWaypoint(this.map))\n    }\n\n    _aircraftHeading = () => {\n        const plane = new _Domain_Aeroplane_Aeroplane__WEBPACK_IMPORTED_MODULE_0__.Aeroplane(\n            'LH534',\n            'TUT',\n            0.5 * this.map.mapBoundaries.maxX,\n            0.3 * this.map.mapBoundaries.maxY,\n            180,\n            90,\n            5000,\n            1)\n        this.machine.machine.aeroplanes.push(plane)\n    }\n}\n\n//# sourceURL=webpack://atc/./src/States/Tutorial/TutorialAircraftHeading.js?");

/***/ }),

/***/ "./src/States/Tutorial/TutorialAircraftHolding.js":
/*!********************************************************!*\
  !*** ./src/States/Tutorial/TutorialAircraftHolding.js ***!
  \********************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"TutorialAircraftHolding\": () => (/* binding */ TutorialAircraftHolding)\n/* harmony export */ });\n/* harmony import */ var _Domain_Aeroplane_Aeroplane__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../Domain/Aeroplane/Aeroplane */ \"./src/Domain/Aeroplane/Aeroplane.js\");\n/* harmony import */ var _TutorialAircraftAltitude__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./TutorialAircraftAltitude */ \"./src/States/Tutorial/TutorialAircraftAltitude.js\");\n/* harmony import */ var _config_constants__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../config/constants */ \"./src/config/constants.js\");\n/* harmony import */ var _TutorialAircraftMultipleCommands__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./TutorialAircraftMultipleCommands */ \"./src/States/Tutorial/TutorialAircraftMultipleCommands.js\");\n\n\n\n\n\nclass TutorialAircraftHolding {\n    constructor(map) {\n        this.map = map\n        this.machine = undefined\n        this.initialised = false\n    }\n\n    setMachine = (machine) => {\n        this.machine = machine\n    }\n\n    init = () => {\n        this.machine.machine.clear()\n        this._baseAircraft()\n        this.machine.interfaceController.showHint(\n            \"Holding pattern\",\n            \"When things get overwhelming or you need more time, you can direct an aircraft to enter a holding pattern.\\n\\n\" +\n            \"This causes the aircraft to turn in a circle until you direct it otherwise.\\n\\n\" +\n            \"The holding pattern can be to the right (R) or to the left (L).\\n\\n\" +\n            \"Select the aircraft and type the command below into the command field after the call sign, and press Enter.\",\n            \"HR\",\n            \"This will direct the aircraft to enter a holding pattern to the right.\\n\\n\" +\n            \"Notice in the sidebar that the heading indicator now shows a Blue 'Hold'. This will remain until you issue a different directional command.\",\n            \"Next\",\n            this.next\n        )\n        this.initialised = true\n    }\n\n    next = () => {\n        this.machine.machine.clear()\n        this.machine.interfaceController.clearCommandEntry()\n        this.machine.transitionTo(new _TutorialAircraftMultipleCommands__WEBPACK_IMPORTED_MODULE_3__.TutorialAircraftMultipleCommands(this.map))\n    }\n\n    _baseAircraft = () => {\n        const plane = new _Domain_Aeroplane_Aeroplane__WEBPACK_IMPORTED_MODULE_0__.Aeroplane(\n            'GN231',\n            'TUT',\n            0.4 * this.map.mapBoundaries.maxX,\n            0.2 * this.map.mapBoundaries.maxY,\n            210,\n            90,\n            5000,\n            1)\n        this.machine.machine.aeroplanes.push(plane)\n    }\n}\n\n//# sourceURL=webpack://atc/./src/States/Tutorial/TutorialAircraftHolding.js?");

/***/ }),

/***/ "./src/States/Tutorial/TutorialAircraftMultipleCommands.js":
/*!*****************************************************************!*\
  !*** ./src/States/Tutorial/TutorialAircraftMultipleCommands.js ***!
  \*****************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"TutorialAircraftMultipleCommands\": () => (/* binding */ TutorialAircraftMultipleCommands)\n/* harmony export */ });\n/* harmony import */ var _Domain_Aeroplane_Aeroplane__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../Domain/Aeroplane/Aeroplane */ \"./src/Domain/Aeroplane/Aeroplane.js\");\n/* harmony import */ var _TutorialLanding__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./TutorialLanding */ \"./src/States/Tutorial/TutorialLanding.js\");\n\n\n\nclass TutorialAircraftMultipleCommands {\n    constructor(map) {\n        this.map = map\n        this.machine = undefined\n        this.initialised = false\n    }\n\n    setMachine = (machine) => {\n        this.machine = machine\n    }\n\n    init = () => {\n        this.machine.machine.clear()\n        this._baseAircraft()\n        this.machine.interfaceController.showHint(\n            \"Multiple Commands\",\n            \"You can issue multiple commands at the same time.\\n\\n\" +\n            \"Try issuing heading, speed and altitude commands at the same time.\\n\\n\" +\n            \"Select the aircraft and type the command below into the command field after the call sign, and press Enter.\",\n            \"T135S200A38\",\n            \"This will direct the aircraft to turn to heading 135, reduce speed to 200 and descend to 3800ft.\\n\\n\" +\n            \"Watch all the relevant indicators change and all values in the sidebar turn Blue until they are attained.\\n\\n\" +\n            \"Note that an aircraft can be in a holding pattern and accept speed and altitude commands so that the aircraft reduces speed and descends whilst holding.\",\n            \"Next\",\n            this.next\n        )\n        this.initialised = true\n    }\n\n    next = () => {\n        this.machine.machine.clear()\n        this.machine.interfaceController.clearCommandEntry()\n        this.machine.transitionTo(new _TutorialLanding__WEBPACK_IMPORTED_MODULE_1__.TutorialLanding(this.map))\n    }\n\n    _baseAircraft = () => {\n        const plane = new _Domain_Aeroplane_Aeroplane__WEBPACK_IMPORTED_MODULE_0__.Aeroplane(\n            'GN231',\n            'TUT',\n            0.2 * this.map.mapBoundaries.maxX,\n            0.2 * this.map.mapBoundaries.maxY,\n            280,\n            90,\n            5000,\n            1)\n        this.machine.machine.aeroplanes.push(plane)\n    }\n}\n\n//# sourceURL=webpack://atc/./src/States/Tutorial/TutorialAircraftMultipleCommands.js?");

/***/ }),

/***/ "./src/States/Tutorial/TutorialAircraftSpeed.js":
/*!******************************************************!*\
  !*** ./src/States/Tutorial/TutorialAircraftSpeed.js ***!
  \******************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"TutorialAircraftSpeed\": () => (/* binding */ TutorialAircraftSpeed)\n/* harmony export */ });\n/* harmony import */ var _Domain_Aeroplane_Aeroplane__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../Domain/Aeroplane/Aeroplane */ \"./src/Domain/Aeroplane/Aeroplane.js\");\n/* harmony import */ var _TutorialAircraftAltitude__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./TutorialAircraftAltitude */ \"./src/States/Tutorial/TutorialAircraftAltitude.js\");\n/* harmony import */ var _config_constants__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../config/constants */ \"./src/config/constants.js\");\n\n\n\n\nclass TutorialAircraftSpeed {\n    constructor(map) {\n        this.map = map\n        this.machine = undefined\n        this.initialised = false\n    }\n\n    setMachine = (machine) => {\n        this.machine = machine\n    }\n\n    init = () => {\n        this.machine.machine.clear()\n        this._aircraftSpeed()\n        this.machine.interfaceController.showHint(\n            \"Controlling speed\",\n            \"Currently, EZ887 is flying at 260 knots.\\n\\n\" +\n            \"You can see this on the aircraft label and its sidebar strip (the middle of the three numbers).\\n\\n\" +\n            \"Select the aircraft and type the command below into the command field after the call sign, and press Enter.\",\n            \"S200\",\n            \"This will tell the aeroplane to slow down to 200 knots.\\n\\n\" +\n            \"Watch the second number on the aircraft label change as the aircraft slows down.\\n\\n\" +\n            \"Like before, the second number on the sidebar has changed to Blue and shows the target speed value and will change back to white once the aircraft has reached the target speed.\\n\\n\" +\n            `You can choose any value between ${_config_constants__WEBPACK_IMPORTED_MODULE_2__.MIN_SPEED} and ${_config_constants__WEBPACK_IMPORTED_MODULE_2__.MAX_SPEED} knots.\\n\\n` +\n            \"Notice how the length of the tail of the aircraft becomes shorter as the speed reduces.\",\n            \"Next\",\n            this.next\n        )\n        this.initialised = true\n    }\n\n    next = () => {\n        this.machine.machine.clear()\n        this.machine.interfaceController.clearCommandEntry()\n        this.machine.transitionTo(new _TutorialAircraftAltitude__WEBPACK_IMPORTED_MODULE_1__.TutorialAircraftAltitude(this.map))\n    }\n\n    _aircraftSpeed = () => {\n        const plane = new _Domain_Aeroplane_Aeroplane__WEBPACK_IMPORTED_MODULE_0__.Aeroplane(\n            'EZ887',\n            'TUT',\n            0.1 * this.map.mapBoundaries.maxX,\n            0.1 * this.map.mapBoundaries.maxY,\n            260,\n            110,\n            8000,\n            1)\n        this.machine.machine.aeroplanes.push(plane)\n    }\n}\n\n//# sourceURL=webpack://atc/./src/States/Tutorial/TutorialAircraftSpeed.js?");

/***/ }),

/***/ "./src/States/Tutorial/TutorialAircraftWaypoint.js":
/*!*********************************************************!*\
  !*** ./src/States/Tutorial/TutorialAircraftWaypoint.js ***!
  \*********************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"TutorialAircraftWaypoint\": () => (/* binding */ TutorialAircraftWaypoint)\n/* harmony export */ });\n/* harmony import */ var _Domain_Aeroplane_Aeroplane__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../Domain/Aeroplane/Aeroplane */ \"./src/Domain/Aeroplane/Aeroplane.js\");\n/* harmony import */ var _TutorialAircraftSpeed__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./TutorialAircraftSpeed */ \"./src/States/Tutorial/TutorialAircraftSpeed.js\");\n\n\n\nclass TutorialAircraftWaypoint {\n    constructor(map) {\n        this.map = map\n        this.machine = undefined\n        this.initialised = false\n    }\n\n    setMachine = (machine) => {\n        this.machine = machine\n    }\n\n    init = () => {\n        this.machine.machine.clear()\n        this._baseAircraft()\n        this.machine.interfaceController.showHint(\n            \"Waypoints\",\n            \"You can send an aircraft directly to a waypoint.\\n\\n\" +\n            \"The aircraft will turn the shortest distance and fly towards the specified waypoint.\\n\\n\" +\n            \"Select the aircraft and type the command below into the command field after the call sign, and press Enter.\",\n            \">EPM\",\n            \"This will direct the aircraft to turn and fly towards waypoint EPM (Epsom) towards the bottom of the map.\\n\\n\" +\n            \"Notice that the heading indicator in the sidebar has turned Blue and references EPM, while the aeroplane label on the map still shows the current heading.\\n\\n\" +\n            \"When the aeroplane reaches the waypoint, it will continue on its current heading.\\n\\n\" +\n            \"Try some other waypoints and notice how the most recent command overrides a previous one.\",\n            \"Next\",\n            this.next\n        )\n        this.initialised = true\n    }\n\n    next = () => {\n        this.machine.machine.clear()\n        this.machine.interfaceController.clearCommandEntry()\n        this.machine.transitionTo(new _TutorialAircraftSpeed__WEBPACK_IMPORTED_MODULE_1__.TutorialAircraftSpeed(this.map))\n    }\n\n    _baseAircraft = () => {\n        const plane = new _Domain_Aeroplane_Aeroplane__WEBPACK_IMPORTED_MODULE_0__.Aeroplane(\n            'GN231',\n            'TUT',\n            0.7 * this.map.mapBoundaries.maxX,\n            0.2 * this.map.mapBoundaries.maxY,\n            240,\n            250,\n            5000,\n            1)\n        this.machine.machine.aeroplanes.push(plane)\n    }\n}\n\n//# sourceURL=webpack://atc/./src/States/Tutorial/TutorialAircraftWaypoint.js?");

/***/ }),

/***/ "./src/States/Tutorial/TutorialLanding.js":
/*!************************************************!*\
  !*** ./src/States/Tutorial/TutorialLanding.js ***!
  \************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"TutorialLanding\": () => (/* binding */ TutorialLanding)\n/* harmony export */ });\n/* harmony import */ var _Domain_Aeroplane_Aeroplane__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../Domain/Aeroplane/Aeroplane */ \"./src/Domain/Aeroplane/Aeroplane.js\");\n/* harmony import */ var _config_constants__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../config/constants */ \"./src/config/constants.js\");\n\n\n\nclass TutorialLanding {\n    constructor(map) {\n        this.map = map\n        this.machine = undefined\n        this.initialised = false\n        this.hint = 0\n    }\n\n    setMachine = (machine) => {\n        this.machine = machine\n    }\n\n    init = () => {\n        this.machine.machine.clear()\n        this.next()\n        this.initialised = true\n    }\n\n    next = () => {\n        this.machine.machine.clear()\n        this.machine.interfaceController.clearCommandEntry()\n        this.machine.interfaceController.hideHint()\n        this.machine.interfaceController.blurAttention()\n        const hint = this.getHint(this.hint)\n        hint.spawnFunction && hint.spawnFunction()\n        hint.focusConfig && this.machine.interfaceController.focusAttention(hint.focusConfig)\n        this.machine.interfaceController.showHint(\n            hint.hintTitle,\n            hint.hintBodyBefore,\n            hint.hintCode,\n            hint.hintBodyAfter,\n            hint.confirmButtonText,\n            hint.confirmButtonCallback\n        )\n        this.hint += 1\n    }\n\n    getHint = (index) => {\n        const hints = [\n            {\n                hintTitle: \"Landing aircraft\",\n                hintBodyBefore: \"So far we have seen how to control aircraft direction, speed and altitude.\\n\\n\" +\n                    \"Next we will look at how to issue a landing clearance.\",\n                hintCode: \"\",\n                hintBodyAfter: \"\",\n                confirmButtonText: \"Next\",\n                confirmButtonCallback: this.next\n            },\n            {\n                hintTitle: \"Landing - Location\",\n                hintBodyBefore: \"To issue a landing clearance, the aircraft must be within certain tolerances:\\n\\n\"\n                    + \"- At or below 3000ft\\n\"\n                    + \"- At or below 200 knots\\n\"\n                    + \"- Facing the runway on which to land\\n\"\n                    + \"- Within 10 degrees of the runway heading\\n\"\n                    + \"- Within the width of the landing feather\\n\"\n                    + \"- Horizontally within the inner line of the runway feather\\n\\n\"\n                    + \"The runway 'feather' is the faded grey dotted arrow-shaped line extending from the end of each runway.\\n\\n\"\n                    + \"Let's see some INCORRECT landing configurations in which an aircraft will NOT accept landing clearance.\",\n                hintCode: \"\",\n                hintBodyAfter: \"\",\n                confirmButtonText: \"Next\",\n                confirmButtonCallback: this.next,\n                focusConfig: this.map.focusableConfig.landingFeather\n            },\n            {\n                hintTitle: \"Landing - Incorrect Location\",\n                hintBodyBefore: \"Let's say we're aiming to land on runway 9L.\\n\\n\"\n                    + \"This aeroplane is correctly facing the runway heading but it is too far to the left of the runway (when facing the runway).\\n\\n\"\n                    + \"Therefore landing clearance will not be accepted.\",\n                hintCode: \"\",\n                hintBodyAfter: \"\",\n                confirmButtonText: \"Next\",\n                confirmButtonCallback: this.next,\n                spawnFunction: this.notNearRunway\n            },\n            {\n                hintTitle: \"Landing - Too far away\",\n                hintBodyBefore: \"Aiming for runway 9L, the aircraft is facing the correct direction.\\n\\n\"\n                    + \"However the aircraft is too far away from the landing feather for now.\\n\\n\"\n                    + \"Therefore landing clearance will not be accepted.\",\n                hintCode: \"\",\n                hintBodyAfter: \"\",\n                confirmButtonText: \"Next\",\n                confirmButtonCallback: this.next,\n                spawnFunction: this.tooFarAway\n            },\n            {\n                hintTitle: \"Landing - Too close\",\n                hintBodyBefore: \"Aiming for runway 9L, the aircraft is facing the correct direction.\\n\\n\"\n                    + \"However the aircraft is too close to the runway and has travelled beyond the horizontal line inside the runway feather.\\n\\n\"\n                    + \"This means the aircraft will not have enough time to execute its landing procedure.\\n\\n\"\n                    + \"Therefore landing clearance will not be accepted.\",\n                hintCode: \"\",\n                hintBodyAfter: \"\",\n                confirmButtonText: \"Next\",\n                confirmButtonCallback: this.next,\n                spawnFunction: this.tooClose\n            },\n            {\n                hintTitle: \"Landing - Incorrect Heading\",\n                hintBodyBefore: \"Again we're aiming for 9L.\\n\\n\"\n                    + \"This aeroplane is in line with the runway but not heading within 10 degrees of the runway heading.\\n\\n\"\n                    + \"The aeroplane is heading 070 degrees while the runway has a heading of 090 degrees.\\n\\n\"\n                    + \"Therefore landing clearance will not be accepted.\",\n                hintCode: \"\",\n                hintBodyAfter: \"\",\n                confirmButtonText: \"Next\",\n                confirmButtonCallback: this.next,\n                spawnFunction: this.notCorrectHeading\n            },\n            {\n                hintTitle: \"Landing - Incorrect Speed\",\n                hintBodyBefore: \"We are correctly lined up for runway 9L.\\n\\n\"\n                    + \"However this aeroplane is too fast, travelling at 240 knots.\\n\\n\"\n                    + \"It should be at or below 200 knots to accept landing clearance.\\n\\n\"\n                    + \"Therefore landing clearance will not be accepted.\",\n                hintCode: \"\",\n                hintBodyAfter: \"\",\n                confirmButtonText: \"Next\",\n                confirmButtonCallback: this.next,\n                spawnFunction: this.tooFast\n            },\n            {\n                hintTitle: \"Landing - Incorrect Altitude\",\n                hintBodyBefore: \"We are correctly lined up for runway 9L and travelling at a good speed.\\n\\n\"\n                    + \"However this aeroplane is too high, currently at 4000ft.\\n\\n\"\n                    + \"It should be at or below 3000 feet to accept landing clearance.\\n\\n\"\n                    + \"Therefore landing clearance will not be accepted.\",\n                hintCode: \"\",\n                hintBodyAfter: \"\",\n                confirmButtonText: \"Next\",\n                confirmButtonCallback: this.next,\n                spawnFunction: this.tooHigh\n            },\n            {\n                hintTitle: \"Landing - Correct Configuration\",\n                hintBodyBefore: \"Now let's look at a correct landing configuration that will allow landing clearance to be accepted.\",\n                hintCode: \"\",\n                hintBodyAfter: \"\",\n                confirmButtonText: \"Next\",\n                confirmButtonCallback: this.next,\n            },\n            {\n                hintTitle: \"Landing - Correct Configuration\",\n                hintBodyBefore: \"This aeroplane is facing the runway and within 10 degrees of the runway heading.\\n\\n\"\n                    + \"It's speed is below 200 and it is below 3000 feet.\\n\\n\"\n                    + \"Therefore landing clearance WILL be accepted.\\n\\n\"\n                    + \"Let's issue the landing clearance next.\",\n                hintCode: \"\",\n                hintBodyAfter: \"\",\n                confirmButtonText: \"Next\",\n                confirmButtonCallback: this.next,\n                spawnFunction: this.correctConfiguration9L\n            },\n            {\n                hintTitle: \"Issuing Landing Clearance [1/2]\",\n                hintBodyBefore: \"Select the aircraft and type the following command to issue landing clearance for runway 9L:\",\n                hintCode: \"ILS9L\",\n                hintBodyAfter: \"'ILS' stands for 'Instrument Landing System'.\\n\\n\" +\n                    \"Notice that the sidebar strip shows a Blue 'Landing' indicator and watch the aircraft label values change as the aircraft follows its landing procedure on your behalf.\\n\\n\" +\n                    \"Once the aircraft lands on the runway, the aircraft and its associated sidebar strip will disappear and the 'Landed' count in the top right corner of the screen will go up by one.\\n\\n\",\n                confirmButtonText: \"Next\",\n                confirmButtonCallback: this.next,\n                spawnFunction: this.correctConfiguration9L\n            },\n            {\n                hintTitle: \"Issuing Landing Clearance [2/2]\",\n                hintBodyBefore: \"Let's try another one for 27R:\",\n                hintCode: \"ILS27R\",\n                hintBodyAfter: \"\",\n                confirmButtonText: \"Next\",\n                confirmButtonCallback: this.next,\n                spawnFunction: this.correctConfiguration27R\n            },\n            {\n                hintTitle: \"Congratulations!\",\n                hintBodyBefore: \"You have landed your first planes and finished the tutorial.\\n\\n\" +\n                    \"Click 'Game' at the top of the screen to start playing!\",\n                hintCode: \"\",\n                hintBodyAfter: \"\",\n                confirmButtonText: \"\",\n                confirmButtonCallback: undefined,\n            },\n        ]\n\n        return hints[index]\n    }\n\n    notNearRunway = () => {\n        const plane = new _Domain_Aeroplane_Aeroplane__WEBPACK_IMPORTED_MODULE_0__.Aeroplane(\n            'AB123',\n            'TUT',\n            0.3 * this.map.mapBoundaries.maxX,\n            0.4 * this.map.mapBoundaries.maxY,\n            200,\n            90,\n            6000,\n            2)\n        this.machine.machine.aeroplanes.push(plane)\n    }\n\n    tooFarAway = () => {\n        const plane = new _Domain_Aeroplane_Aeroplane__WEBPACK_IMPORTED_MODULE_0__.Aeroplane(\n            'AB123',\n            'TUT',\n            0.25 * this.map.mapBoundaries.maxX,\n            0.5 * this.map.mapBoundaries.maxY,\n            200,\n            90,\n            4000,\n            2)\n        this.machine.machine.aeroplanes.push(plane)\n    }\n\n    tooClose = () => {\n        const plane = new _Domain_Aeroplane_Aeroplane__WEBPACK_IMPORTED_MODULE_0__.Aeroplane(\n            'AB123',\n            'TUT',\n            0.4 * this.map.mapBoundaries.maxX,\n            0.5 * this.map.mapBoundaries.maxY,\n            200,\n            90,\n            2500,\n            2)\n        this.machine.machine.aeroplanes.push(plane)\n    }\n\n    notCorrectHeading = () => {\n        const plane = new _Domain_Aeroplane_Aeroplane__WEBPACK_IMPORTED_MODULE_0__.Aeroplane(\n            'AB123',\n            'TUT',\n            0.32 * this.map.mapBoundaries.maxX,\n            0.52 * this.map.mapBoundaries.maxY,\n            200,\n            70,\n            2500,\n            2)\n        this.machine.machine.aeroplanes.push(plane)\n    }\n\n    tooFast = () => {\n        const plane = new _Domain_Aeroplane_Aeroplane__WEBPACK_IMPORTED_MODULE_0__.Aeroplane(\n            'AB123',\n            'TUT',\n            0.33 * this.map.mapBoundaries.maxX,\n            0.5 * this.map.mapBoundaries.maxY,\n            240,\n            90,\n            2500,\n            2)\n        this.machine.machine.aeroplanes.push(plane)\n    }\n\n    tooHigh = () => {\n        const plane = new _Domain_Aeroplane_Aeroplane__WEBPACK_IMPORTED_MODULE_0__.Aeroplane(\n            'AB123',\n            'TUT',\n            0.33 * this.map.mapBoundaries.maxX,\n            0.5 * this.map.mapBoundaries.maxY,\n            180,\n            90,\n            4000,\n            2)\n        this.machine.machine.aeroplanes.push(plane)\n    }\n\n    correctConfiguration9L = () => {\n        const plane = new _Domain_Aeroplane_Aeroplane__WEBPACK_IMPORTED_MODULE_0__.Aeroplane(\n            'AB123',\n            'TUT',\n            0.48 * this.map.mapBoundaries.maxX - _config_constants__WEBPACK_IMPORTED_MODULE_1__.ILS_MAX_X,\n            0.5 * this.map.mapBoundaries.maxY,\n            180,\n            90,\n            2800,\n            2)\n        this.machine.machine.aeroplanes.push(plane)\n    }\n\n    correctConfiguration27R = () => {\n        const plane = new _Domain_Aeroplane_Aeroplane__WEBPACK_IMPORTED_MODULE_0__.Aeroplane(\n            'AB123',\n            'TUT',\n            0.52 * this.map.mapBoundaries.maxX + _config_constants__WEBPACK_IMPORTED_MODULE_1__.ILS_MAX_X,\n            0.5 * this.map.mapBoundaries.maxY,\n            180,\n            270,\n            2800,\n            2)\n        this.machine.machine.aeroplanes.push(plane)\n    }\n\n}\n\n//# sourceURL=webpack://atc/./src/States/Tutorial/TutorialLanding.js?");

/***/ }),

/***/ "./src/States/Tutorial/TutorialMapOverview.js":
/*!****************************************************!*\
  !*** ./src/States/Tutorial/TutorialMapOverview.js ***!
  \****************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"TutorialMapOverview\": () => (/* binding */ TutorialMapOverview)\n/* harmony export */ });\n/* harmony import */ var _Domain_Aeroplane_Aeroplane__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../Domain/Aeroplane/Aeroplane */ \"./src/Domain/Aeroplane/Aeroplane.js\");\n/* harmony import */ var _TutorialSelectingAircraftClicking__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./TutorialSelectingAircraftClicking */ \"./src/States/Tutorial/TutorialSelectingAircraftClicking.js\");\n\n\n\nclass TutorialMapOverview {\n    constructor(map) {\n        this.map = map\n        this.machine = undefined\n        this.initialised = false\n        this.hint = 0\n    }\n\n    setMachine = (machine) => {\n        this.machine = machine\n    }\n\n    init = () => {\n        this.machine.machine.clear()\n        this.next()\n        this.initialised = true\n    }\n\n    next = () => {\n        this.machine.machine.clear()\n        this.machine.interfaceController.clearCommandEntry()\n        this.machine.interfaceController.hideHint()\n        this.machine.interfaceController.blurAttention()\n        const hint = this.getHint(this.hint)\n        hint.spawnFunction && hint.spawnFunction()\n        hint.focusConfig && this.machine.interfaceController.focusAttention(hint.focusConfig)\n        this.machine.interfaceController.showHint(\n            hint.hintTitle,\n            hint.hintBodyBefore,\n            hint.hintCode,\n            hint.hintBodyAfter,\n            hint.confirmButtonText,\n            hint.confirmButtonCallback\n        )\n        this.hint += 1\n    }\n\n    nextTutorialMode = () => {\n        this.machine.transitionTo(new _TutorialSelectingAircraftClicking__WEBPACK_IMPORTED_MODULE_1__.TutorialSelectingAircraftClicking(this.map))\n    }\n\n    getHint = (index) => {\n        const hints = [\n            {\n                hintTitle: \"Welcome!\",\n                hintBodyBefore: \"Your goal in this game is to issue commands to aircraft to guide them to land on a runway.\\n\\n\" +\n                    \"While doing this, avoid guiding planes into restricted areas or getting the planes too close to one another.\",\n                hintCode: \"\",\n                hintBodyAfter: \"\",\n                confirmButtonText: \"Next\",\n                confirmButtonCallback: this.next\n            },\n            {\n                hintTitle: \"Overview\",\n                hintBodyBefore: \"This tutorial will take you through the interface and the core gameplay.\\n\\n\"\n                    + \"You are looking at an air traffic control radioscope.\\n\\n\"\n                    + \"This is a map of the surrounding area of an airport. In this case London Heathrow.\\n\\n\"\n                    + \"The view is from above.\\n\\n\"\n                    + \"The airport is exactly in the middle of the map.\\n\\n\"\n                    + \"Click 'Next' to continue (you may need to scroll down inside this panel).\",\n                hintCode: \"\",\n                hintBodyAfter: \"\",\n                confirmButtonText: \"Next\",\n                confirmButtonCallback: this.next\n            },\n            {\n                hintTitle: \"Runways\",\n                hintBodyBefore: \"In the middle of the map are two horizontal green lines.\\n\\n\"\n                    + \"These are the runways.\\n\\n\"\n                    + \"The labels on the end of the runways show how to reference the runway.\\n\\n\"\n                    + \"The structure is the runway heading (in tens of degrees) and its position in relation to other runways.\\n\\n\"\n                    + \"For example, 27L means the runway has a heading of 270 degrees and is to the left of other runways.\\n\\n\"\n                    + \"Equally, 9R means the runway has a heading of 090 degrees and is to the right of other runways.\\n\\n\"\n                    + \"There are two runways but four directions from which aircraft can land, namely: 9L, 9R, 27L and 27R.\\n\\n\",\n                hintCode: \"\",\n                hintBodyAfter: \"\",\n                confirmButtonText: \"Next\",\n                confirmButtonCallback: this.next,\n                focusConfig: this.map.focusableConfig.runways\n            },\n            {\n                hintTitle: \"Waypoints\",\n                hintBodyBefore: \"Waypoints are shown as dotted circles with a dot in the centre and a three character label above.\\n\\n\" +\n                    \"Just above the runways there is the LON waypoint.\\n\\n\" +\n                    \"A short distance above that, is the CHT waypoint.\\n\\n\" +\n                    \"Waypoints are used to make navigation easier which we will see later.\",\n                hintCode: \"\",\n                hintBodyAfter: \"\",\n                confirmButtonText: \"Next\",\n                confirmButtonCallback: this.next,\n                focusConfig: this.map.focusableConfig.waypoint\n            },\n            {\n                hintTitle: \"Aeroplanes\",\n                hintBodyBefore: \"An aeroplane has been placed on the map.\\n\\n\" +\n                    \"Just above the aeroplane, is a label that shows current information about the aeroplane.\\n\\n\" +\n                    \"At the top is its Call Sign (AB123). This is how you refer to the plane.\\n\\n\" +\n                    \"The three numbers underneath show:\\n\\n\" +\n                    \"- Heading (90 degrees, directly East)\\n\" +\n                    \"- Speed (200 knots)\\n\" +\n                    \"- Altitude (6000ft)\\n\\n\" +\n                    \"Note: altitude is specified in 100s of feet\",\n                hintCode: \"\",\n                hintBodyAfter: \"\",\n                confirmButtonText: \"Next\",\n                confirmButtonCallback: this.next,\n                spawnFunction: this.basicAeroplane\n            },\n            {\n                hintTitle: \"Aeroplane speed tail\",\n                hintBodyBefore: \"An aeroplane also has a tail of slashes.\\n\\n\" +\n                    \"This tail denotes the speed of the aeroplane and its direction.\\n\\n\" +\n                    \"Compare the two aeroplanes currently on the map.\\n\\n\" +\n                    \"One is at 200 knots and its tail is shorter.\\n\\n\" +\n                    \"The other is at 300 knots and its tail is longer.\\n\\n\",\n                hintCode: \"\",\n                hintBodyAfter: \"\",\n                confirmButtonText: \"Next\",\n                confirmButtonCallback: this.next,\n                spawnFunction: this.speedComparisonAeroplanes\n            },\n            {\n                hintTitle: \"Restricted Zones\",\n                hintBodyBefore: \"Some areas of the map are restricted.\\n\\n\" +\n                    \"This is because they are above populated or protected areas.\\n\\n\" +\n                    \"Three types of restricted zones exist:\\n\\n\" +\n                    \"- Critical (red)\\n\" +\n                    \"- Moderate (orange)\\n\" +\n                    \"- Informational (blue)\",\n                hintCode: \"\",\n                hintBodyAfter: \"\",\n                confirmButtonText: \"Next\",\n                confirmButtonCallback: this.next,\n                focusConfig: this.map.focusableConfig.restrictedZone\n            },\n            {\n                hintTitle: \"Restricted Zone Labels\",\n                hintBodyBefore: \"Restricted zones have a label, for example: EG(R)-157 and indicators for the minimum and/or maximum altitude.\\n\\n\" +\n                    \"- An orange number shows the minimum altitude\\n\" +\n                    \"- A white number shows the maximum altitude.\\n\\n\" +\n                    \"The altitudes are given in 100s of feet. For example, 30 means 3000ft and 250 means 25,000ft.\\n\\n\" +\n                    \"If there are no numbers, then the zone is always out of bounds.\",\n                hintCode: \"\",\n                hintBodyAfter: \"\",\n                confirmButtonText: \"Next\",\n                confirmButtonCallback: this.next,\n                focusConfig: this.map.focusableConfig.restrictedZoneLabel\n            },\n            {\n                hintTitle: \"Breaching Restricted Zones\",\n                hintBodyBefore: \"An aircraft is heading towards a restricted zone.\\n\\n\" +\n                    \"The orange zone ahead, EG(R)-157, has a minimum altitude of 3000ft and a maximum altitude of 5000ft.\\n\\n\" +\n                    \"The aircraft is currently at 2500ft.\\n\\n\" +\n                    \"When the aircraft enters the restricted zone, it will breach the restrictions and you will be penalised.\\n\\n\" +\n                    \"The aeroplane will be highlighted in red and the timer in the top right corner will start counting up.\\n\\n\" +\n                    \"When the aeroplane leaves the area or its altitude falls within restrictions, the timer will stop and the plane will revert to its original colours.\",\n                hintCode: \"\",\n                hintBodyAfter: \"\",\n                confirmButtonText: \"Next\",\n                confirmButtonCallback: this.next,\n                spawnFunction: this.towardsRestrictionBreach\n            },\n            {\n                hintTitle: \"Controlling Aircraft\",\n                hintBodyBefore: \"At the bottom of the screen, in the middle, is the command entry field.\\n\\n\" +\n                    \"This is where you will type commands to aeroplanes.\\n\\n\" +\n                    \"Let's see how that works\",\n                hintCode: \"\",\n                hintBodyAfter: \"\",\n                confirmButtonText: \"Next\",\n                confirmButtonCallback: this.nextTutorialMode,\n            }\n        ]\n\n        return hints[index]\n    }\n\n    basicAeroplane = () => {\n        const plane = new _Domain_Aeroplane_Aeroplane__WEBPACK_IMPORTED_MODULE_0__.Aeroplane(\n            'AB123',\n            'TUT',\n            0.1 * this.map.mapBoundaries.maxX,\n            0.25 * this.map.mapBoundaries.maxY,\n            200,\n            90,\n            6000,\n            2)\n        this.machine.machine.aeroplanes.push(plane)\n    }\n\n    speedComparisonAeroplanes = () => {\n        const plane1 = new _Domain_Aeroplane_Aeroplane__WEBPACK_IMPORTED_MODULE_0__.Aeroplane(\n            'AB123',\n            'TUT',\n            0.1 * this.map.mapBoundaries.maxX,\n            0.25 * this.map.mapBoundaries.maxY,\n            200,\n            90,\n            2500,\n            2)\n        const plane2 = new _Domain_Aeroplane_Aeroplane__WEBPACK_IMPORTED_MODULE_0__.Aeroplane(\n            'CD456',\n            'TUT',\n            0.1 * this.map.mapBoundaries.maxX,\n            0.4 * this.map.mapBoundaries.maxY,\n            300,\n            90,\n            2500,\n            2)\n        this.machine.machine.aeroplanes.push(plane1)\n        this.machine.machine.aeroplanes.push(plane2)\n    }\n\n    towardsRestrictionBreach = () => {\n        const plane = new _Domain_Aeroplane_Aeroplane__WEBPACK_IMPORTED_MODULE_0__.Aeroplane(\n            'AB123',\n            'TUT',\n            0.55 * this.map.mapBoundaries.maxX,\n            0.45 * this.map.mapBoundaries.maxY,\n            220,\n            90,\n            2500,\n            2)\n        this.machine.machine.aeroplanes.push(plane)\n    }\n\n}\n\n//# sourceURL=webpack://atc/./src/States/Tutorial/TutorialMapOverview.js?");

/***/ }),

/***/ "./src/States/Tutorial/TutorialSelectingAircraftClicking.js":
/*!******************************************************************!*\
  !*** ./src/States/Tutorial/TutorialSelectingAircraftClicking.js ***!
  \******************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"TutorialSelectingAircraftClicking\": () => (/* binding */ TutorialSelectingAircraftClicking)\n/* harmony export */ });\n/* harmony import */ var _Domain_Aeroplane_Aeroplane__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../Domain/Aeroplane/Aeroplane */ \"./src/Domain/Aeroplane/Aeroplane.js\");\n/* harmony import */ var _TutorialSelectingAircraftSidebar__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./TutorialSelectingAircraftSidebar */ \"./src/States/Tutorial/TutorialSelectingAircraftSidebar.js\");\n\n\n\nclass TutorialSelectingAircraftClicking {\n    constructor(map) {\n        this.map = map\n        this.machine = undefined\n        this.initialised = false\n    }\n\n    setMachine = (machine) => {\n        this.machine = machine\n    }\n\n    init = () => {\n        this.machine.machine.clear()\n        this._selectingAircraftClick()\n        this.machine.interfaceController.showHint(\n            \"Selecting aircraft [Click]\",\n            \"We always start by selecting an aircraft. There are several ways to do this.\\n\\n\" +\n            \"Select one of the aircraft on the map by clicking on it.\\n\\n\" +\n            \"The call sign will appear in the command entry field at the bottom of the map.\\n\\n\" +\n            \"The strip in the right hand sidebar associated with that aeroplane will also be highlighted.\\n\\n\" +\n            \"Try clicking one aircraft, then the other and see how the command entry and sidebar highlights change\",\n            \"\",\n            \"\",\n            \"Next\",\n            this.next\n        )\n        this.initialised = true\n    }\n\n    next = () => {\n        this.machine.machine.clear()\n        this.machine.interfaceController.clearCommandEntry()\n        this.machine.transitionTo(new _TutorialSelectingAircraftSidebar__WEBPACK_IMPORTED_MODULE_1__.TutorialSelectingAircraftSidebar(this.map))\n    }\n\n    _selectingAircraftClick = () => {\n        const plane1 = new _Domain_Aeroplane_Aeroplane__WEBPACK_IMPORTED_MODULE_0__.Aeroplane(\n            'AB123',\n            'TUT',\n            0.1 * this.map.mapBoundaries.maxX,\n            0.35 * this.map.mapBoundaries.maxY,\n            200,\n            90,\n            5000,\n            2)\n        const plane2 = new _Domain_Aeroplane_Aeroplane__WEBPACK_IMPORTED_MODULE_0__.Aeroplane(\n            'CD789',\n            'TUT',\n            0.7 * this.map.mapBoundaries.maxX,\n            0.1 * this.map.mapBoundaries.maxY,\n            200,\n            225,\n            5000,\n            2)\n        this.machine.machine.aeroplanes.push(plane1)\n        this.machine.machine.aeroplanes.push(plane2)\n    }\n}\n\n//# sourceURL=webpack://atc/./src/States/Tutorial/TutorialSelectingAircraftClicking.js?");

/***/ }),

/***/ "./src/States/Tutorial/TutorialSelectingAircraftSidebar.js":
/*!*****************************************************************!*\
  !*** ./src/States/Tutorial/TutorialSelectingAircraftSidebar.js ***!
  \*****************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"TutorialSelectingAircraftSidebar\": () => (/* binding */ TutorialSelectingAircraftSidebar)\n/* harmony export */ });\n/* harmony import */ var _Domain_Aeroplane_Aeroplane__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../Domain/Aeroplane/Aeroplane */ \"./src/Domain/Aeroplane/Aeroplane.js\");\n/* harmony import */ var _TutorialAircraftHeading__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./TutorialAircraftHeading */ \"./src/States/Tutorial/TutorialAircraftHeading.js\");\n\n\n\nclass TutorialSelectingAircraftSidebar {\n    constructor(map) {\n        this.map = map\n        this.machine = undefined\n        this.initialised = false\n    }\n\n    setMachine = (machine) => {\n        this.machine = machine\n    }\n\n    init = () => {\n        this.machine.machine.clear()\n        this._selectingAircraftSidebar()\n        this.machine.interfaceController.showHint(\n            \"Selecting aircraft [Sidebar]\",\n            \"You can also select an aircraft by clicking its associated strip in the right hand sidebar.\\n\\nLike before, the call sign will appear in the command entry field at the bottom of the map.\",\n            \"\",\n            \"\",\n            \"Next\",\n            this.next\n        )\n        this.initialised = true\n    }\n\n    next = () => {\n        this.machine.machine.clear()\n        this.machine.interfaceController.clearCommandEntry()\n        this.machine.transitionTo(new _TutorialAircraftHeading__WEBPACK_IMPORTED_MODULE_1__.TutorialAircraftHeading(this.map))\n    }\n\n    _selectingAircraftSidebar = () => {\n        const plane1 = new _Domain_Aeroplane_Aeroplane__WEBPACK_IMPORTED_MODULE_0__.Aeroplane(\n            'NM232',\n            'TUT',\n            0.75 * this.map.mapBoundaries.maxX,\n            0.8 * this.map.mapBoundaries.maxY,\n            200,\n            295,\n            5000,\n            2)\n        const plane2 = new _Domain_Aeroplane_Aeroplane__WEBPACK_IMPORTED_MODULE_0__.Aeroplane(\n            'LH562',\n            'TUT',\n            0.4 * this.map.mapBoundaries.maxX,\n            0.4 * this.map.mapBoundaries.maxY,\n            200,\n            75,\n            5000,\n            2)\n        this.machine.machine.aeroplanes.push(plane1)\n        this.machine.machine.aeroplanes.push(plane2)\n    }\n}\n\n//# sourceURL=webpack://atc/./src/States/Tutorial/TutorialSelectingAircraftSidebar.js?");

/***/ }),

/***/ "./src/config/aircraft.js":
/*!********************************!*\
  !*** ./src/config/aircraft.js ***!
  \********************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"AIRCRAFT\": () => (/* binding */ AIRCRAFT)\n/* harmony export */ });\nconst AIRCRAFT = [\n    {\n        \"operator\": \"British Airways\",\n        \"operatorIATA\": \"BA\",\n        \"type\": \"Airbus\",\n        \"class\": \"A340-400\",\n        \"shortClass\": \"A340\",\n        \"weight\": 3,\n    },\n    {\n        \"operator\": \"Lufthansa\",\n        \"operatorIATA\": \"LH\",\n        \"type\": \"Airbus\",\n        \"class\": \"A321xlr\",\n        \"shortClass\": \"A321\",\n        \"weight\": 2,\n    },\n    {\n        \"operator\": \"Virgin Atlantic\",\n        \"operatorIATA\": \"VS\",\n        \"type\": \"Boeing\",\n        \"class\": \"B747-400\",\n        \"shortClass\": \"B747\",\n        \"weight\": 3,\n    },\n    {\n        \"operator\": \"EasyJet\",\n        \"operatorIATA\": \"EZ\",\n        \"type\": \"Airbus\",\n        \"class\": \"A319neo\",\n        \"shortClass\": \"A319\",\n        \"weight\": 1,\n    },\n    {\n        \"operator\": \"RyanAir\",\n        \"operatorIATA\": \"RY\",\n        \"type\": \"Boeing\",\n        \"class\": \"B737-300\",\n        \"shortClass\": \"B737\",\n        \"weight\": 2,\n    },\n    {\n        \"operator\": \"Aer Lingus\",\n        \"operatorIATA\": \"AL\",\n        \"type\": \"Airbus\",\n        \"class\": \"A320-200\",\n        \"shortClass\": \"A320\",\n        \"weight\": 2,\n    },\n    {\n        \"operator\": \"American Airlines\",\n        \"operatorIATA\": \"AA\",\n        \"type\": \"Boeing\",\n        \"class\": \"B777-800\",\n        \"shortClass\": \"B777\",\n        \"weight\": 3,\n    }\n]\n\n//# sourceURL=webpack://atc/./src/config/aircraft.js?");

/***/ }),

/***/ "./src/config/colours.js":
/*!*******************************!*\
  !*** ./src/config/colours.js ***!
  \*******************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"COLOURS\": () => (/* binding */ COLOURS)\n/* harmony export */ });\nconst COLOURS = {\n    YELLOW: 'rgb(255,186,0)',\n    MINT: 'rgb(0,213,170)',\n    MINT_TRANSPARENT: 'rgba(0,213,170,0.2)',\n    BLUE: 'rgb(4,230,255)',\n    BLUE_TRANSPARENT: 'rgb(0,151,255,0.5)',\n    RED: 'rgb(253,3,43)',\n    RED_TRANSPARENT: 'rgba(220,46,78,0.2)',\n    BACKGROUND: 'rgb(8,8,19)',\n    WHITE: 'rgb(218,219,243)',\n    WHITE_TRANSPARENT: 'rgb(218,219,243,0.5)',\n    WHITE_TRANSPARENT_MAX: 'rgb(218,219,243,0.08)',\n    ORANGE: 'rgb(255,167,7)',\n    ORANGE_TRANSPARENT: 'rgb(194,127,6,0.15)',\n    GREY: 'rgba(197,197,197,0.25)',\n    GREY_TRANSPARENT: 'rgba(197,197,197,0.05)',\n}\n\n//# sourceURL=webpack://atc/./src/config/colours.js?");

/***/ }),

/***/ "./src/config/constants.js":
/*!*********************************!*\
  !*** ./src/config/constants.js ***!
  \*********************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"HORIZONTAL_SEPARATION_MINIMUM\": () => (/* binding */ HORIZONTAL_SEPARATION_MINIMUM),\n/* harmony export */   \"ILS_MAX_X\": () => (/* binding */ ILS_MAX_X),\n/* harmony export */   \"ILS_MIN_X\": () => (/* binding */ ILS_MIN_X),\n/* harmony export */   \"LANDED_ALTITUDE\": () => (/* binding */ LANDED_ALTITUDE),\n/* harmony export */   \"LANDING_SPEED\": () => (/* binding */ LANDING_SPEED),\n/* harmony export */   \"MAX_ALTITUDE\": () => (/* binding */ MAX_ALTITUDE),\n/* harmony export */   \"MAX_SPEED\": () => (/* binding */ MAX_SPEED),\n/* harmony export */   \"MIN_ALTITUDE\": () => (/* binding */ MIN_ALTITUDE),\n/* harmony export */   \"MIN_APPROACH_SPEED\": () => (/* binding */ MIN_APPROACH_SPEED),\n/* harmony export */   \"MIN_SPEED\": () => (/* binding */ MIN_SPEED),\n/* harmony export */   \"NUM_PROJECTED_TICKS\": () => (/* binding */ NUM_PROJECTED_TICKS),\n/* harmony export */   \"SPEED_TAIL_LENGTH\": () => (/* binding */ SPEED_TAIL_LENGTH),\n/* harmony export */   \"VERTICAL_SEPARATION_MINIMUM\": () => (/* binding */ VERTICAL_SEPARATION_MINIMUM)\n/* harmony export */ });\nconst MIN_SPEED = 120;\nconst MAX_SPEED = 999;\nconst LANDING_SPEED = 140;\nconst LANDED_ALTITUDE = 40\nconst MIN_APPROACH_SPEED = 200\nconst MIN_ALTITUDE = 1000;\nconst MAX_ALTITUDE = 40000;\nconst ILS_MAX_X = 220\nconst ILS_MIN_X = 140\nconst VERTICAL_SEPARATION_MINIMUM = 1000\nconst HORIZONTAL_SEPARATION_MINIMUM = 70\nconst SPEED_TAIL_LENGTH = 10\nconst NUM_PROJECTED_TICKS = 67 // 67 ticks at 900ms per tick ~= 60s\n\n\n//# sourceURL=webpack://atc/./src/config/constants.js?");

/***/ }),

/***/ "./src/config/maps/EGLL.js":
/*!*********************************!*\
  !*** ./src/config/maps/EGLL.js ***!
  \*********************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"EGLL\": () => (/* binding */ EGLL)\n/* harmony export */ });\n/* harmony import */ var _constants__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../constants */ \"./src/config/constants.js\");\n\n\nconst x = document.body.clientWidth\nconst y = document.body.clientHeight\nconst runwayWidth = x / 25\nconst runwayGap = x / 60\n\nconst EGLL = {\n    name: \"London Heathrow\",\n    shortCode: \"LHR\",\n    defaultWaypoint: \"LON\",\n    maxX: x,\n    maxY: y,\n    focusableConfig: {\n        runways: {\n            minX: x / 2 - (runwayWidth / 2),\n            minY: y / 2 - 10,\n            maxX: x / 2 + (runwayWidth / 2),\n            maxY: y / 2 + runwayGap + 10\n        },\n        waypoint: {\n            minX: (0.44 * x),\n            minY: (0.26 * y),\n            maxX: (0.48 * x),\n            maxY: (0.34 * y)\n        },\n        restrictedZone: {\n            minX: 0.65 * x,\n            minY: 0.3 * y,\n            maxX: 0.88 * x,\n            maxY: 0.67 * y,\n        },\n        restrictedZoneLabel: {\n            minX: 0.725 * x,\n            minY: 0.57 * y,\n            maxX: 0.78 * x,\n            maxY: 0.61 * y,\n        },\n        landingFeather: {\n            minX: x / 2 - (runwayWidth / 2) - _constants__WEBPACK_IMPORTED_MODULE_0__.ILS_MAX_X - 25,\n            minY: y / 2 - runwayGap,\n            maxX: x / 2 - (runwayWidth / 2) + 5,\n            maxY: y / 2 + runwayGap\n        }\n    },\n    features: {\n        runways: [\n            {\n                start: {\n                    label: \"9L\",\n                    heading: 90,\n                    altitude: 0,\n                    focusableConfig: {\n                        minX: x / 2 - (runwayWidth / 2) - _constants__WEBPACK_IMPORTED_MODULE_0__.ILS_MAX_X - 5,\n                        minY: y / 2 - 5,\n                        maxX: x / 2 - (runwayWidth / 2) + 5,\n                        maxY: y / 2 + runwayGap,\n                    },\n                    landingZone: {\n                        x: x / 2 - (runwayWidth / 5),\n                        y: y / 2,\n                    },\n                    ILS: {\n                        innerMarker: {\n                            x: x / 2 - (runwayWidth / 3),\n                            y: y / 2,\n                        },\n                        outerMarker: {\n                            x: x / 2 - (runwayWidth / 2) - _constants__WEBPACK_IMPORTED_MODULE_0__.ILS_MAX_X,\n                            y: y / 2,\n                        }\n                    }\n                },\n                end: {\n                    label: \"27R\",\n                    heading: 270,\n                    altitude: 0,\n                    landingZone: {\n                        x: x / 2 + (runwayWidth / 5),\n                        y: y / 2,\n                    },\n                    ILS: {\n                        innerMarker: {\n                            x: x / 2 + (runwayWidth / 3),\n                            y: y / 2,\n                        },\n                        outerMarker: {\n                            x: x / 2 + (runwayWidth / 2) + _constants__WEBPACK_IMPORTED_MODULE_0__.ILS_MAX_X,\n                            y: y / 2,\n                        }\n                    }\n                }\n            },\n            {\n                start: {\n                    label: \"9R\",\n                    heading: 90,\n                    altitude: 0,\n                    landingZone: {\n                        x: x / 2 - (runwayWidth / 5),\n                        y: y / 2 + runwayGap,\n                    },\n                    ILS: {\n                        innerMarker: {\n                            x: x / 2 - (runwayWidth / 3),\n                            y: y / 2 + runwayGap,\n                        },\n                        outerMarker: {\n                            x: x / 2 - (runwayWidth / 2) - _constants__WEBPACK_IMPORTED_MODULE_0__.ILS_MAX_X,\n                            y: y / 2 + runwayGap,\n                        }\n                    }\n                },\n                end: {\n                    label: \"27L\",\n                    heading: 270,\n                    altitude: 0,\n                    landingZone: {\n                        x: x / 2 + (runwayWidth / 5),\n                        y: y / 2 + runwayGap,\n                    },\n                    ILS: {\n                        innerMarker: {\n                            x: x / 2 + (runwayWidth / 3),\n                            y: y / 2 + runwayGap,\n                        },\n                        outerMarker: {\n                            x: x / 2 + (runwayWidth / 2) + _constants__WEBPACK_IMPORTED_MODULE_0__.ILS_MAX_X,\n                            y: y / 2 + runwayGap,\n                        }\n                    }\n                }\n            }\n        ],\n        waypoints: [\n            {type: \"VOR\", id: \"OCK\", name: \"Ockham\", x: (0.51 * x), y: (0.75 * y)},\n            {type: \"VOR\", id: \"GWC\", name: \"Goodwood\", x: (0.32 * x), y: (0.84 * y)},\n            {type: \"VOR\", id: \"LON\", name: \"London\", x: (0.495 * x), y: (0.48 * y)},\n            {type: \"VOR\", id: \"BPK\", name: \"Brookman's Park\", x: (0.75 * x), y: (0.1 * y)},\n            {type: \"VOR\", id: \"CPT\", name: \"Compton\", x: (0.15 * x), y: (0.48 * y)},\n            {type: \"VOR\", id: \"DET\", name: \"Detling\", x: (0.95 * x), y: (0.85 * y)},\n            {type: \"VOR\", id: \"MAY\", name: \"Mayfield\", x: (0.65 * x), y: (0.85 * y)},\n            {type: \"VOR\", id: \"LAM\", name: \"Lambourne\", x: (0.7 * x), y: (0.28 * y)},\n            {type: \"VOR\", id: \"EPM\", name: \"Epsom\", x: (0.55 * x), y: (0.73 * y)},\n            {type: \"VOR\", id: \"CHT\", name: \"Chiltern\", x: (0.46 * x), y: (0.31 * y)},\n\n            {type: \"RWY\", id: \"9L\", name: \"Runway 9L\", x: x / 2 - (runwayWidth / 2), y: y / 2},\n            {type: \"RWY\", id: \"9R\", name: \"Runway 9R\", x: x / 2 - (runwayWidth / 2), y: y / 2 + runwayGap},\n            {type: \"RWY\", id: \"27L\", name: \"Runway 27L\", x: x / 2 + (runwayWidth / 2), y: y / 2 + runwayGap},\n            {type: \"RWY\", id: \"27R\", name: \"Runway 27R\", x: x / 2 + (runwayWidth / 2), y: y / 2},\n        ],\n        exclusionZones: [\n            {\n                level: \"critical\",\n                dashes: 2,\n                label: {text: \"EG(R)-158\", location: {\"x\": 0.787 * x, \"y\": 0.42 * y}},\n                minAltitude: 4000,\n                maxAltitude: null,\n                boundaries: [\n                    {x: (0.785 * x), y: (0.44 * y), inv_y: y - (0.44 * y)},\n                    {x: (0.804 * x), y: (0.434 * y), inv_y: y - (0.434 * y)},\n                    {x: (0.811 * x), y: (0.448 * y), inv_y: y - (0.448 * y)},\n                    {x: (0.809 * x), y: (0.467 * y), inv_y: y - (0.467 * y)},\n                    {x: (0.784 * x), y: (0.456 * y), inv_y: y - (0.456 * y)},\n                ]\n            },\n            {\n                level: \"critical\",\n                dashes: 2,\n                label: {text: \"EG(R)-160\", location: {\"x\": 0.739 * x, \"y\": 0.471 * y}},\n                minAltitude: 4000,\n                maxAltitude: null,\n                boundaries: [\n                    {x: (0.744 * x), y: (0.398 * y), inv_y: y - (0.398 * y)},\n                    {x: (0.748 * x), y: (0.393 * y), inv_y: y - (0.393 * y)},\n                    {x: (0.754 * x), y: (0.397 * y), inv_y: y - (0.397 * y)},\n                    {x: (0.763 * x), y: (0.417 * y), inv_y: y - (0.417 * y)},\n                    {x: (0.783 * x), y: (0.471 * y), inv_y: y - (0.471 * y)},\n                    {x: (0.785 * x), y: (0.489 * y), inv_y: y - (0.489 * y)},\n                    {x: (0.785 * x), y: (0.507 * y), inv_y: y - (0.507 * y)},\n                    {x: (0.784 * x), y: (0.519 * y), inv_y: y - (0.519 * y)},\n                    {x: (0.781 * x), y: (0.525 * y), inv_y: y - (0.525 * y)},\n                    {x: (0.778 * x), y: (0.529 * y), inv_y: y - (0.529 * y)},\n                    {x: (0.774 * x), y: (0.526 * y), inv_y: y - (0.526 * y)},\n                    {x: (0.77 * x), y: (0.523 * y), inv_y: y - (0.523 * y)},\n                    {x: (0.769 * x), y: (0.514 * y), inv_y: y - (0.514 * y)},\n                    {x: (0.768 * x), y: (0.506 * y), inv_y: y - (0.506 * y)},\n                    {x: (0.731 * x), y: (0.493 * y), inv_y: y - (0.493 * y)},\n                    {x: (0.728 * x), y: (0.492 * y), inv_y: y - (0.492 * y)},\n                    {x: (0.724 * x), y: (0.485 * y), inv_y: y - (0.485 * y)},\n                    {x: (0.723 * x), y: (0.479 * y), inv_y: y - (0.479 * y)},\n                    {x: (0.723 * x), y: (0.472 * y), inv_y: y - (0.472 * y)},\n                    {x: (0.726 * x), y: (0.46 * y), inv_y: y - (0.46 * y)},\n                    {x: (0.73 * x), y: (0.441 * y), inv_y: y - (0.441 * y)},\n                    {x: (0.736 * x), y: (0.423 * y), inv_y: y - (0.423 * y)},\n                    {x: (0.742 * x), y: (0.401 * y), inv_y: y - (0.401 * y)},\n                ]\n            },\n            {\n                level: \"critical\",\n                dashes: 2,\n                label: {text: \"EG(R)-107\", location: {\"x\": 0.915 * x, \"y\": 0.52 * y}},\n                minAltitude: null,\n                maxAltitude: null,\n                boundaries: [\n                    {x: (0.935 * x), y: (0.470 * y), inv_y: y - (0.474 * y)},\n                    {x: (0.938 * x), y: (0.483 * y), inv_y: y - (0.483 * y)},\n                    {x: (0.936 * x), y: (0.496 * y), inv_y: y - (0.496 * y)},\n                    {x: (0.93 * x), y: (0.504 * y), inv_y: y - (0.504 * y)},\n                    {x: (0.925 * x), y: (0.498 * y), inv_y: y - (0.498 * y)},\n                    {x: (0.923 * x), y: (0.494 * y), inv_y: y - (0.494 * y)},\n                    {x: (0.927 * x), y: (0.478 * y), inv_y: y - (0.478 * y)},\n                    {x: (0.929 * x), y: (0.472 * y), inv_y: y - (0.472 * y)},\n                ]\n            },\n            {\n                level: \"moderate\",\n                dashes: 2,\n                label: {text: \"EG(D)-133\", location: {\"x\": 0.27 * x, \"y\": 0.455 * y}},\n                minAltitude: 4000,\n                maxAltitude: 40000,\n                boundaries: [\n                    {x: (0.29 * x), y: (0.471 * y), inv_y: y - (0.471 * y)},\n                    {x: (0.284 * x), y: (0.471 * y), inv_y: y - (0.471 * y)},\n                    {x: (0.278 * x), y: (0.475 * y), inv_y: y - (0.475 * y)},\n                    {x: (0.271 * x), y: (0.484 * y), inv_y: y - (0.484 * y)},\n                    {x: (0.27 * x), y: (0.499 * y), inv_y: y - (0.499 * y)},\n                    {x: (0.279 * x), y: (0.506 * y), inv_y: y - (0.506 * y)},\n                    {x: (0.288 * x), y: (0.505 * y), inv_y: y - (0.505 * y)},\n                    {x: (0.296 * x), y: (0.497 * y), inv_y: y - (0.497 * y)},\n                    {x: (0.303 * x), y: (0.487 * y), inv_y: y - (0.487 * y)},\n                    {x: (0.304 * x), y: (0.477 * y), inv_y: y - (0.477 * y)},\n                ]\n            },\n            {\n                level: \"moderate\",\n                dashes: 2,\n                label: {text: \"EG(R)-157\", location: {\"x\": 0.729 * x, \"y\": 0.587 * y}},\n                minAltitude: 3000,\n                maxAltitude: 5000,\n                boundaries: [\n                    {x: (0.824 * x), y: (0.331 * y), inv_y: y - (0.331 * y)},\n                    {x: (0.855 * x), y: (0.433 * y), inv_y: y - (0.433 * y)},\n                    {x: (0.853 * x), y: (0.602 * y), inv_y: y - (0.602 * y)},\n                    {x: (0.792 * x), y: (0.585 * y), inv_y: y - (0.585 * y)},\n                    {x: (0.722 * x), y: (0.655 * y), inv_y: y - (0.655 * y)},\n                    {x: (0.704 * x), y: (0.544 * y), inv_y: y - (0.544 * y)},\n                    {x: (0.665 * x), y: (0.51 * y), inv_y: y - (0.51 * y)},\n                    {x: (0.677 * x), y: (0.44 * y), inv_y: y - (0.44 * y)},\n                    {x: (0.681 * x), y: (0.429 * y), inv_y: y - (0.429 * y)},\n                    {x: (0.699 * x), y: (0.323 * y), inv_y: y - (0.323 * y)},\n                    {x: (0.759 * x), y: (0.358 * y), inv_y: y - (0.358 * y)},\n                ]\n            },\n            {\n                level: \"informational\",\n                dashes: 0,\n                label: {text: \"F79J\", location: {\"x\": 0.353 * x, \"y\": 0.115 * y}},\n                minAltitude: 5000,\n                maxAltitude: 40000,\n                boundaries: [\n                    {x: 0.4 * x, y: 0.1 * y, inv_y: y - (0.1 * y)},\n                    {x: 0.4 * x, y: 0.15 * y, inv_y: y - (0.15 * y)},\n                    {x: 0.35 * x, y: 0.15 * y, inv_y: y - (0.15 * y)},\n                    {x: 0.35 * x, y: 0.1 * y, inv_y: y - (0.1 * y)},\n                ]\n            }\n        ],\n        mapLines: [\n            {dashes: 3, start: {\"x\": 0, \"y\": 0}, end: {\"x\": 0.3 * x, \"y\": 0.3 * y}},\n            {dashes: 3, start: {\"x\": 0.3 * x, \"y\": 0.3 * y}, end: {\"x\": 0, \"y\": 0.6 * y}},\n            {dashes: 3, start: {\"x\": 0.3 * x, \"y\": 0.3 * y}, end: {\"x\": x, \"y\": 0.3 * y}},\n            {dashes: 3, start: {\"x\": 0.15 * x, \"y\": 0.15 * y}, end: {\"x\": 0.4 * x, \"y\": 0.1 * y}},\n            {dashes: 3, start: {\"x\": 0.4 * x, \"y\": 0.1 * y}, end: {\"x\": 0.45 * x, \"y\": 0.3 * y}},\n            {dashes: 20, start: {\"x\": 0, \"y\": 0.7 * y}, end: {\"x\": 0.38 * x, \"y\": 0.3 * y}},\n\n            {dashes: 20, start: {\"x\": 0.8 * x, \"y\": 0}, end: {\"x\": 0.75 * x, \"y\": 0.3 * y}},\n            {dashes: 20, start: {\"x\": 0.75 * x, \"y\": 0.3 * y}, end: {\"x\": 0.6 * x, \"y\": 0.6 * y}},\n            {dashes: 20, start: {\"x\": 0.6 * x, \"y\": 0.6 * y}, end: {\"x\": 0.5 * x, \"y\": 0.6 * y}},\n            {dashes: 20, start: {\"x\": 0.5 * x, \"y\": 0.6 * y}, end: {\"x\": 0.3 * x, \"y\": y}},\n            {dashes: 20, start: {\"x\": 0.6 * x, \"y\": 0.6 * y}, end: {\"x\": 0.63 * x, \"y\": y}},\n        ],\n        crosses: [\n            {\"x\": 0.3 * x, \"y\": 0.3 * y},\n            {\"x\": 0.38 * x, \"y\": 0.3 * y},\n            {\"x\": 0.15 * x, \"y\": 0.15 * y},\n            {\"x\": 0.4 * x, \"y\": 0.1 * y},\n            {\"x\": 0.45 * x, \"y\": 0.3 * y},\n            {\"x\": 0.75 * x, \"y\": 0.3 * y},\n            {\"x\": 0.6 * x, \"y\": 0.6 * y},\n            {\"x\": 0.5 * x, \"y\": 0.6 * y},\n\n            {\"x\": 0.45 * x, \"y\": 0.7 * y},\n            {\"x\": 0.35 * x, \"y\": 0.8 * y},\n            {\"x\": 0.25 * x, \"y\": 0.85 * y},\n\n            {\"x\": 0.7 * x, \"y\": 0.35 * y},\n            {\"x\": 0.65 * x, \"y\": 0.35 * y},\n            {\"x\": 0.60 * x, \"y\": 0.4 * y},\n\n            {\"x\": 0.80 * x, \"y\": 0.8 * y},\n            {\"x\": 0.70 * x, \"y\": 0.88 * y},\n            {\"x\": 0.87 * x, \"y\": 0.52 * y},\n            {\"x\": 0.55 * x, \"y\": 0.17 * y},\n\n            {\"x\": 0.1 * x, \"y\": 0.17 * y},\n            {\"x\": 0.15 * x, \"y\": 0.3 * y},\n\n        ],\n        tallStructures: [\n            {label: '579', x: 0.909 * x, y: 0.548 * y},\n            {label: '806', x: 0.851 * x, y: 0.475 * y},\n            {label: '671', x: 0.806 * x, y: 0.446 * y},\n            {label: '739', x: 0.763 * x, y: 0.417 * y},\n            {label: '542', x: 0.748 * x, y: 0.353 * y},\n            {label: '528', x: 0.721 * x, y: 0.436 * y},\n            {label: '558', x: 0.645 * x, y: 0.294 * y},\n            {label: '1087', x: 0.817 * x, y: 0.651 * y},\n            {label: '1184', x: 0.195 * x, y: 0.739 * y},\n            {label: '794', x: 0.298 * x, y: 0.055 * y},\n            {label: '1168', x: 0.615 * x, y: 0.693 * y},\n            {label: '766', x: 0.267 * x, y: 0.767 * y},\n        ]\n    },\n    terrain: {\n        waterBodies: [\n            {\n                name: \"Thames\",\n                borders: [\n                    [\n                        {x: x, y: 0.51 * y},\n                        {x: 0.995 * x, y: 0.5 * y},\n                        {x: 0.993 * x, y: 0.48 * y},\n                        {x: 0.984 * x, y: 0.46 * y},\n                        {x: 0.974 * x, y: 0.4605 * y},\n                        {x: 0.964 * x, y: 0.455 * y},\n                        {x: 0.955 * x, y: 0.441 * y},\n                        {x: 0.948 * x, y: 0.44 * y},\n                        {x: 0.947 * x, y: 0.441 * y},\n                        {x: 0.943 * x, y: 0.448 * y},\n                        {x: 0.925 * x, y: 0.449 * y},\n                        {x: 0.92 * x, y: 0.455 * y},\n                        {x: 0.912 * x, y: 0.49 * y},\n                        {x: 0.909 * x, y: 0.493 * y},\n                        {x: 0.903 * x, y: 0.493 * y},\n                        {x: 0.893 * x, y: 0.491 * y},\n                        {x: 0.885 * x, y: 0.492 * y},\n                        {x: 0.879 * x, y: 0.492 * y},\n                        {x: 0.876 * x, y: 0.488 * y},\n                        {x: 0.872 * x, y: 0.481 * y},\n                        {x: 0.87 * x, y: 0.475 * y},\n                        {x: 0.867 * x, y: 0.473 * y},\n                        {x: 0.863 * x, y: 0.474 * y},\n                        {x: 0.86 * x, y: 0.478 * y},\n                        {x: 0.858 * x, y: 0.484 * y},\n                        {x: 0.858 * x, y: 0.494 * y},\n                        {x: 0.86 * x, y: 0.504 * y},\n                        {x: 0.861 * x, y: 0.516 * y},\n                        {x: 0.86 * x, y: 0.519 * y},\n                        {x: 0.857 * x, y: 0.521 * y},\n                        {x: 0.854 * x, y: 0.521 * y},\n                        {x: 0.85 * x, y: 0.521 * y},\n                        {x: 0.846 * x, y: 0.517 * y},\n                        {x: 0.844 * x, y: 0.504 * y},\n                        {x: 0.844 * x, y: 0.488 * y},\n                        {x: 0.844 * x, y: 0.48 * y},\n                        {x: 0.841 * x, y: 0.474 * y},\n                        {x: 0.839 * x, y: 0.47 * y},\n                        {x: 0.835 * x, y: 0.47 * y},\n                        {x: 0.831 * x, y: 0.468 * y},\n                        {x: 0.828 * x, y: 0.472 * y},\n                        {x: 0.821 * x, y: 0.483 * y},\n                        {x: 0.816 * x, y: 0.48 * y},\n                        {x: 0.809 * x, y: 0.475 * y},\n                        {x: 0.802 * x, y: 0.469 * y},\n                        {x: 0.795 * x, y: 0.465 * y},\n                        {x: 0.788 * x, y: 0.465 * y},\n                        {x: 0.781 * x, y: 0.465 * y},\n                        {x: 0.778 * x, y: 0.469 * y},\n                        {x: 0.777 * x, y: 0.479 * y},\n                        {x: 0.774 * x, y: 0.492 * y},\n                        {x: 0.774 * x, y: 0.503 * y},\n                        {x: 0.773 * x, y: 0.511 * y},\n                        {x: 0.771 * x, y: 0.516 * y},\n                        {x: 0.768 * x, y: 0.521 * y},\n                        {x: 0.763 * x, y: 0.524 * y},\n                        {x: 0.756 * x, y: 0.523 * y},\n                        {x: 0.752 * x, y: 0.524 * y},\n                        {x: 0.749 * x, y: 0.532 * y},\n                        {x: 0.745 * x, y: 0.533 * y},\n                        {x: 0.742 * x, y: 0.537 * y},\n                        {x: 0.738 * x, y: 0.541 * y},\n                        {x: 0.733 * x, y: 0.55 * y},\n                        {x: 0.729 * x, y: 0.556 * y},\n                        {x: 0.726 * x, y: 0.56 * y},\n                        {x: 0.723 * x, y: 0.56 * y},\n                        {x: 0.72 * x, y: 0.559 * y},\n                        {x: 0.716 * x, y: 0.556 * y},\n                        {x: 0.713 * x, y: 0.552 * y},\n                        {x: 0.71 * x, y: 0.544 * y},\n                        {x: 0.709 * x, y: 0.534 * y},\n                        {x: 0.707 * x, y: 0.52 * y},\n                        {x: 0.703 * x, y: 0.514 * y},\n                        {x: 0.697 * x, y: 0.512 * y},\n                        {x: 0.694 * x, y: 0.517 * y},\n                        {x: 0.691 * x, y: 0.525 * y},\n                        {x: 0.689 * x, y: 0.535 * y},\n                        {x: 0.686 * x, y: 0.541 * y},\n                        {x: 0.684 * x, y: 0.544 * y},\n                        {x: 0.68 * x, y: 0.546 * y},\n                        {x: 0.676 * x, y: 0.539 * y},\n                        {x: 0.672 * x, y: 0.531 * y},\n                        {x: 0.667 * x, y: 0.521 * y},\n                        {x: 0.663 * x, y: 0.515 * y},\n                        {x: 0.66 * x, y: 0.513 * y},\n                        {x: 0.656 * x, y: 0.514 * y},\n                        {x: 0.652 * x, y: 0.518 * y},\n                        {x: 0.649 * x, y: 0.52 * y},\n\n                        // Switchback\n                        {x: 0.653 * x, y: 0.524 * y},\n                        {x: 0.657 * x, y: 0.519 * y},\n                        {x: 0.66 * x, y: 0.519 * y},\n                        {x: 0.662 * x, y: 0.519 * y},\n                        {x: 0.663 * x, y: 0.521 * y},\n                        {x: 0.665 * x, y: 0.525 * y},\n                        {x: 0.667 * x, y: 0.529 * y},\n                        {x: 0.669 * x, y: 0.533 * y},\n                        {x: 0.671 * x, y: 0.537 * y},\n                        {x: 0.672 * x, y: 0.541 * y},\n                        {x: 0.674 * x, y: 0.547 * y},\n                        {x: 0.677 * x, y: 0.549 * y},\n                        {x: 0.679 * x, y: 0.551 * y},\n                        {x: 0.681 * x, y: 0.552 * y},\n                        {x: 0.683 * x, y: 0.552 * y},\n                        {x: 0.686 * x, y: 0.55 * y},\n                        {x: 0.689 * x, y: 0.547 * y},\n                        {x: 0.69 * x, y: 0.541 * y},\n                        {x: 0.692 * x, y: 0.535 * y},\n                        {x: 0.693 * x, y: 0.532 * y},\n                        {x: 0.694 * x, y: 0.529 * y},\n                        {x: 0.696 * x, y: 0.522 * y},\n                        {x: 0.697 * x, y: 0.52 * y},\n                        {x: 0.698 * x, y: 0.519 * y},\n                        {x: 0.701 * x, y: 0.52 * y},\n                        {x: 0.703 * x, y: 0.52 * y},\n                        {x: 0.705 * x, y: 0.522 * y},\n                        {x: 0.706 * x, y: 0.525 * y},\n                        {x: 0.707 * x, y: 0.531 * y},\n                        {x: 0.707 * x, y: 0.537 * y},\n                        {x: 0.708 * x, y: 0.544 * y},\n                        {x: 0.71 * x, y: 0.552 * y},\n                        {x: 0.711 * x, y: 0.557 * y},\n                        {x: 0.714 * x, y: 0.56 * y},\n                        {x: 0.717 * x, y: 0.564 * y},\n                        {x: 0.72 * x, y: 0.566 * y},\n                        {x: 0.722 * x, y: 0.566 * y},\n                        {x: 0.723 * x, y: 0.566 * y},\n                        {x: 0.726 * x, y: 0.567 * y},\n                        {x: 0.729 * x, y: 0.565 * y},\n                        {x: 0.732 * x, y: 0.561 * y},\n                        {x: 0.734 * x, y: 0.557 * y},\n                        {x: 0.736 * x, y: 0.553 * y},\n                        {x: 0.739 * x, y: 0.55 * y},\n                        {x: 0.742 * x, y: 0.547 * y},\n                        {x: 0.744 * x, y: 0.542 * y},\n                        {x: 0.747 * x, y: 0.539 * y},\n                        {x: 0.749 * x, y: 0.539 * y},\n                        {x: 0.752 * x, y: 0.536 * y},\n                        {x: 0.754 * x, y: 0.534 * y},\n                        {x: 0.756 * x, y: 0.532 * y},\n                        {x: 0.76 * x, y: 0.531 * y},\n                        {x: 0.763 * x, y: 0.532 * y},\n                        {x: 0.769 * x, y: 0.529 * y},\n                        {x: 0.775 * x, y: 0.519 * y},\n                        {x: 0.776 * x, y: 0.511 * y},\n                        {x: 0.778 * x, y: 0.502 * y},\n                        {x: 0.778 * x, y: 0.492 * y},\n                        {x: 0.78 * x, y: 0.481 * y},\n                        {x: 0.781 * x, y: 0.474 * y},\n                        {x: 0.783 * x, y: 0.471 * y},\n                        {x: 0.786 * x, y: 0.471 * y},\n                        {x: 0.792 * x, y: 0.472 * y},\n                        {x: 0.798 * x, y: 0.475 * y},\n                        {x: 0.805 * x, y: 0.479 * y},\n                        {x: 0.81 * x, y: 0.484 * y},\n                        {x: 0.814 * x, y: 0.488 * y},\n                        {x: 0.818 * x, y: 0.489 * y},\n                        {x: 0.822 * x, y: 0.489 * y},\n                        {x: 0.825 * x, y: 0.489 * y},\n                        {x: 0.828 * x, y: 0.485 * y},\n                        {x: 0.831 * x, y: 0.479 * y},\n                        {x: 0.833 * x, y: 0.477 * y},\n                        {x: 0.835 * x, y: 0.477 * y},\n                        {x: 0.838 * x, y: 0.479 * y},\n                        {x: 0.839 * x, y: 0.481 * y},\n                        {x: 0.84 * x, y: 0.485 * y},\n                        {x: 0.84 * x, y: 0.497 * y},\n                        {x: 0.84 * x, y: 0.506 * y},\n                        {x: 0.841 * x, y: 0.514 * y},\n                        {x: 0.844 * x, y: 0.521 * y},\n                        {x: 0.845 * x, y: 0.525 * y},\n                        {x: 0.849 * x, y: 0.529 * y},\n                        {x: 0.852 * x, y: 0.531 * y},\n                        {x: 0.855 * x, y: 0.53 * y},\n                        {x: 0.858 * x, y: 0.529 * y},\n                        {x: 0.861 * x, y: 0.526 * y},\n                        {x: 0.864 * x, y: 0.523 * y},\n                        {x: 0.865 * x, y: 0.52 * y},\n                        {x: 0.865 * x, y: 0.515 * y},\n                        {x: 0.865 * x, y: 0.511 * y},\n                        {x: 0.864 * x, y: 0.504 * y},\n                        {x: 0.863 * x, y: 0.494 * y},\n                        {x: 0.863 * x, y: 0.487 * y},\n                        {x: 0.865 * x, y: 0.483 * y},\n                        {x: 0.866 * x, y: 0.482 * y},\n                        {x: 0.868 * x, y: 0.484 * y},\n                        {x: 0.87 * x, y: 0.487 * y},\n                        {x: 0.873 * x, y: 0.494 * y},\n                        {x: 0.876 * x, y: 0.5 * y},\n                        {x: 0.877 * x, y: 0.504 * y},\n                        {x: 0.879 * x, y: 0.507 * y},\n                        {x: 0.884 * x, y: 0.507 * y},\n                        {x: 0.89 * x, y: 0.506 * y},\n                        {x: 0.894 * x, y: 0.502 * y},\n                        {x: 0.898 * x, y: 0.502 * y},\n                        {x: 0.905 * x, y: 0.502 * y},\n                        {x: 0.911 * x, y: 0.502 * y},\n                        {x: 0.916 * x, y: 0.502 * y},\n                        {x: 0.918 * x, y: 0.497 * y},\n                        {x: 0.922 * x, y: 0.486 * y},\n                        {x: 0.927 * x, y: 0.47 * y},\n                        {x: 0.93 * x, y: 0.465 * y},\n                        {x: 0.933 * x, y: 0.465 * y},\n                        {x: 0.937 * x, y: 0.464 * y},\n                        {x: 0.942 * x, y: 0.464 * y},\n                        {x: 0.944 * x, y: 0.463 * y},\n                        {x: 0.948 * x, y: 0.458 * y},\n                        {x: 0.952 * x, y: 0.458 * y},\n                        {x: 0.955 * x, y: 0.461 * y},\n                        {x: 0.959 * x, y: 0.466 * y},\n                        {x: 0.968 * x, y: 0.474 * y},\n                        {x: 0.979 * x, y: 0.477 * y},\n                        {x: 0.984 * x, y: 0.484 * y},\n                        {x: 0.984 * x, y: 0.508 * y},\n                        {x: 0.991 * x, y: 0.523 * y},\n                        {x: x, y: 0.529 * y},\n                    ],\n                ]\n            },\n            {\n                name: \"Enfield Reservoir\",\n                borders: [\n                    [\n                        {x: 0.855 * x, y: 0.15 * y},\n                        {x: 0.854 * x, y: 0.165 * y},\n                        {x: 0.853 * x, y: 0.167 * y},\n                        {x: 0.852 * x, y: 0.174 * y},\n                        {x: 0.85 * x, y: 0.185 * y},\n                        {x: 0.847 * x, y: 0.195 * y},\n                        {x: 0.845 * x, y: 0.203 * y},\n                        {x: 0.843 * x, y: 0.21 * y},\n                        {x: 0.841 * x, y: 0.211 * y},\n                        {x: 0.84 * x, y: 0.21 * y},\n                        {x: 0.842 * x, y: 0.196 * y},\n                        {x: 0.843 * x, y: 0.185 * y},\n                        {x: 0.844 * x, y: 0.175 * y},\n                        {x: 0.844 * x, y: 0.167 * y},\n                        {x: 0.846 * x, y: 0.158 * y},\n                        {x: 0.848 * x, y: 0.153 * y},\n                        {x: 0.85 * x, y: 0.143 * y},\n                        {x: 0.853 * x, y: 0.143 * y},\n                        {x: 0.855 * x, y: 0.146 * y},\n                    ]\n                ]\n            },\n            {\n                name: \"Walthamstow Filter Beds\",\n                borders: [\n                    [\n                        {x: 0.842 * x, y: 0.241 * y},\n                        {x: 0.843 * x, y: 0.244 * y},\n                        {x: 0.844 * x, y: 0.248 * y},\n                        {x: 0.844 * x, y: 0.252 * y},\n                        {x: 0.841 * x, y: 0.254 * y},\n                        {x: 0.839 * x, y: 0.253 * y},\n                        {x: 0.835 * x, y: 0.251 * y},\n                        {x: 0.836 * x, y: 0.247 * y},\n                        {x: 0.838 * x, y: 0.243 * y},\n                        {x: 0.841 * x, y: 0.24 * y},\n\n                    ],\n                    [\n                        {x: 0.832 * x, y: 0.26 * y},\n                        {x: 0.833 * x, y: 0.265 * y},\n                        {x: 0.832 * x, y: 0.271 * y},\n                        {x: 0.831 * x, y: 0.276 * y},\n                        {x: 0.83 * x, y: 0.28 * y},\n                        {x: 0.828 * x, y: 0.282 * y},\n                        {x: 0.827 * x, y: 0.278 * y},\n                        {x: 0.827 * x, y: 0.271 * y},\n                        {x: 0.828 * x, y: 0.264 * y},\n                        {x: 0.832 * x, y: 0.258 * y},\n                    ],\n                    [\n                        {x: 0.831 * x, y: 0.285 * y},\n                        {x: 0.832 * x, y: 0.293 * y},\n                        {x: 0.831 * x, y: 0.299 * y},\n                        {x: 0.83 * x, y: 0.307 * y},\n                        {x: 0.828 * x, y: 0.308 * y},\n                        {x: 0.826 * x, y: 0.314 * y},\n                        {x: 0.824 * x, y: 0.319 * y},\n                        {x: 0.822 * x, y: 0.315 * y},\n                        {x: 0.822 * x, y: 0.308 * y},\n                        {x: 0.822 * x, y: 0.303 * y},\n                        {x: 0.824 * x, y: 0.298 * y},\n                        {x: 0.826 * x, y: 0.303 * y},\n                        {x: 0.827 * x, y: 0.292 * y},\n                        {x: 0.829 * x, y: 0.288 * y},\n                    ]\n                ]\n            },\n            {\n                name: \"Heathrow Reservoirs\",\n                borders: [\n                    [\n                        {x: 0.445 * x, y: 0.493 * y},\n                        {x: 0.442 * x, y: 0.495 * y},\n                        {x: 0.441 * x, y: 0.495 * y},\n                        {x: 0.44 * x, y: 0.498 * y},\n                        {x: 0.437 * x, y: 0.496 * y},\n                        {x: 0.434 * x, y: 0.498 * y},\n                        {x: 0.432 * x, y: 0.501 * y},\n                        {x: 0.43 * x, y: 0.503 * y},\n                        {x: 0.429 * x, y: 0.508 * y},\n                        {x: 0.429 * x, y: 0.513 * y},\n                        {x: 0.431 * x, y: 0.519 * y},\n                        {x: 0.434 * x, y: 0.524 * y},\n                        {x: 0.437 * x, y: 0.526 * y},\n                        {x: 0.441 * x, y: 0.525 * y},\n                        {x: 0.443 * x, y: 0.518 * y},\n                        {x: 0.444 * x, y: 0.51 * y},\n                        {x: 0.446 * x, y: 0.502 * y},\n                        {x: 0.446 * x, y: 0.494 * y},\n                    ],\n                    [\n                        {x: 0.432 * x, y: 0.538 * y},\n                        {x: 0.436 * x, y: 0.551 * y},\n                        {x: 0.437 * x, y: 0.553 * y},\n                        {x: 0.437 * x, y: 0.554 * y},\n                        {x: 0.435 * x, y: 0.558 * y},\n                        {x: 0.435 * x, y: 0.563 * y},\n                        {x: 0.433 * x, y: 0.564 * y},\n                        {x: 0.431 * x, y: 0.565 * y},\n                        {x: 0.43 * x, y: 0.559 * y},\n                        {x: 0.428 * x, y: 0.556 * y},\n                        {x: 0.427 * x, y: 0.555 * y},\n                        {x: 0.428 * x, y: 0.549 * y},\n                        {x: 0.43 * x, y: 0.549 * y},\n                        {x: 0.432 * x, y: 0.543 * y},\n                        {x: 0.432 * x, y: 0.54 * y},\n                    ],\n                    [\n                        {x: 0.457 * x, y: 0.531 * y},\n                        {x: 0.459 * x, y: 0.536 * y},\n                        {x: 0.461 * x, y: 0.54 * y},\n                        {x: 0.46 * x, y: 0.547 * y},\n                        {x: 0.459 * x, y: 0.554 * y},\n                        {x: 0.459 * x, y: 0.566 * y},\n                        {x: 0.456 * x, y: 0.569 * y},\n                        {x: 0.454 * x, y: 0.572 * y},\n                        {x: 0.451 * x, y: 0.579 * y},\n                        {x: 0.451 * x, y: 0.581 * y},\n                        {x: 0.449 * x, y: 0.577 * y},\n                        {x: 0.447 * x, y: 0.573 * y},\n                        {x: 0.446 * x, y: 0.571 * y},\n                        {x: 0.445 * x, y: 0.567 * y},\n                        {x: 0.446 * x, y: 0.563 * y},\n                        {x: 0.448 * x, y: 0.56 * y},\n                        {x: 0.449 * x, y: 0.551 * y},\n                        {x: 0.45 * x, y: 0.541 * y},\n                        {x: 0.453 * x, y: 0.532 * y},\n                        {x: 0.456 * x, y: 0.53 * y},\n                    ],\n                    [\n                        {x: 0.466 * x, y: 0.564 * y},\n                        {x: 0.472 * x, y: 0.565 * y},\n                        {x: 0.476 * x, y: 0.566 * y},\n                        {x: 0.479 * x, y: 0.568 * y},\n                        {x: 0.482 * x, y: 0.573 * y},\n                        {x: 0.482 * x, y: 0.581 * y},\n                        {x: 0.484 * x, y: 0.585 * y},\n                        {x: 0.487 * x, y: 0.588 * y},\n                        {x: 0.488 * x, y: 0.593 * y},\n                        {x: 0.489 * x, y: 0.597 * y},\n                        {x: 0.489 * x, y: 0.601 * y},\n                        {x: 0.486 * x, y: 0.604 * y},\n                        {x: 0.482 * x, y: 0.607 * y},\n                        {x: 0.479 * x, y: 0.61 * y},\n                        {x: 0.476 * x, y: 0.612 * y},\n                        {x: 0.474 * x, y: 0.612 * y},\n                        {x: 0.472 * x, y: 0.61 * y},\n                        {x: 0.47 * x, y: 0.605 * y},\n                        {x: 0.468 * x, y: 0.605 * y},\n                        {x: 0.466 * x, y: 0.602 * y},\n                        {x: 0.464 * x, y: 0.599 * y},\n                        {x: 0.464 * x, y: 0.592 * y},\n                        {x: 0.466 * x, y: 0.588 * y},\n                        {x: 0.465 * x, y: 0.577 * y},\n                        {x: 0.465 * x, y: 0.572 * y},\n                        {x: 0.465 * x, y: 0.569 * y},\n                    ],\n                    [\n                        {x: 0.501 * x, y: 0.633 * y},\n                        {x: 0.506 * x, y: 0.637 * y},\n                        {x: 0.509 * x, y: 0.643 * y},\n                        {x: 0.511 * x, y: 0.648 * y},\n                        {x: 0.512 * x, y: 0.657 * y},\n                        {x: 0.513 * x, y: 0.665 * y},\n                        {x: 0.51 * x, y: 0.671 * y},\n                        {x: 0.507 * x, y: 0.677 * y},\n                        {x: 0.504 * x, y: 0.68 * y},\n                        {x: 0.501 * x, y: 0.68 * y},\n                        {x: 0.495 * x, y: 0.68 * y},\n                        {x: 0.493 * x, y: 0.677 * y},\n                        {x: 0.491 * x, y: 0.667 * y},\n                        {x: 0.489 * x, y: 0.664 * y},\n                        {x: 0.487 * x, y: 0.658 * y},\n                        {x: 0.487 * x, y: 0.654 * y},\n                        {x: 0.489 * x, y: 0.651 * y},\n                        {x: 0.492 * x, y: 0.647 * y},\n                        {x: 0.494 * x, y: 0.639 * y},\n                        {x: 0.497 * x, y: 0.635 * y},\n                        {x: 0.501 * x, y: 0.633 * y},\n                    ],\n                    [\n                        {x: 0.543 * x, y: 0.633 * y},\n                        {x: 0.546 * x, y: 0.635 * y},\n                        {x: 0.549 * x, y: 0.637 * y},\n                        {x: 0.552 * x, y: 0.642 * y},\n                        {x: 0.552 * x, y: 0.648 * y},\n                        {x: 0.552 * x, y: 0.653 * y},\n                        {x: 0.548 * x, y: 0.65 * y},\n                        {x: 0.544 * x, y: 0.647 * y},\n                        {x: 0.54 * x, y: 0.641 * y},\n                        {x: 0.54 * x, y: 0.64 * y},\n                    ],\n                    [\n                        {x: 0.456 * x, y: 0.646 * y},\n                        {x: 0.457 * x, y: 0.651 * y},\n                        {x: 0.46 * x, y: 0.656 * y},\n                        {x: 0.464 * x, y: 0.663 * y},\n                        {x: 0.465 * x, y: 0.669 * y},\n                        {x: 0.466 * x, y: 0.679 * y},\n                        {x: 0.466 * x, y: 0.686 * y},\n                        {x: 0.465 * x, y: 0.688 * y},\n                        {x: 0.463 * x, y: 0.689 * y},\n                        {x: 0.46 * x, y: 0.686 * y},\n                        {x: 0.459 * x, y: 0.68 * y},\n                        {x: 0.458 * x, y: 0.676 * y},\n                        {x: 0.456 * x, y: 0.669 * y},\n                        {x: 0.454 * x, y: 0.671 * y},\n                        {x: 0.452 * x, y: 0.669 * y},\n                        {x: 0.451 * x, y: 0.667 * y},\n                        {x: 0.451 * x, y: 0.655 * y},\n                        {x: 0.456 * x, y: 0.645 * y},\n                    ]\n                ]\n            }\n        ]\n    }\n}\n\n//# sourceURL=webpack://atc/./src/config/maps/EGLL.js?");

/***/ }),

/***/ "./src/index.js":
/*!**********************!*\
  !*** ./src/index.js ***!
  \**********************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _Interface_UIController__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./Interface/UIController */ \"./src/Interface/UIController.js\");\n/* harmony import */ var _Application_AeroplaneService__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./Application/AeroplaneService */ \"./src/Application/AeroplaneService.js\");\n/* harmony import */ var _Application_GameLoop__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./Application/GameLoop */ \"./src/Application/GameLoop.js\");\n/* harmony import */ var _Interface_InterfaceController__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./Interface/InterfaceController */ \"./src/Interface/InterfaceController.js\");\n/* harmony import */ var _config_maps_EGLL__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./config/maps/EGLL */ \"./src/config/maps/EGLL.js\");\n/* harmony import */ var _Application_StatsService__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./Application/StatsService */ \"./src/Application/StatsService.js\");\n/* harmony import */ var _Domain_GameMap_GameMap__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./Domain/GameMap/GameMap */ \"./src/Domain/GameMap/GameMap.js\");\n/* harmony import */ var _States_CoreGamePlay__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./States/CoreGamePlay */ \"./src/States/CoreGamePlay.js\");\n\n\n\n\n\n\n\n\n\n\nconst map = new _Domain_GameMap_GameMap__WEBPACK_IMPORTED_MODULE_6__.GameMap(_config_maps_EGLL__WEBPACK_IMPORTED_MODULE_4__.EGLL)\n\n\nconst statsService = new _Application_StatsService__WEBPACK_IMPORTED_MODULE_5__.StatsService();\nconst startState = new _States_CoreGamePlay__WEBPACK_IMPORTED_MODULE_7__.CoreGamePlay(map)\n\nconst aeroplaneService = new _Application_AeroplaneService__WEBPACK_IMPORTED_MODULE_1__.AeroplaneService(map, statsService, startState)\n\nconst interfaceController = new _Interface_InterfaceController__WEBPACK_IMPORTED_MODULE_3__.InterfaceController(aeroplaneService)\nconst uiController = new _Interface_UIController__WEBPACK_IMPORTED_MODULE_0__.UIController(map, aeroplaneService)\n\nconst gameLoop = new _Application_GameLoop__WEBPACK_IMPORTED_MODULE_2__.GameLoop(uiController, interfaceController, aeroplaneService, statsService)\n\ngameLoop.init()\ngameLoop.start()\n\n//# sourceURL=webpack://atc/./src/index.js?");

/***/ }),

/***/ "./src/utils/geometry.js":
/*!*******************************!*\
  !*** ./src/utils/geometry.js ***!
  \*******************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"distance\": () => (/* binding */ distance),\n/* harmony export */   \"isInsidePolygon\": () => (/* binding */ isInsidePolygon),\n/* harmony export */   \"shortestAngle\": () => (/* binding */ shortestAngle)\n/* harmony export */ });\nconst distance = (currentX, currentY, targetX, targetY) => {\n    return Math.sqrt(Math.pow((currentX - targetX), 2) + Math.pow((currentY - targetY), 2))\n}\n\nconst shortestAngle = (currentHeading, targetHeading) => {\n    if (currentHeading === 180 && targetHeading === 0) {\n        return 180\n    }\n    if (currentHeading === 0 && (targetHeading < 360 && targetHeading > 180)) {\n        return targetHeading - 360\n    }\n    if (currentHeading - targetHeading < -180) {\n        return -(currentHeading + 360 - targetHeading)\n    }\n    if (currentHeading - targetHeading > 180) {\n        return targetHeading + 360 - currentHeading\n    }\n    if (targetHeading - currentHeading === -180) {\n        return 180\n    }\n    return targetHeading - currentHeading\n}\n\n\nconst pointOnCorner = (polygon, x, y, i) => {\n    return (x === polygon[i].x) && (y === polygon[i].inv_y)\n}\n\nconst points_not_horizontal = (poly, y, i, j) => {\n    return (polygon_point_higher(poly, y, i)) !== (polygon_point_higher(poly, y, j))\n}\n\nconst polygon_point_higher = (poly, y, i) => {\n    return poly[i].inv_y > y\n}\n\nconst calculate_slope = (poly, x, y, i, j) => {\n    const point1_x = poly[i].x\n    const point1_y = poly[i].inv_y\n\n    const point2_x = poly[j].x\n    const point2_y = poly[j].inv_y\n\n    return (x - point1_x) * (point2_y - point1_y) - (point2_x - point1_x) * (y - point1_y)\n}\n\nconst pointOnBoundary = (slope) => {\n    return slope === 0\n}\n\nconst isInsidePolygon = (polygon, x, y) => {\n    const numSides = polygon.length\n    let j = numSides - 1\n    let inside = false\n\n    for (let i = 0; i < numSides; i++) {\n        if (pointOnCorner(polygon, x, y, i)) {\n            return false\n        }\n\n        if (points_not_horizontal(polygon, y, i, j)) {\n            const slope = calculate_slope(polygon, x, y, i, j)\n            if (pointOnBoundary(slope)) {\n                return true\n            }\n            if ((slope < 0) !== (polygon[j].inv_y < polygon[i].inv_y)) {\n                inside = !inside  // Invert location with every traversed edge\n            }\n        }\n        j = i\n    }\n\n    return inside\n}\n\n//# sourceURL=webpack://atc/./src/utils/geometry.js?");

/***/ }),

/***/ "./src/utils/maths.js":
/*!****************************!*\
  !*** ./src/utils/maths.js ***!
  \****************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"getRandomNumberBetween\": () => (/* binding */ getRandomNumberBetween),\n/* harmony export */   \"range\": () => (/* binding */ range),\n/* harmony export */   \"round\": () => (/* binding */ round),\n/* harmony export */   \"roundToNearest\": () => (/* binding */ roundToNearest),\n/* harmony export */   \"toDegrees\": () => (/* binding */ toDegrees),\n/* harmony export */   \"toRadians\": () => (/* binding */ toRadians)\n/* harmony export */ });\nconst getRandomNumberBetween = (min, max) => {\n    return Math.floor(Math.random() * (max - min + 1) + min);\n}\n\nconst toRadians = (degrees) => {\n    return (Math.PI / 180) * degrees\n}\n\nconst toDegrees = (radians) => {\n    return (180 * radians) / Math.PI\n}\n\nconst round = (number, n) => {\n    return Math.round(number * Math.pow(10, n)) / Math.pow(10, n)\n}\n\nconst roundToNearest = (number, nearest) => {\n    return Math.ceil(number / nearest) * nearest\n}\n\nconst range = (a, b, step) => {\n    if (!step) {\n        throw 'Step cannot be 0'\n    }\n    let array = []\n\n    if (b > a) {\n        for (let x = a; x < b; x += step) {\n            array.push(x)\n        }\n        return array\n    }\n\n    if (a > b) {\n        for (let x = a; x > b; x -= step) {\n            array.push(x)\n        }\n        return array\n    }\n\n    return []\n}\n\n//# sourceURL=webpack://atc/./src/utils/maths.js?");

/***/ }),

/***/ "./src/utils/timeFormatters.js":
/*!*************************************!*\
  !*** ./src/utils/timeFormatters.js ***!
  \*************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"timeStringFromSeconds\": () => (/* binding */ timeStringFromSeconds)\n/* harmony export */ });\nconst timeStringFromSeconds = (seconds) => {\n    return new Date(seconds * 1000).toISOString().slice(14, 19)\n}\n\n\n//# sourceURL=webpack://atc/./src/utils/timeFormatters.js?");

/***/ })

/******/ 	});
/************************************************************************/
/******/ 	// The module cache
/******/ 	var __webpack_module_cache__ = {};
/******/ 	
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/ 		// Check if module is in cache
/******/ 		var cachedModule = __webpack_module_cache__[moduleId];
/******/ 		if (cachedModule !== undefined) {
/******/ 			return cachedModule.exports;
/******/ 		}
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = __webpack_module_cache__[moduleId] = {
/******/ 			// no module.id needed
/******/ 			// no module.loaded needed
/******/ 			exports: {}
/******/ 		};
/******/ 	
/******/ 		// Execute the module function
/******/ 		__webpack_modules__[moduleId](module, module.exports, __webpack_require__);
/******/ 	
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/ 	
/************************************************************************/
/******/ 	/* webpack/runtime/define property getters */
/******/ 	(() => {
/******/ 		// define getter functions for harmony exports
/******/ 		__webpack_require__.d = (exports, definition) => {
/******/ 			for(var key in definition) {
/******/ 				if(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {
/******/ 					Object.defineProperty(exports, key, { enumerable: true, get: definition[key] });
/******/ 				}
/******/ 			}
/******/ 		};
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/hasOwnProperty shorthand */
/******/ 	(() => {
/******/ 		__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/make namespace object */
/******/ 	(() => {
/******/ 		// define __esModule on exports
/******/ 		__webpack_require__.r = (exports) => {
/******/ 			if(typeof Symbol !== 'undefined' && Symbol.toStringTag) {
/******/ 				Object.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });
/******/ 			}
/******/ 			Object.defineProperty(exports, '__esModule', { value: true });
/******/ 		};
/******/ 	})();
/******/ 	
/************************************************************************/
/******/ 	
/******/ 	// startup
/******/ 	// Load entry module and return exports
/******/ 	// This entry module can't be inlined because the eval devtool is used.
/******/ 	var __webpack_exports__ = __webpack_require__("./src/index.js");
/******/ 	
/******/ })()
;