/*
 * ATTENTION: The "eval" devtool has been used (maybe by default in mode: "development").
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
/******/ (() => { // webpackBootstrap
/******/ 	"use strict";
/******/ 	var __webpack_modules__ = ({

/***/ "./src/Application/AeroplaneService.js":
/*!*********************************************!*\
  !*** ./src/Application/AeroplaneService.js ***!
  \*********************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"AeroplaneService\": () => (/* binding */ AeroplaneService)\n/* harmony export */ });\n/* harmony import */ var _Command_CommandParser_CommandParser__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../Command/CommandParser/CommandParser */ \"./src/Command/CommandParser/CommandParser.js\");\n\n\nclass AeroplaneService {\n    constructor(map, statsService, weather) {\n        this.aeroplanes = []\n        this.map = map\n        this.statsService = statsService\n        this.weather = weather\n\n        this.state = undefined\n    }\n\n    transitionTo = (state) => {\n        this.state = state\n        this.state.setMachine(this)\n        this.state.setMap(this.map)\n    }\n\n    tick = () => {\n        this.state.tick()\n    }\n\n    clear = () => {\n        this.aeroplanes = []\n        this.statsService.reset()\n    }\n\n    sendCommand = (rawCommand) => {\n        const command = (0,_Command_CommandParser_CommandParser__WEBPACK_IMPORTED_MODULE_0__.parseCommand)(rawCommand)\n\n        let passedCommands = {\n            \"callSign\": undefined,\n            \"speed\": {passed: false},\n            \"heading\": {passed: false},\n            \"altitude\": {passed: false},\n            \"waypoint\": {passed: false},\n            \"runway\": {passed: false},\n            \"hold\": {passed: false},\n            \"taxiAndHold\": {passed: false},\n            \"clearedForTakeoff\": {passed: false},\n            \"goAround\": {passed: false},\n        }\n\n        this.aeroplanes.forEach(plane => {\n            if (plane.callSign === command.callSign) {\n                passedCommands.callSign = plane.callSign\n\n                if (command.speed) {\n                    passedCommands.speed = {...plane.setSpeed(this.map, command.speed), passed: true}\n                }\n                if (command.heading) {\n                    passedCommands.heading = {...plane.setHeading(this.map, command.heading), passed: true}\n                }\n                if (command.altitude) {\n                    passedCommands.altitude = {...plane.setAltitude(this.map, command.altitude), passed: true}\n                }\n                if (command.waypoint) {\n                    passedCommands.waypoint = {...plane.setWaypoint(this.map, command.waypoint), passed: true}\n                }\n                if (command.runway) {\n                    passedCommands.runway = {...plane.clearForLanding(this.map, command.runway), passed: true}\n                }\n                if (command.hold) {\n                    passedCommands.hold = {...plane.setHold(this.map, command.hold), passed: true}\n                }\n                if (command.taxiAndHold) {\n                    passedCommands.taxiAndHold = {...plane.setTaxiAndHold(this.map, command.taxiAndHold), passed: true}\n                }\n                if (command.clearedForTakeoff) {\n                    passedCommands.clearedForTakeoff = {...plane.clearForTakeoff(this.map), passed: true}\n                }\n                if (command.goAround) {\n                    passedCommands.goAround = {...plane.goAround(this.map), passed: true}\n                }\n            }\n        })\n\n        return passedCommands\n    }\n\n    getCallSignByPosition = (x, y) => {\n        for (let n = 0; n < this.aeroplanes.length; n++) {\n            let plane = this.aeroplanes[n]\n            if (plane.withinPosition(x, y)) {\n                return plane.callSign\n            }\n        }\n        return null\n    }\n\n    deactivateAeroplanes = () => {\n        this.aeroplanes.forEach(plane => {\n            if (\n                plane.isArrivalOutsideBoundaries(\n                    this.map.mapBoundaries,\n                    this.statsService.incrementLost) ||\n                plane.isDepartureOutsideBoundaries(\n                    this.map.mapBoundaries,\n                    this.statsService.incrementCorrectlyDeparted,\n                    this.statsService.incrementIncorrectlyDeparted) ||\n                plane.hasDeparted(\n                    this.map,\n                    this.statsService.incrementCorrectlyDeparted\n                ) ||\n                plane.hasLanded(\n                    this.map,\n                    this.statsService.incrementCorrectlyLanded,\n                    this.statsService.incrementIncorrectlyLanded,\n                ) ||\n                plane.outOfFuel(\n                    this.statsService.incrementOutOfFuelCount\n                )\n            ) {\n                this.aeroplanes = this.aeroplanes.filter(activePlane => activePlane !== plane)\n            }\n        })\n    }\n\n    applyActions = () => {\n        this.aeroplanes.forEach(plane => {\n            plane.applyActions()\n            plane.simulatePath(this.map, this.map.features.restrictedZones)\n        })\n    }\n\n    consumeFuel = () => {\n        this.aeroplanes.forEach(plane => {\n            plane.consumeFuel()\n        })\n    }\n\n    markAeroplanesBreakingProximity = () => {\n        this.aeroplanes.forEach(plane => {\n            plane.markAdheringProximityLimits()\n        })\n\n        // With other aeroplanes\n        this.aeroplanes.forEach(plane => {\n            this.aeroplanes.forEach(comparisonPlane => {\n                if (plane.callSign !== comparisonPlane.callSign) {\n                    if (comparisonPlane.proximalTo(plane)) {\n                        plane.markBreachingProximityLimits()\n                        comparisonPlane.markBreachingProximityLimits()\n                    }\n                }\n            })\n        })\n\n        // With restricted zones\n        this.aeroplanes.forEach(plane => {\n            this.map.features.restrictedZones.forEach(zone => {\n                if (plane.breachingRestrictedZone(this.map, zone)) {\n                    plane.markBreachingProximityLimits()\n                }\n            })\n        })\n\n        // With ground\n        this.aeroplanes.forEach(plane => {\n            if (plane.breachingGroundClearance()) {\n                plane.markBreachingProximityLimits()\n            }\n        })\n    }\n}\n\n//# sourceURL=webpack://atc/./src/Application/AeroplaneService.js?");

/***/ }),

/***/ "./src/Application/GameLoop.js":
/*!*************************************!*\
  !*** ./src/Application/GameLoop.js ***!
  \*************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"GameLoop\": () => (/* binding */ GameLoop)\n/* harmony export */ });\nclass GameLoop {\n    constructor(uiController, interfaceController, aeroplaneService, statsService) {\n        this.uiController = uiController\n        this.interfaceController = interfaceController\n        this.aeroplaneService = aeroplaneService\n        this.statsService = statsService\n        this.interfaceController.setUnPauseCallback(this.start)\n    }\n\n    init = () => {\n        this.aeroplaneService.tick()\n        this.uiController.drawAeroplanes()\n        this.interfaceController.drawStrips()\n    }\n\n    _determineGameSpeed = () => {\n        return {\n            1: 900,\n            2: 500,\n            3: 100\n        }[this.interfaceController.gameSpeed]\n    }\n\n    weatherTick = () => {\n        if (!this.interfaceController.gamePaused) {\n            this.aeroplaneService.weather.tick()\n            setTimeout(this.weatherTick, this._determineGameSpeed())\n        }\n    }\n\n    stateTick = () => {\n        if (!this.interfaceController.gamePaused) {\n            if (this.aeroplaneService.aeroplanes.length < 10) {\n                this.aeroplaneService.tick()\n            }\n            setTimeout(this.stateTick, this._determineGameSpeed())\n        }\n    }\n\n    renderTick = () => {\n        if (!this.interfaceController.gamePaused) {\n            this.uiController.clearAeroplaneLayer()\n\n            this.aeroplaneService.deactivateAeroplanes()\n            this.aeroplaneService.markAeroplanesBreakingProximity()\n            this.aeroplaneService.applyActions()\n            this.aeroplaneService.consumeFuel()\n\n            this.uiController.drawAeroplanes()\n\n            this.interfaceController.clearInactiveStrips()\n            this.interfaceController.drawStrips()\n            this.interfaceController.updateStrips()\n\n            this.interfaceController.updateWindIndicator()\n            this.uiController.drawWeather()\n\n            setTimeout(this.renderTick, this._determineGameSpeed())\n        }\n    }\n\n    statsUpdaterTick = () => {\n        if (!this.interfaceController.gamePaused) {\n            if (this.aeroplaneService.aeroplanes.some(plane => plane.breachingProximity)) {\n                this.statsService.incrementBreachedTimer()\n            }\n            this.interfaceController.setStats(\n                this.statsService.totalLanded(),\n                this.statsService.correctlyLandedPercentage(),\n                this.statsService.totalDeparted(),\n                this.statsService.correctlyDepartedPercentage(),\n                this.statsService.lostCount,\n                this.statsService.proximityTimer,\n                this.statsService.outOfFuelCount\n            )\n            setTimeout(this.statsUpdaterTick, this._determineGameSpeed())\n        }\n    }\n\n    start = () => {\n        this.weatherTick()\n        this.stateTick()\n        this.statsUpdaterTick()\n        this.renderTick()\n    }\n}\n\n//# sourceURL=webpack://atc/./src/Application/GameLoop.js?");

/***/ }),

/***/ "./src/Application/StatsService.js":
/*!*****************************************!*\
  !*** ./src/Application/StatsService.js ***!
  \*****************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"StatsService\": () => (/* binding */ StatsService)\n/* harmony export */ });\n/* harmony import */ var _utils_maths__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../utils/maths */ \"./src/utils/maths.js\");\n\n\nclass StatsService {\n    constructor() {\n        this.spawnedArrivals = 0\n        this.spawnedDepartures = 0\n\n        this.instanceSpawnedArrivals = 0\n        this.instanceSpawnedDepartures = 0\n        this.instanceCorrectlyLandedCount = 0\n        this.instanceCorrectlyDepartedCount = 0\n        this.instanceIncorrectlyLandedCount = 0\n        this.instanceIncorrectlyDepartedCount = 0\n        this.instanceLostCount = 0\n        this.instanceOutOfFuelCount = 0\n\n        this.correctlyLandedCount = 0\n        this.incorrectlyLandedCount = 0\n        this.correctlyDepartedCount = 0\n        this.incorrectlyDepartedCount = 0\n        this.lostCount = 0\n        this.outOfFuelCount = 0\n        this.proximityTimer = 0\n    }\n\n    reset = () => {\n        this.spawnedArrivals = 0\n        this.spawnedDepartures = 0\n        this.instanceSpawnedArrivals = 0\n        this.instanceSpawnedDepartures = 0\n        this.instanceCorrectlyLandedCount = 0\n        this.instanceCorrectlyDepartedCount = 0\n        this.instanceIncorrectlyLandedCount = 0\n        this.instanceIncorrectlyDepartedCount = 0\n        this.instanceLostCount = 0\n        this.instanceOutOfFuelCount = 0\n\n        this.correctlyLandedCount = 0\n        this.incorrectlyLandedCount = 0\n        this.correctlyDepartedCount = 0\n        this.incorrectlyDepartedCount = 0\n        this.lostCount = 0\n        this.outOfFuelCount = 0\n        this.proximityTimer = 0\n    }\n\n    resetInstanceStats = () => {\n        this.instanceSpawnedArrivals = 0\n        this.instanceSpawnedDepartures = 0\n        this.instanceCorrectlyLandedCount = 0\n        this.instanceCorrectlyDepartedCount = 0\n        this.instanceIncorrectlyLandedCount = 0\n        this.instanceIncorrectlyDepartedCount = 0\n        this.instanceLostCount = 0\n        this.instanceOutOfFuelCount = 0\n    }\n\n    seeInstance = () => {\n        console.table({\n            'spawnedArrivals': this.spawnedArrivals,\n            'spawnedDepartures': this.spawnedDepartures,\n            'instanceSpawnedArrivals': this.instanceSpawnedArrivals,\n            'instanceSpawnedDepartures': this.instanceSpawnedDepartures,\n            'instanceCorrectlyLandedCount': this.instanceCorrectlyLandedCount,\n            'instanceCorrectlyDepartedCount': this.instanceCorrectlyDepartedCount,\n            'instanceIncorrectlyLandedCount': this.instanceIncorrectlyLandedCount,\n            'instanceIncorrectlyDepartedCount': this.instanceIncorrectlyDepartedCount,\n            'instanceLostCount': this.instanceLostCount,\n            'instanceOutOfFuelCount': this.instanceOutOfFuelCount,\n        })\n    }\n\n    incrementSpawnedArrivalCount = () => {\n        this.spawnedArrivals += 1\n        this.instanceSpawnedArrivals += 1\n    }\n\n    incrementSpawnedDepartureCount = () => {\n        this.spawnedDepartures += 1\n        this.instanceSpawnedDepartures += 1\n    }\n\n    incrementCorrectlyLanded = () => {\n        this.correctlyLandedCount += 1\n        this.instanceCorrectlyLandedCount += 1\n    }\n\n    incrementIncorrectlyLanded = () => {\n        this.incorrectlyLandedCount += 1\n        this.instanceIncorrectlyLandedCount += 1\n    }\n\n    incrementCorrectlyDeparted = () => {\n        this.correctlyDepartedCount += 1\n        this.instanceCorrectlyDepartedCount += 1\n    }\n\n    incrementIncorrectlyDeparted = () => {\n        this.incorrectlyDepartedCount += 1\n        this.instanceIncorrectlyDepartedCount += 1\n    }\n\n    incrementLost = () => {\n        this.lostCount += 1\n        this.instanceLostCount += 1\n    }\n\n    incrementOutOfFuelCount = () => {\n        this.outOfFuelCount += 1\n        this.instanceOutOfFuelCount += 1\n    }\n\n    incrementBreachedTimer = () => {\n        this.proximityTimer += 1\n    }\n\n    instanceComplete = () => {\n        return this.instanceIncorrectlyLandedCount\n            + this.instanceIncorrectlyDepartedCount\n            + this.instanceCorrectlyLandedCount\n            + this.instanceCorrectlyDepartedCount\n            + this.instanceLostCount\n            + this.instanceOutOfFuelCount\n    }\n\n    totalArrivalsSpawned = () => {\n        return this.spawnedArrivals\n    }\n\n    totalLanded = () => {\n        return this.correctlyLandedCount + this.incorrectlyLandedCount;\n    }\n\n    totalDeparted = () => {\n        return this.correctlyDepartedCount + this.incorrectlyDepartedCount;\n    }\n\n    correctlyLandedPercentage = () => {\n        if (this.totalLanded() === 0) {\n            return 0\n        }\n        return (0,_utils_maths__WEBPACK_IMPORTED_MODULE_0__.round)((this.correctlyLandedCount / this.totalLanded()) * 100, 0)\n    }\n\n    correctlyDepartedPercentage = () => {\n        if (this.totalDeparted() === 0) {\n            return 0\n        }\n        return (0,_utils_maths__WEBPACK_IMPORTED_MODULE_0__.round)((this.correctlyDepartedCount / this.totalDeparted()) * 100, 0)\n    }\n\n    lostPercentage() {\n        if (this.totalArrivalsSpawned() === 0) {\n            return 0\n        }\n        return (0,_utils_maths__WEBPACK_IMPORTED_MODULE_0__.round)((this.lostCount / this.totalArrivalsSpawned()) * 100, 0)\n    }\n}\n\n//# sourceURL=webpack://atc/./src/Application/StatsService.js?");

/***/ }),

/***/ "./src/Application/Weather/States/CloudCell.js":
/*!*****************************************************!*\
  !*** ./src/Application/Weather/States/CloudCell.js ***!
  \*****************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"CloudCell\": () => (/* binding */ CloudCell)\n/* harmony export */ });\n/* harmony import */ var _utils_maths__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../../utils/maths */ \"./src/utils/maths.js\");\n\n\nclass CloudCell {\n    constructor(startX, startY, numEdgePoints, startRadiusMin, startRadiusMax, wind, stable = false) {\n        this.MIN_SIZE = 25\n        this.wind = wind\n        this.stable = stable\n\n        this.x = startX\n        this.y = startY\n\n        this.angleInterval = Math.floor(360 / numEdgePoints)\n\n        this.points = []\n        for (let a = 0; a < 360; a += this.angleInterval) {\n            this.points.push({angle: a, radius: (0,_utils_maths__WEBPACK_IMPORTED_MODULE_0__.getRandomNumberBetween)(startRadiusMin, startRadiusMax)})\n        }\n\n        this.red = 256\n        this.green = 0\n    }\n\n    _update_edges = (rate) => {\n        this.points.forEach(point => {\n            point.radius += (0,_utils_maths__WEBPACK_IMPORTED_MODULE_0__.getRandomNumberBetween)(rate * 0.5, rate * 2)\n            if (point.radius < 2) {\n                point.radius = 0\n            }\n        })\n    }\n\n    tick = () => {\n        const windTravelDirection = this.wind.direction + 180\n\n        const windRadians = (Math.PI / 180) * windTravelDirection\n        const normalisedSpeed = Math.max(1, this.wind.speed / 18)\n\n        this.x = (0,_utils_maths__WEBPACK_IMPORTED_MODULE_0__.round)(this.x + normalisedSpeed * Math.sin(windRadians), 2);\n        this.y = (0,_utils_maths__WEBPACK_IMPORTED_MODULE_0__.round)(this.y - normalisedSpeed * Math.cos(windRadians), 2);\n\n        this.updatePoints()\n    }\n\n    updatePoints = () => {\n        if (!this.stable) {\n            const rate = (0,_utils_maths__WEBPACK_IMPORTED_MODULE_0__.getRandomFloatBetween)(0.1, 0.4);\n            this._update_edges(-rate)\n        }\n    }\n\n    evaporated = (map) => {\n        if (this.stable) {\n            const averageRadius = this.points.map(point => point.radius).reduce((a, b) => a + b, 0) / this.points.length\n            const outsideX = (this.x < map.mapBoundaries.minX - averageRadius || this.x > map.mapBoundaries.maxX + averageRadius)\n            const outsideY = (this.y < map.mapBoundaries.minY - averageRadius || this.y > map.mapBoundaries.maxY + averageRadius)\n            return outsideX || outsideY\n        } else {\n            return this.points.every(point => point.radius < this.MIN_SIZE)\n        }\n\n    }\n}\n\n//# sourceURL=webpack://atc/./src/Application/Weather/States/CloudCell.js?");

/***/ }),

/***/ "./src/Application/Weather/States/DefaultStaticWind.js":
/*!*************************************************************!*\
  !*** ./src/Application/Weather/States/DefaultStaticWind.js ***!
  \*************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"DefaultStaticWind\": () => (/* binding */ DefaultStaticWind)\n/* harmony export */ });\n/* harmony import */ var _Wind__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./Wind */ \"./src/Application/Weather/States/Wind.js\");\n\n\nclass DefaultStaticWind extends _Wind__WEBPACK_IMPORTED_MODULE_0__.Wind {\n    constructor() {\n        super()\n        this.machine = undefined\n    }\n}\n\n//# sourceURL=webpack://atc/./src/Application/Weather/States/DefaultStaticWind.js?");

/***/ }),

/***/ "./src/Application/Weather/States/DynamicWind.js":
/*!*******************************************************!*\
  !*** ./src/Application/Weather/States/DynamicWind.js ***!
  \*******************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"DynamicWind\": () => (/* binding */ DynamicWind)\n/* harmony export */ });\n/* harmony import */ var _utils_maths__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../../utils/maths */ \"./src/utils/maths.js\");\n/* harmony import */ var _Wind__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./Wind */ \"./src/Application/Weather/States/Wind.js\");\n/* harmony import */ var _config_constants__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../../config/constants */ \"./src/config/constants.js\");\n\n\n\n\nclass DynamicWind extends _Wind__WEBPACK_IMPORTED_MODULE_1__.Wind {\n    constructor() {\n        super()\n        this.machine = undefined\n\n        this.tickNum = 0\n        this.directionDifference = undefined\n        this.targetDirection = this.direction\n        this.targetSpeed = this.speed\n    }\n\n    setMachine = (machine) => {\n        this.machine = machine\n    }\n\n    tick = () => {\n        if (this.tickNum % 30 === 0) {\n            this.directionDifference = (0,_utils_maths__WEBPACK_IMPORTED_MODULE_0__.roundToNearest)((0,_utils_maths__WEBPACK_IMPORTED_MODULE_0__.getRandomNumberBetween)(-20, 20), 1);\n            this.targetDirection = (this.direction + this.directionDifference) % 360\n            this.targetSpeed = Math.min(Math.max(this.speed + (0,_utils_maths__WEBPACK_IMPORTED_MODULE_0__.roundToNearest)((0,_utils_maths__WEBPACK_IMPORTED_MODULE_0__.getRandomNumberBetween)(-5, 5), 1), _config_constants__WEBPACK_IMPORTED_MODULE_2__.MIN_WIND_SPEED), _config_constants__WEBPACK_IMPORTED_MODULE_2__.MAX_WIND_SPEED)\n        }\n\n        if (Math.abs(this.targetDirection - this.direction) > 0) {\n            if (this.directionDifference > 0) {\n                this.direction = (this.direction + 1) % 360\n            } else if (this.directionDifference < 0) {\n                this.direction = (this.direction - 1) % 360\n            }\n        }\n\n        if (this.speed < this.targetSpeed) {\n            this.speed += 1\n        } else if (this.speed > this.targetSpeed) {\n            this.speed -= 1\n        }\n\n        this.tickNum += 1\n    }\n}\n\n//# sourceURL=webpack://atc/./src/Application/Weather/States/DynamicWind.js?");

/***/ }),

/***/ "./src/Application/Weather/States/ScatteredCloud.js":
/*!**********************************************************!*\
  !*** ./src/Application/Weather/States/ScatteredCloud.js ***!
  \**********************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"ScatteredCloud\": () => (/* binding */ ScatteredCloud)\n/* harmony export */ });\n/* harmony import */ var _CloudCell__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./CloudCell */ \"./src/Application/Weather/States/CloudCell.js\");\n/* harmony import */ var _utils_maths__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../../utils/maths */ \"./src/utils/maths.js\");\n/* harmony import */ var _utils_selectors__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../../utils/selectors */ \"./src/utils/selectors.js\");\n\n\n\n\nclass ScatteredCloud {\n    constructor() {\n        this.machine = undefined\n        this.clouds = []\n        this.minClouds = 5\n    }\n\n    setMachine = (machine) => {\n        this.machine = machine\n        this.initialise()\n    }\n\n    initialise = () => {\n        this.clouds = [\n            new _CloudCell__WEBPACK_IMPORTED_MODULE_0__.CloudCell((0,_utils_maths__WEBPACK_IMPORTED_MODULE_1__.getRandomNumberBetween)(100, 1100), (0,_utils_maths__WEBPACK_IMPORTED_MODULE_1__.getRandomNumberBetween)(100, 700), 9, 90, 120, this.machine.wind),\n            new _CloudCell__WEBPACK_IMPORTED_MODULE_0__.CloudCell((0,_utils_maths__WEBPACK_IMPORTED_MODULE_1__.getRandomNumberBetween)(100, 1100), (0,_utils_maths__WEBPACK_IMPORTED_MODULE_1__.getRandomNumberBetween)(100, 700), 18, 20, 40, this.machine.wind),\n            new _CloudCell__WEBPACK_IMPORTED_MODULE_0__.CloudCell((0,_utils_maths__WEBPACK_IMPORTED_MODULE_1__.getRandomNumberBetween)(100, 1100), (0,_utils_maths__WEBPACK_IMPORTED_MODULE_1__.getRandomNumberBetween)(100, 700), 18, 10, 20, this.machine.wind),\n            new _CloudCell__WEBPACK_IMPORTED_MODULE_0__.CloudCell((0,_utils_maths__WEBPACK_IMPORTED_MODULE_1__.getRandomNumberBetween)(100, 1100), (0,_utils_maths__WEBPACK_IMPORTED_MODULE_1__.getRandomNumberBetween)(100, 700), 18, 10, 20, this.machine.wind),\n        ]\n    }\n\n    tick = (map) => {\n        if (this.clouds.length < this.minClouds) {\n            const maxX = map.maxX\n            const maxY = map.maxY\n            const startRadiusMin = (0,_utils_maths__WEBPACK_IMPORTED_MODULE_1__.getRandomNumberBetween)(80, 120)\n            const startRadiusMax = (0,_utils_maths__WEBPACK_IMPORTED_MODULE_1__.getRandomNumberBetween)(120, 160)\n\n            const newCloudSpawnLocations = {\n                0: {\n                    x: (0,_utils_maths__WEBPACK_IMPORTED_MODULE_1__.getRandomNumberBetween)(100, maxX - 100),\n                    y: 0 - 50\n                },\n                1: {\n                    x: maxX + 50,\n                    y: (0,_utils_maths__WEBPACK_IMPORTED_MODULE_1__.getRandomNumberBetween)(100, maxY - 100)\n                },\n                2: {\n                    x: (0,_utils_maths__WEBPACK_IMPORTED_MODULE_1__.getRandomNumberBetween)(100, maxX - 100),\n                    y: maxY + 50\n                },\n                3: {\n                    x: 0 - 50,\n                    y: (0,_utils_maths__WEBPACK_IMPORTED_MODULE_1__.getRandomNumberBetween)(100, maxY - 100)\n                },\n            }\n            const windDirection = this.machine.wind.directionIndex();\n            const newX = newCloudSpawnLocations[windDirection].x\n            const newY = newCloudSpawnLocations[windDirection].y\n            const stable = (0,_utils_selectors__WEBPACK_IMPORTED_MODULE_2__.randomChoice)([true, false, false, false, false]);\n            this.clouds.push(\n                new _CloudCell__WEBPACK_IMPORTED_MODULE_0__.CloudCell(\n                    newX,\n                    newY,\n                    18,\n                    startRadiusMin,\n                    startRadiusMax,\n                    this.machine.wind,\n                    stable\n                )\n            )\n        }\n    }\n}\n\n//# sourceURL=webpack://atc/./src/Application/Weather/States/ScatteredCloud.js?");

/***/ }),

/***/ "./src/Application/Weather/States/Wind.js":
/*!************************************************!*\
  !*** ./src/Application/Weather/States/Wind.js ***!
  \************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"Wind\": () => (/* binding */ Wind)\n/* harmony export */ });\n/* harmony import */ var _utils_maths__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../../utils/maths */ \"./src/utils/maths.js\");\n/* harmony import */ var _config_constants__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../../config/constants */ \"./src/config/constants.js\");\n\n\n\nclass Wind {\n    constructor() {\n        this.direction = (0,_utils_maths__WEBPACK_IMPORTED_MODULE_0__.roundToNearest)((0,_utils_maths__WEBPACK_IMPORTED_MODULE_0__.getRandomNumberBetween)(1, 360), 1)\n        this.speed = (0,_utils_maths__WEBPACK_IMPORTED_MODULE_0__.getRandomNumberBetween)(_config_constants__WEBPACK_IMPORTED_MODULE_1__.MIN_WIND_SPEED, _config_constants__WEBPACK_IMPORTED_MODULE_1__.MAX_WIND_SPEED)\n    }\n\n    setMachine = (machine) => {\n        this.machine = machine\n    }\n\n    tick = () => {\n\n    }\n\n    easterly = () => {\n        return this.direction >= 0 && this.direction <= 180\n    }\n\n    directionIndex = () => {\n        if (this.direction > 45 && this.direction <= 135) {\n            return 1 // East\n        } else if (this.direction > 135 && this.direction <= 225) {\n            return 2 // South\n        } else if (this.direction >= 225 && this.direction <= 315) {\n            return 3 // West\n        }\n        return 0 // North\n    }\n}\n\n//# sourceURL=webpack://atc/./src/Application/Weather/States/Wind.js?");

/***/ }),

/***/ "./src/Application/Weather/WeatherService.js":
/*!***************************************************!*\
  !*** ./src/Application/Weather/WeatherService.js ***!
  \***************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"Weather\": () => (/* binding */ Weather)\n/* harmony export */ });\n/* harmony import */ var _States_DefaultStaticWind__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./States/DefaultStaticWind */ \"./src/Application/Weather/States/DefaultStaticWind.js\");\n/* harmony import */ var _States_ScatteredCloud__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./States/ScatteredCloud */ \"./src/Application/Weather/States/ScatteredCloud.js\");\n/* harmony import */ var _States_DynamicWind__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./States/DynamicWind */ \"./src/Application/Weather/States/DynamicWind.js\");\n\n\n\n\nclass Weather {\n    constructor(map) {\n        this.map = map\n        this.wind = undefined\n        this.clouds = undefined\n        this.transitionWindTo(new _States_DefaultStaticWind__WEBPACK_IMPORTED_MODULE_0__.DefaultStaticWind())\n        this.transitionCloudsTo(new _States_ScatteredCloud__WEBPACK_IMPORTED_MODULE_1__.ScatteredCloud())\n    }\n\n    transitionWindTo = (windState) => {\n        this.wind = windState\n        this.wind.setMachine(this)\n    }\n\n    transitionCloudsTo = (cloudState) => {\n        this.clouds = cloudState\n        this.clouds.setMachine(this)\n    }\n\n    tick = () => {\n        this.wind.tick()\n        this.clouds.clouds = this.clouds.clouds.filter(cloud => !cloud.evaporated(this.map))\n        this.clouds.tick(this.map)\n        this.clouds.clouds.forEach(cloud => cloud.tick())\n    }\n\n    static = () => {\n        this.transitionWindTo(new _States_DefaultStaticWind__WEBPACK_IMPORTED_MODULE_0__.DefaultStaticWind())\n        this.transitionCloudsTo(new _States_ScatteredCloud__WEBPACK_IMPORTED_MODULE_1__.ScatteredCloud())\n    }\n\n    dynamic = () => {\n        this.transitionWindTo(new _States_DynamicWind__WEBPACK_IMPORTED_MODULE_2__.DynamicWind())\n        this.transitionCloudsTo(new _States_ScatteredCloud__WEBPACK_IMPORTED_MODULE_1__.ScatteredCloud())\n    }\n}\n\n//# sourceURL=webpack://atc/./src/Application/Weather/WeatherService.js?");

/***/ }),

/***/ "./src/Command/CommandParser/CommandParser.js":
/*!****************************************************!*\
  !*** ./src/Command/CommandParser/CommandParser.js ***!
  \****************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"commandMessage\": () => (/* binding */ commandMessage),\n/* harmony export */   \"parseAltitude\": () => (/* binding */ parseAltitude),\n/* harmony export */   \"parseClearedForTakeoff\": () => (/* binding */ parseClearedForTakeoff),\n/* harmony export */   \"parseCommand\": () => (/* binding */ parseCommand),\n/* harmony export */   \"parseGoAround\": () => (/* binding */ parseGoAround),\n/* harmony export */   \"parseHeading\": () => (/* binding */ parseHeading),\n/* harmony export */   \"parseHold\": () => (/* binding */ parseHold),\n/* harmony export */   \"parseRunway\": () => (/* binding */ parseRunway),\n/* harmony export */   \"parseSpeed\": () => (/* binding */ parseSpeed),\n/* harmony export */   \"parseTaxiAndHold\": () => (/* binding */ parseTaxiAndHold),\n/* harmony export */   \"parseWaypoint\": () => (/* binding */ parseWaypoint)\n/* harmony export */ });\nconst parseCommand = (rawCommand) => {\n    const command = rawCommand.toUpperCase()\n    let callSign = command.substring(0, 5).toUpperCase();\n    let actionCommands = command.substring(5);\n    let parsedHeading = parseHeading(actionCommands);\n    let parsedWaypoint = parseWaypoint(actionCommands);\n    let parsedRunway = parseRunway(actionCommands)\n\n    const heading = parsedWaypoint || parsedRunway ? null : parsedHeading\n    const waypoint = parsedHeading || parsedRunway ? null : parsedWaypoint\n\n    return {\n        callSign: callSign,\n        speed: parseSpeed(actionCommands),\n        heading: heading,\n        altitude: parseAltitude(actionCommands),\n        waypoint: waypoint,\n        runway: parsedRunway,\n        hold: parseHold(actionCommands),\n        taxiAndHold: parseTaxiAndHold(actionCommands),\n        clearedForTakeoff: parseClearedForTakeoff(command),\n        goAround: parseGoAround(command)\n    }\n}\n\nconst commandMessage = (passedCommands) => {\n    if (passedCommands.callSign === undefined) {\n        return {success: false, callSign: null, messages: [{state: 'error', text:'Unrecognised aircraft'}]}\n    }\n\n    return {\n        success: true,\n        callSign: passedCommands.callSign,\n        messages: [\n            buildMessage(passedCommands.speed, 'Speed:'),\n            buildMessage(passedCommands.heading, 'Heading:'),\n            buildMessage(passedCommands.altitude, 'Altitude:', 'ft'),\n            buildMessage(passedCommands.waypoint, 'Direct to'),\n            buildMessage(passedCommands.runway, 'Cleared to land runway'),\n            buildGoAroundMessage(passedCommands.goAround, 'Go around'),\n            buildMessage(passedCommands.taxiAndHold, 'Taxi and hold'),\n            buildTakeoffMessage(passedCommands.clearedForTakeoff, 'Cleared for takeoff'),\n            buildHoldingPatternMessage(passedCommands.hold, 'Hold to the')\n        ].filter(message => !!message)\n    }\n}\n\nconst buildMessage = (aspect, prefix, suffix) => {\n    if (aspect.passed) {\n        if (aspect.isValid) {\n            return {\n                state: 'valid',\n                text: `${prefix} ${aspect.targetValue}${suffix ? suffix : ''}`\n            }\n        }\n        return handleInvalidAspect(aspect)\n    }\n    return null\n}\n\nconst buildTakeoffMessage = (aspect, prefix) => {\n    if (aspect.passed) {\n        if (aspect.isValid) {\n            return {\n                state: 'valid',\n                text: `${prefix}`\n            }\n        }\n        return handleInvalidAspect(aspect)\n    }\n    return null\n}\n\nconst buildGoAroundMessage = (aspect, prefix) => {\n    if (aspect.passed) {\n        if (aspect.isValid) {\n            return {\n                state: 'valid',\n                text: `${prefix}`\n            }\n        }\n        return handleInvalidAspect(aspect)\n    }\n    return null\n}\n\nconst buildHoldingPatternMessage = (aspect, prefix) => {\n    if (aspect.passed) {\n        if (aspect.isValid) {\n            return {\n                state: 'valid',\n                text: `${prefix} ${aspect.targetValue}`\n            }\n        }\n        return handleInvalidAspect(aspect)\n    }\n    return null\n}\n\nconst handleInvalidAspect = (aspect) => {\n    if (aspect.errors.length > 0) {\n        return {\n            state: 'error',\n            text: aspect.errors[0]\n        }\n    }\n    if (aspect.warnings.length > 0) {\n        return {\n            state: 'warning',\n            text: aspect.warnings[0]\n        }\n    }\n}\n\nconst parseSpeed = (command) => {\n    const match = command.match(/S(\\d{3})/g);\n    if (match && match.length === 1) {\n        return parseInt(match[0].substring(1))\n    }\n    return null\n}\n\nconst parseHeading = (command) => {\n    const myRegexp = /T([LR])?(\\d{3})/g\n    const match = myRegexp.exec(command);\n    if (match) {\n        let heading = parseInt(match[2]);\n\n        let direction = 0\n        if (match[1] === 'L') {\n            direction = -1\n        } else if (match[1] === 'R') {\n            direction = 1\n        }\n\n        return {\n            heading: heading === 0 ? 360 : heading,\n            direction: direction\n        }\n    }\n    return null\n}\n\nconst parseAltitude = (command) => {\n    const match = command.match(/[A](\\d{1,3})/g);\n    if (match && match.length === 1) {\n        return parseInt(match[0].substring(1)) * 100\n    }\n    return null\n}\n\nconst parseWaypoint = (command) => {\n    const match = command.match(/[-]([a-zA-Z]{3})/g);\n    if (match && match.length === 1) {\n        return match[0].substring(1)\n    }\n    return null\n}\n\nconst parseRunway = (command) => {\n    const matches = command.match(/(.)*?ILS(\\d{1,2}[LRC])(.)*?/);\n    if (matches) {\n        return matches[2]\n    }\n    return null\n}\n\nconst parseHold = (command) => {\n    const match = command.match(/H[LR]/g);\n    if (match && match.length === 1) {\n        return match[0][1] === \"R\" ? 1 : -1\n    }\n    return null\n}\n\nconst parseTaxiAndHold = (command) => {\n    const matches = command.match(/(.)*?TH(\\d{1,2}[LRC])(.)*?/);\n    if (matches) {\n        return matches[2]\n    }\n    return null\n}\n\nconst parseClearedForTakeoff = (command) => {\n    const matches = command.match(/(.)*?(CTO)(.)*?/);\n    if (matches) {\n        return matches[2] === \"CTO\"\n    }\n    return null\n}\n\nconst parseGoAround = (command) => {\n    const matches = command.match(/(.)*?(GA)(.)*?/);\n    if (matches) {\n        return matches[2] === \"GA\"\n    }\n    return null\n}\n\n\n\n//# sourceURL=webpack://atc/./src/Command/CommandParser/CommandParser.js?");

/***/ }),

/***/ "./src/Domain/Action/Action.js":
/*!*************************************!*\
  !*** ./src/Domain/Action/Action.js ***!
  \*************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"Action\": () => (/* binding */ Action),\n/* harmony export */   \"turning_change_rate\": () => (/* binding */ turning_change_rate),\n/* harmony export */   \"wouldEndUpTurningBeyondTarget\": () => (/* binding */ wouldEndUpTurningBeyondTarget)\n/* harmony export */ });\nclass Action {\n    constructor(map, aeroplane, targetValue) {\n        this.map = map\n        this.aeroplane = aeroplane\n        this.targetValue = targetValue\n    }\n\n    type = () => {\n        return this.constructor.name\n    }\n\n    isActionable = () => {\n\n    };\n\n    isFutureActionable = () => {\n\n    }\n\n    validate = () => {\n\n    };\n\n    apply = () => {\n\n    };\n\n    copy = (aeroplane) => {\n\n    }\n}\n\nconst turning_change_rate = (aeroplane) => {\n    if (aeroplane.weight === 1) {\n        return -0.006666 * aeroplane.speed + 5\n    } else if (aeroplane.weight === 2) {\n        return -0.006666 * aeroplane.speed + 4\n    } else {\n        return -0.006666 * aeroplane.speed + 3\n    }\n}\n\nconst wouldEndUpTurningBeyondTarget = (aeroplane, targetHeading, currentHeading) => {\n    return Math.abs(targetHeading - currentHeading) < turning_change_rate(aeroplane);\n}\n\n\n//# sourceURL=webpack://atc/./src/Domain/Action/Action.js?");

/***/ }),

/***/ "./src/Domain/Action/Altitude.js":
/*!***************************************!*\
  !*** ./src/Domain/Action/Altitude.js ***!
  \***************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"Altitude\": () => (/* binding */ Altitude)\n/* harmony export */ });\n/* harmony import */ var _Aeroplane_aeroplaneStates__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../Aeroplane/aeroplaneStates */ \"./src/Domain/Aeroplane/aeroplaneStates.js\");\n/* harmony import */ var _config_constants__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../config/constants */ \"./src/config/constants.js\");\n/* harmony import */ var _Action__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./Action */ \"./src/Domain/Action/Action.js\");\n\n\n\n\nclass Altitude extends _Action__WEBPACK_IMPORTED_MODULE_2__.Action {\n    constructor(map, aeroplane, targetAltitude) {\n        super(null, aeroplane, targetAltitude);\n    }\n\n    isActionable = () => {\n        return this.aeroplane.altitude !== this.targetValue && this.aeroplane.is([_Aeroplane_aeroplaneStates__WEBPACK_IMPORTED_MODULE_0__.FLYING, _Aeroplane_aeroplaneStates__WEBPACK_IMPORTED_MODULE_0__.HOLDING_PATTERN, _Aeroplane_aeroplaneStates__WEBPACK_IMPORTED_MODULE_0__.GOING_AROUND])\n    }\n\n    isFutureActionable = () => {\n        return this.aeroplane.is([_Aeroplane_aeroplaneStates__WEBPACK_IMPORTED_MODULE_0__.READY_TO_TAXI, _Aeroplane_aeroplaneStates__WEBPACK_IMPORTED_MODULE_0__.TAXIING, _Aeroplane_aeroplaneStates__WEBPACK_IMPORTED_MODULE_0__.HOLDING_SHORT, _Aeroplane_aeroplaneStates__WEBPACK_IMPORTED_MODULE_0__.TAKING_OFF])\n    }\n\n    validate = () => {\n        let warnings = []\n        let errors = []\n        if (!this.targetValue) {\n            errors.push('Value must be provided')\n        }\n        if (this.aeroplane.is([_Aeroplane_aeroplaneStates__WEBPACK_IMPORTED_MODULE_0__.LANDING])) {\n            warnings.push('Cannot set altitude when landing')\n        }\n        if (this.targetValue === this.aeroplane.altitude) {\n            warnings.push('Altitude already set')\n        }\n        if (this.targetValue < _config_constants__WEBPACK_IMPORTED_MODULE_1__.MIN_ALTITUDE) {\n            errors.push(`Cannot set altitude lower than ${_config_constants__WEBPACK_IMPORTED_MODULE_1__.MIN_ALTITUDE}`)\n        }\n        if (this.targetValue > _config_constants__WEBPACK_IMPORTED_MODULE_1__.MAX_ALTITUDE) {\n            errors.push(`Cannot set altitude higher than ${_config_constants__WEBPACK_IMPORTED_MODULE_1__.MAX_ALTITUDE}`)\n        }\n        if (this.targetValue % 20 !== 0) {\n            errors.push(`Altitude must be in increments of 20`)\n        }\n        return {\n            isValid: errors.length === 0 && warnings.length === 0,\n            warnings: warnings,\n            errors: errors,\n            targetValue: this.targetValue\n        }\n    }\n\n    apply = () => {\n        if (this.aeroplane.altitude < this.targetValue) {\n            const newValue = this.aeroplane.altitude + this._altitude_change_rate()\n            this.aeroplane.altitude = Math.min(newValue, this.targetValue)\n        }\n        if (this.aeroplane.altitude > this.targetValue) {\n            const newValue = this.aeroplane.altitude - this._altitude_change_rate()\n            this.aeroplane.altitude = Math.max(newValue, this.targetValue)\n        }\n    }\n\n    copy = (aeroplane) => {\n        return new Altitude(this.map, aeroplane, this.targetValue)\n    }\n\n    _altitude_change_rate = () => {\n        if (this.aeroplane.altitude > 10000) {\n            return 80\n        } else if (this.aeroplane.altitude > 5000) {\n            return 50\n        }\n        return 20\n    }\n}\n\n//# sourceURL=webpack://atc/./src/Domain/Action/Altitude.js?");

/***/ }),

/***/ "./src/Domain/Action/GoAround.js":
/*!***************************************!*\
  !*** ./src/Domain/Action/GoAround.js ***!
  \***************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"GoAround\": () => (/* binding */ GoAround)\n/* harmony export */ });\n/* harmony import */ var _Waypoint__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./Waypoint */ \"./src/Domain/Action/Waypoint.js\");\n/* harmony import */ var _Speed__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./Speed */ \"./src/Domain/Action/Speed.js\");\n/* harmony import */ var _Altitude__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./Altitude */ \"./src/Domain/Action/Altitude.js\");\n/* harmony import */ var _config_constants__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../config/constants */ \"./src/config/constants.js\");\n/* harmony import */ var _Aeroplane_aeroplaneStates__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../Aeroplane/aeroplaneStates */ \"./src/Domain/Aeroplane/aeroplaneStates.js\");\n/* harmony import */ var _Action__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./Action */ \"./src/Domain/Action/Action.js\");\n\n\n\n\n\n\n\nclass GoAround extends _Action__WEBPACK_IMPORTED_MODULE_5__.Action {\n    constructor(map, aeroplane, aimingForRunway) {\n        super(map, aeroplane, null);\n        this.map = map\n        this.aimingForRunway = aimingForRunway\n        this.runway = undefined\n        this.targetWaypoint = undefined\n        this.targetSpeed = undefined\n        this.targetAltitude = undefined\n        this.targetsAdded = false\n        this.executed = false\n\n    }\n\n    isActionable = () => {\n        return !this.targetsAdded || !this.executed\n    }\n\n    isFutureActionable = () => {\n        return false\n    }\n\n    validate = () => {\n        let warnings = []\n        let errors = []\n\n        if (!this.aeroplane.isLanding()) {\n            errors.push('Cannot go around, aircraft not landing')\n        } else {\n            if (this.map.runwayExists(this.aimingForRunway)) {\n                this.runway = this.map.getRunwayInfo(this.aimingForRunway)\n                this.targetWaypoint = this.runway.goAround.targetWaypoint\n                this.targetSpeed = this.runway.goAround.targetSpeed\n                this.targetAltitude = this.runway.goAround.targetAltitude\n            } else {\n                errors.push('Cannot go around')\n            }\n        }\n\n        return {\n            isValid: errors.length === 0 && warnings.length === 0,\n            warnings: warnings,\n            errors: errors,\n            targetValue: this.targetValue\n        }\n\n\n    }\n\n    apply = () => {\n        if (this.aeroplane.altitude >= _config_constants__WEBPACK_IMPORTED_MODULE_3__.MIN_GROUND_CLEARANCE) {\n            this.aeroplane.state = _Aeroplane_aeroplaneStates__WEBPACK_IMPORTED_MODULE_4__.FLYING\n            this.executed = true\n        }\n        if (!this.targetsAdded) {\n            this.aeroplane.addAction(new _Waypoint__WEBPACK_IMPORTED_MODULE_0__.Waypoint(this.map, this.aeroplane, this.targetWaypoint))\n            this.aeroplane.addAction(new _Speed__WEBPACK_IMPORTED_MODULE_1__.Speed(this.map, this.aeroplane, this.targetSpeed))\n            this.aeroplane.addAction(new _Altitude__WEBPACK_IMPORTED_MODULE_2__.Altitude(this.map, this.aeroplane, this.targetAltitude))\n            this.targetsAdded = true\n        }\n    }\n\n    copy = (aeroplane) => {\n\n    }\n}\n\n//# sourceURL=webpack://atc/./src/Domain/Action/GoAround.js?");

/***/ }),

/***/ "./src/Domain/Action/Heading.js":
/*!**************************************!*\
  !*** ./src/Domain/Action/Heading.js ***!
  \**************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"Heading\": () => (/* binding */ Heading)\n/* harmony export */ });\n/* harmony import */ var _Aeroplane_aeroplaneStates__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../Aeroplane/aeroplaneStates */ \"./src/Domain/Aeroplane/aeroplaneStates.js\");\n/* harmony import */ var _utils_geometry__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../utils/geometry */ \"./src/utils/geometry.js\");\n/* harmony import */ var _Action__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./Action */ \"./src/Domain/Action/Action.js\");\n\n\n\n\nclass Heading extends _Action__WEBPACK_IMPORTED_MODULE_2__.Action {\n    constructor(map, aeroplane, targetHeading, direction= 0) {\n        super(null, aeroplane, targetHeading);\n        this.direction = direction\n    }\n\n    isActionable = () => {\n        return this.aeroplane.heading !== this.targetValue && this.aeroplane.is([_Aeroplane_aeroplaneStates__WEBPACK_IMPORTED_MODULE_0__.FLYING, _Aeroplane_aeroplaneStates__WEBPACK_IMPORTED_MODULE_0__.HOLDING_PATTERN, _Aeroplane_aeroplaneStates__WEBPACK_IMPORTED_MODULE_0__.GOING_AROUND])\n    };\n\n    isFutureActionable = () => {\n        return this.aeroplane.is([_Aeroplane_aeroplaneStates__WEBPACK_IMPORTED_MODULE_0__.READY_TO_TAXI, _Aeroplane_aeroplaneStates__WEBPACK_IMPORTED_MODULE_0__.TAXIING, _Aeroplane_aeroplaneStates__WEBPACK_IMPORTED_MODULE_0__.HOLDING_SHORT, _Aeroplane_aeroplaneStates__WEBPACK_IMPORTED_MODULE_0__.TAKING_OFF])\n    }\n\n    validate = () => {\n        let warnings = []\n        let errors = []\n        if (!this.targetValue) {\n            errors.push('Value must be provided')\n        }\n        if (this.aeroplane.is([_Aeroplane_aeroplaneStates__WEBPACK_IMPORTED_MODULE_0__.LANDING])) {\n            warnings.push('Cannot set heading when landing')\n        }\n        if (this.targetValue === this.aeroplane.heading) {\n            warnings.push('Heading already set')\n        }\n        if (this.targetValue < 0) {\n            errors.push('Heading must be between 000 and 360')\n        }\n        if (this.targetValue > 360) {\n            errors.push('Heading must be between 000 and 360')\n        }\n        return {\n            isValid: errors.length === 0 && warnings.length === 0,\n            warnings: warnings,\n            errors: errors,\n            targetValue: this.targetValue\n        }\n    };\n\n    apply = () => {\n        const currentHeading = this.aeroplane.heading\n        const targetHeading = this.targetValue\n\n        if ((0,_Action__WEBPACK_IMPORTED_MODULE_2__.wouldEndUpTurningBeyondTarget)(this.aeroplane, targetHeading, currentHeading)) {\n            this.aeroplane.heading = targetHeading\n            return\n        }\n\n        if (this.direction === -1) {\n            let newHeading = this.aeroplane.heading - (0,_Action__WEBPACK_IMPORTED_MODULE_2__.turning_change_rate)(this.aeroplane);\n            this.aeroplane.heading = newHeading < 0 ? newHeading + 360 : newHeading;\n        } else if (this.direction === 1) {\n            this.aeroplane.heading = (this.aeroplane.heading + (0,_Action__WEBPACK_IMPORTED_MODULE_2__.turning_change_rate)(this.aeroplane)) % 360;\n        } else {\n            if ((0,_utils_geometry__WEBPACK_IMPORTED_MODULE_1__.shortestAngle)(currentHeading, targetHeading) > 0) {\n                // turn right\n                this.aeroplane.heading = (this.aeroplane.heading + (0,_Action__WEBPACK_IMPORTED_MODULE_2__.turning_change_rate)(this.aeroplane)) % 360;\n            } else {\n                // turn left\n                let newHeading = this.aeroplane.heading - (0,_Action__WEBPACK_IMPORTED_MODULE_2__.turning_change_rate)(this.aeroplane);\n                this.aeroplane.heading = newHeading < 0 ? newHeading + 360 : newHeading;\n            }\n        }\n    };\n\n    copy = (aeroplane) => {\n        return new Heading(this.map, aeroplane, this.targetValue, this.direction)\n    }\n}\n\n//# sourceURL=webpack://atc/./src/Domain/Action/Heading.js?");

/***/ }),

/***/ "./src/Domain/Action/HoldingPattern.js":
/*!*********************************************!*\
  !*** ./src/Domain/Action/HoldingPattern.js ***!
  \*********************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"HoldingPattern\": () => (/* binding */ HoldingPattern)\n/* harmony export */ });\n/* harmony import */ var _Aeroplane_aeroplaneStates__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../Aeroplane/aeroplaneStates */ \"./src/Domain/Aeroplane/aeroplaneStates.js\");\n/* harmony import */ var _Action__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./Action */ \"./src/Domain/Action/Action.js\");\n\n\n\nclass HoldingPattern extends _Action__WEBPACK_IMPORTED_MODULE_1__.Action {\n    constructor(map, aeroplane, direction, turningChangeRate, tick= 0) {\n        const directionName = direction === 1 ? 'right' : 'left'\n        super(map, aeroplane, directionName);\n        this.map = map\n        this.direction = direction\n        this.turningChangeRate = turningChangeRate ? turningChangeRate : (0,_Action__WEBPACK_IMPORTED_MODULE_1__.turning_change_rate)(this.aeroplane)\n        this.tick = tick\n    }\n\n    isActionable = () => {\n        return this.aeroplane.is([_Aeroplane_aeroplaneStates__WEBPACK_IMPORTED_MODULE_0__.FLYING, _Aeroplane_aeroplaneStates__WEBPACK_IMPORTED_MODULE_0__.HOLDING_PATTERN])\n    }\n\n    isFutureActionable = () => {\n        return false\n    }\n\n    validate = () => {\n        let warnings = []\n        let errors = []\n\n        if (this.aeroplane.isNot([_Aeroplane_aeroplaneStates__WEBPACK_IMPORTED_MODULE_0__.FLYING, _Aeroplane_aeroplaneStates__WEBPACK_IMPORTED_MODULE_0__.HOLDING_PATTERN])) {\n            errors.push('Cannot enter holding pattern right now')\n        }\n\n        return {\n            isValid: errors.length === 0 && warnings.length === 0,\n            warnings: warnings,\n            errors: errors,\n            targetValue: this.targetValue\n        }\n    }\n\n    apply = () => {\n        if (this.tick !== 0) {  // start holding pattern off current heading\n            const turningCircle = 180 / this.turningChangeRate;\n            const zone = Math.floor(this.tick / turningCircle) % 4\n            let newHeading = this.aeroplane.heading\n\n            if ([0, 2].includes(zone)) {\n                let newHeading = this.aeroplane.heading + (this.direction * this.turningChangeRate)\n                if (newHeading < 360) {\n                    newHeading += 360\n                }\n                if (newHeading > 360) {\n                    newHeading -= 360\n                }\n                this.aeroplane.heading = newHeading\n            } else {\n                this.aeroplane.heading = newHeading\n                this.tick += 2\n            }\n        }\n        this.tick += 1\n    };\n\n    copy = (aeroplane) => {\n        return new HoldingPattern(this.map, aeroplane, this.direction, this.turningChangeRate, this.tick)\n    }\n}\n\n//# sourceURL=webpack://atc/./src/Domain/Action/HoldingPattern.js?");

/***/ }),

/***/ "./src/Domain/Action/Landing.js":
/*!**************************************!*\
  !*** ./src/Domain/Action/Landing.js ***!
  \**************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"Landing\": () => (/* binding */ Landing)\n/* harmony export */ });\n/* harmony import */ var _Aeroplane_aeroplaneStates__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../Aeroplane/aeroplaneStates */ \"./src/Domain/Aeroplane/aeroplaneStates.js\");\n/* harmony import */ var _config_constants__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../config/constants */ \"./src/config/constants.js\");\n/* harmony import */ var _Speed__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./Speed */ \"./src/Domain/Action/Speed.js\");\n/* harmony import */ var _Waypoint__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./Waypoint */ \"./src/Domain/Action/Waypoint.js\");\n/* harmony import */ var _utils_geometry__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../../utils/geometry */ \"./src/utils/geometry.js\");\n/* harmony import */ var _Action__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./Action */ \"./src/Domain/Action/Action.js\");\n\n\n\n\n\n\n\nclass Landing extends _Action__WEBPACK_IMPORTED_MODULE_5__.Action {\n    constructor(map, aeroplane, targetRunway) {\n        super(map, aeroplane, targetRunway);\n        this.map = map\n        this.targetRunway = targetRunway\n        this.speedSet = false\n        this.waypointSet = false\n        this.executed = false\n    }\n\n    isActionable = () => {\n        return !this.executed && this.aeroplane.is([_Aeroplane_aeroplaneStates__WEBPACK_IMPORTED_MODULE_0__.LANDING])\n    }\n\n    isFutureActionable = () => {\n        return false\n    }\n\n    validate = () => {\n        let warnings = []\n        let errors = []\n        let isValid = false\n\n        if (this.aeroplane.isNot([_Aeroplane_aeroplaneStates__WEBPACK_IMPORTED_MODULE_0__.FLYING, _Aeroplane_aeroplaneStates__WEBPACK_IMPORTED_MODULE_0__.HOLDING_PATTERN])) {\n            errors.push('Cannot clear for landing right now')\n        }\n\n        if (this.map.runwayExists(this.targetRunway)) {\n            const runway = this.map.getRunwayInfo(this.targetRunway)\n\n            const withinMaximumX = Math.abs(this.aeroplane.x - runway.ILS.innerMarker.x) <= _config_constants__WEBPACK_IMPORTED_MODULE_1__.ILS_MAX_X;\n            const withinMinimumX = Math.abs(this.aeroplane.x - runway.ILS.innerMarker.x) >= _config_constants__WEBPACK_IMPORTED_MODULE_1__.ILS_MIN_X;\n            const withinY = Math.abs(this.aeroplane.y - runway.ILS.innerMarker.y) <= 20;\n            const withinMaximumAltitude = Math.abs(this.aeroplane.altitude - runway.altitude) <= 3000;\n            const withinMaximumSpeed = this.aeroplane.speed <= _config_constants__WEBPACK_IMPORTED_MODULE_1__.MIN_APPROACH_SPEED;\n            const withinRunwayHeading = Math.abs(runway.heading - this.aeroplane.heading) <= 10;\n\n            isValid = this._onCorrectSideOfRunway(this.aeroplane, runway)\n                && withinMaximumX\n                && withinMinimumX\n                && withinY\n                && withinMaximumAltitude\n                && withinMaximumSpeed\n                && withinRunwayHeading\n        } else {\n            errors.push(`Runway ${this.targetRunway} does not exist`)\n        }\n\n        if (!isValid) {\n            errors.push('Not correctly configured for landing')\n        }\n\n        return {\n            isValid: errors.length === 0 && warnings.length === 0,\n            warnings: warnings,\n            errors: errors,\n            targetValue: this.targetValue\n        }\n    }\n\n    apply = () => {\n        if (!this.speedSet && !this.waypointSet) {\n            this.aeroplane.actions.push(new _Speed__WEBPACK_IMPORTED_MODULE_2__.Speed(this.map, this.aeroplane, this.determineLandingSpeed()))\n            this.aeroplane.actions.push(new _Waypoint__WEBPACK_IMPORTED_MODULE_3__.Waypoint(this.map, this.aeroplane, this.targetRunway))\n            this.speedSet = true\n            this.waypointSet = true\n        }\n        const runway = this.map.getRunwayInfo(this.targetRunway)\n        const distanceToRunway = (0,_utils_geometry__WEBPACK_IMPORTED_MODULE_4__.distance)(this.aeroplane.x, this.aeroplane.y, runway.landingZone.x, runway.landingZone.y)\n\n        if (distanceToRunway < 5 && this.aeroplane.altitude < _config_constants__WEBPACK_IMPORTED_MODULE_1__.LANDED_ALTITUDE) {\n            this.executed = true\n        }\n\n        const rateOfDescent = (this.aeroplane.altitude - runway.altitude) / distanceToRunway * 2\n        this.aeroplane.altitude -= rateOfDescent\n    };\n\n    determineLandingSpeed = () => {\n        const landingSpeedMap = {\n            3: 155,\n            2: 145,\n            1: 135,\n        }\n        return landingSpeedMap[this.aeroplane.weight]\n    }\n\n    copy = (aeroplane) => {\n\n    }\n\n    _onCorrectSideOfRunway = (aeroplane, runway) => {\n        if (runway.heading <= 180 && runway.heading >= 0) {\n            return aeroplane.x < runway.landingZone.x\n        } else {\n            return aeroplane.x > runway.landingZone.x\n        }\n    }\n}\n\n//# sourceURL=webpack://atc/./src/Domain/Action/Landing.js?");

/***/ }),

/***/ "./src/Domain/Action/Speed.js":
/*!************************************!*\
  !*** ./src/Domain/Action/Speed.js ***!
  \************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"Speed\": () => (/* binding */ Speed)\n/* harmony export */ });\n/* harmony import */ var _Aeroplane_aeroplaneStates__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../Aeroplane/aeroplaneStates */ \"./src/Domain/Aeroplane/aeroplaneStates.js\");\n/* harmony import */ var _config_constants__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../config/constants */ \"./src/config/constants.js\");\n/* harmony import */ var _Action__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./Action */ \"./src/Domain/Action/Action.js\");\n\n\n\n\nclass Speed extends _Action__WEBPACK_IMPORTED_MODULE_2__.Action {\n    weightMultiplierMap = {\n        3: 1,\n        2: 2,\n        1: 3\n    };\n\n    constructor(map, aeroplane, targetSpeed) {\n        super(null, aeroplane, targetSpeed);\n    }\n\n    isActionable = () => {\n        return this.aeroplane.speed !== this.targetValue && this.aeroplane.is([_Aeroplane_aeroplaneStates__WEBPACK_IMPORTED_MODULE_0__.FLYING,_Aeroplane_aeroplaneStates__WEBPACK_IMPORTED_MODULE_0__.HOLDING_PATTERN, _Aeroplane_aeroplaneStates__WEBPACK_IMPORTED_MODULE_0__.LANDING, _Aeroplane_aeroplaneStates__WEBPACK_IMPORTED_MODULE_0__.GOING_AROUND])\n    }\n\n    isFutureActionable = () => {\n        return this.aeroplane.is([_Aeroplane_aeroplaneStates__WEBPACK_IMPORTED_MODULE_0__.READY_TO_TAXI, _Aeroplane_aeroplaneStates__WEBPACK_IMPORTED_MODULE_0__.TAXIING, _Aeroplane_aeroplaneStates__WEBPACK_IMPORTED_MODULE_0__.HOLDING_SHORT, _Aeroplane_aeroplaneStates__WEBPACK_IMPORTED_MODULE_0__.TAKING_OFF])\n    }\n\n    validate = () => {\n        let warnings = []\n        let errors = []\n        if (!this.targetValue) {\n            errors.push('Value must be provided')\n        }\n        if (this.aeroplane.is([_Aeroplane_aeroplaneStates__WEBPACK_IMPORTED_MODULE_0__.LANDING])) {\n            warnings.push('Cannot set speed when landing')\n        }\n        if (this.targetValue === this.aeroplane.speed) {\n            warnings.push('Speed already set')\n        }\n        if (this.targetValue < _config_constants__WEBPACK_IMPORTED_MODULE_1__.MIN_SPEED) {\n            errors.push(`Cannot set speed lower than ${_config_constants__WEBPACK_IMPORTED_MODULE_1__.MIN_SPEED}`)\n        }\n        return {\n            isValid: errors.length === 0 && warnings.length === 0,\n            warnings: warnings,\n            errors: errors,\n            targetValue: this.targetValue\n        }\n    }\n\n    apply = () => {\n        if (this.aeroplane.speed < this.targetValue) {\n            const newValue = this.aeroplane.speed + this.weightMultiplierMap[this.aeroplane.weight]\n            this.aeroplane.speed = Math.min(newValue, this.targetValue)\n        }\n        if (this.aeroplane.speed > this.targetValue) {\n            const newValue = this.aeroplane.speed - this.weightMultiplierMap[this.aeroplane.weight]\n            this.aeroplane.speed = Math.max(newValue, this.targetValue)\n        }\n    }\n\n    copy = (aeroplane) => {\n        return new Speed(this.map, aeroplane, this.targetValue)\n    }\n}\n\n//# sourceURL=webpack://atc/./src/Domain/Action/Speed.js?");

/***/ }),

/***/ "./src/Domain/Action/Takeoff.js":
/*!**************************************!*\
  !*** ./src/Domain/Action/Takeoff.js ***!
  \**************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"Takeoff\": () => (/* binding */ Takeoff)\n/* harmony export */ });\n/* harmony import */ var _Aeroplane_aeroplaneStates__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../Aeroplane/aeroplaneStates */ \"./src/Domain/Aeroplane/aeroplaneStates.js\");\n/* harmony import */ var _config_constants__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../config/constants */ \"./src/config/constants.js\");\n/* harmony import */ var _Action__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./Action */ \"./src/Domain/Action/Action.js\");\n\n\n\n\nclass Takeoff extends _Action__WEBPACK_IMPORTED_MODULE_2__.Action {\n    constructor(map, aeroplane, runway = null) {\n        super(map, aeroplane, null);\n        this.map = map\n        this.targetX = undefined\n        this.targetY = undefined\n        this.runway = null\n        this.speedSet = false\n        this.executed = false\n\n        if (!runway && this.map.runwayExists(this.aeroplane.positionDescription)) {\n            this.runway = this.map.getRunwayInfo(this.aeroplane.positionDescription)\n            this.targetX = this.runway.takeoffPoint.x\n            this.targetY = this.runway.takeoffPoint.y\n        } else {\n            this.runway = runway\n        }\n    }\n\n    isActionable = () => {\n        return !this.executed && this.aeroplane.is([_Aeroplane_aeroplaneStates__WEBPACK_IMPORTED_MODULE_0__.HOLDING_SHORT, _Aeroplane_aeroplaneStates__WEBPACK_IMPORTED_MODULE_0__.TAKING_OFF, _Aeroplane_aeroplaneStates__WEBPACK_IMPORTED_MODULE_0__.FLYING])\n    }\n\n    isFutureActionable = () => {\n        return this.aeroplane.is([_Aeroplane_aeroplaneStates__WEBPACK_IMPORTED_MODULE_0__.READY_TO_TAXI, _Aeroplane_aeroplaneStates__WEBPACK_IMPORTED_MODULE_0__.TAXIING])\n    }\n\n    validate = () => {\n        let warnings = []\n        let errors = []\n\n        if (this.aeroplane.is([_Aeroplane_aeroplaneStates__WEBPACK_IMPORTED_MODULE_0__.FLYING, _Aeroplane_aeroplaneStates__WEBPACK_IMPORTED_MODULE_0__.TAKING_OFF, _Aeroplane_aeroplaneStates__WEBPACK_IMPORTED_MODULE_0__.GOING_AROUND])) {\n            errors.push('Cannot accept takeoff command right now')\n        }\n\n        return {\n            isValid: errors.length === 0 && warnings.length === 0,\n            warnings: warnings,\n            errors: errors,\n            targetValue: this.targetValue\n        }\n    }\n\n    apply = () => {\n        if (this.map.runwayExists(this.aeroplane.positionDescription)) {\n            this.runway = this.map.getRunwayInfo(this.aeroplane.positionDescription)\n            this.targetX = this.runway.takeoffPoint.x\n            this.targetY = this.runway.takeoffPoint.y\n        }\n\n        this.aeroplane.hasTakeoffClearance = false\n        this.aeroplane.state = _Aeroplane_aeroplaneStates__WEBPACK_IMPORTED_MODULE_0__.TAKING_OFF\n\n        this.aeroplane.heading = this.runway.heading\n\n        // Speed\n        if (this.aeroplane.speed < _config_constants__WEBPACK_IMPORTED_MODULE_1__.TAKEOFF_SPEED) {\n            this.aeroplane.speed += 20\n        }\n\n        // Altitude\n        if (this.aeroplane.speed < _config_constants__WEBPACK_IMPORTED_MODULE_1__.TAKEOFF_SPEED) {\n            this.aeroplane.altitude = 0\n        }\n\n        if (this.aeroplane.speed >= _config_constants__WEBPACK_IMPORTED_MODULE_1__.TAKEOFF_SPEED && this.aeroplane.altitude < _config_constants__WEBPACK_IMPORTED_MODULE_1__.MIN_GROUND_CLEARANCE) {\n            this.aeroplane.altitude += 60\n        }\n\n        // End takeoff sequence\n        if (this.aeroplane.speed >= _config_constants__WEBPACK_IMPORTED_MODULE_1__.TAKEOFF_SPEED && this.aeroplane.altitude >= _config_constants__WEBPACK_IMPORTED_MODULE_1__.MIN_GROUND_CLEARANCE) {\n            this.aeroplane.state = _Aeroplane_aeroplaneStates__WEBPACK_IMPORTED_MODULE_0__.FLYING\n            this.executed = true\n        }\n    };\n\n    copy = (aeroplane) => {\n        return new Takeoff(this.map, aeroplane, this.runway)\n    }\n}\n\n//# sourceURL=webpack://atc/./src/Domain/Action/Takeoff.js?");

/***/ }),

/***/ "./src/Domain/Action/TaxiToRunway.js":
/*!*******************************************!*\
  !*** ./src/Domain/Action/TaxiToRunway.js ***!
  \*******************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"TaxiToRunway\": () => (/* binding */ TaxiToRunway)\n/* harmony export */ });\n/* harmony import */ var _utils_maths__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../utils/maths */ \"./src/utils/maths.js\");\n/* harmony import */ var _Aeroplane_aeroplaneStates__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../Aeroplane/aeroplaneStates */ \"./src/Domain/Aeroplane/aeroplaneStates.js\");\n/* harmony import */ var _Action__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./Action */ \"./src/Domain/Action/Action.js\");\n\n\n\n\nclass TaxiToRunway extends _Action__WEBPACK_IMPORTED_MODULE_2__.Action {\n    constructor(map, aeroplane, targetRunway) {\n        super(map, aeroplane, targetRunway);\n        this.map = map\n        this.targetRunway = targetRunway\n        this.runway = undefined\n        this.targetX = undefined\n        this.targetY = undefined\n        this.taxiTime = (0,_utils_maths__WEBPACK_IMPORTED_MODULE_0__.getRandomNumberBetween)(5, 20)\n\n        if (this.map.runwayExists(this.targetRunway)) {\n            this.runway = this.map.getRunwayInfo(this.targetRunway)\n            this.targetX = this.runway.landingZone.x\n            this.targetY = this.runway.landingZone.y\n        }\n    }\n\n    isActionable = () => {\n        return this.taxiTime > 0\n    }\n\n    isFutureActionable = () => {\n        return this.aeroplane.is([_Aeroplane_aeroplaneStates__WEBPACK_IMPORTED_MODULE_1__.READY_TO_TAXI, _Aeroplane_aeroplaneStates__WEBPACK_IMPORTED_MODULE_1__.TAXIING])\n    }\n\n    validate = () => {\n        let warnings = []\n        let errors = []\n\n        if (!this.map.runwayExists(this.targetRunway)) {\n            errors.push(`Runway ${this.targetRunway} does not exist`)\n        }\n        if (this.aeroplane.isNot([_Aeroplane_aeroplaneStates__WEBPACK_IMPORTED_MODULE_1__.READY_TO_TAXI, _Aeroplane_aeroplaneStates__WEBPACK_IMPORTED_MODULE_1__.TAXIING, _Aeroplane_aeroplaneStates__WEBPACK_IMPORTED_MODULE_1__.HOLDING_SHORT])) {\n            errors.push('Cannot accept taxi command right now')\n        }\n\n        return {\n            isValid: errors.length === 0 && warnings.length === 0,\n            warnings: warnings,\n            errors: errors,\n            targetValue: this.targetValue\n        }\n    }\n\n    apply = () => {\n        this.taxiTime -= 1\n        if (this.taxiTime <= 0) {\n            this.aeroplane.x = this.targetX\n            this.aeroplane.y = this.targetY\n            this.aeroplane.state = _Aeroplane_aeroplaneStates__WEBPACK_IMPORTED_MODULE_1__.HOLDING_SHORT\n            this.aeroplane.heading = this.runway.heading\n            this.aeroplane.positionDescription = this.targetRunway\n        }\n    };\n\n    copy = (aeroplane) => {\n        return new TaxiToRunway(this.map, aeroplane, this.targetRunway)\n    }\n}\n\n//# sourceURL=webpack://atc/./src/Domain/Action/TaxiToRunway.js?");

/***/ }),

/***/ "./src/Domain/Action/Waypoint.js":
/*!***************************************!*\
  !*** ./src/Domain/Action/Waypoint.js ***!
  \***************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"Waypoint\": () => (/* binding */ Waypoint)\n/* harmony export */ });\n/* harmony import */ var _Aeroplane_aeroplaneStates__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../Aeroplane/aeroplaneStates */ \"./src/Domain/Aeroplane/aeroplaneStates.js\");\n/* harmony import */ var _utils_geometry__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../utils/geometry */ \"./src/utils/geometry.js\");\n/* harmony import */ var _utils_maths__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../utils/maths */ \"./src/utils/maths.js\");\n/* harmony import */ var _Action__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./Action */ \"./src/Domain/Action/Action.js\");\n\n\n\n\n\nclass Waypoint extends _Action__WEBPACK_IMPORTED_MODULE_3__.Action {\n    constructor(map, aeroplane, targetWaypoint) {\n        super(map, aeroplane, targetWaypoint);\n        this.map.features.waypoints.forEach(vor => {\n            if (vor.id === targetWaypoint) {\n                this.targetX = vor.x\n                this.targetY = vor.y\n            }\n        })\n\n        this.targetWaypoint = targetWaypoint\n        this.targetValue = this._determine_heading()\n    }\n\n    isActionable = () => {\n        if (this.aeroplane.isNot([_Aeroplane_aeroplaneStates__WEBPACK_IMPORTED_MODULE_0__.FLYING, _Aeroplane_aeroplaneStates__WEBPACK_IMPORTED_MODULE_0__.LANDING, _Aeroplane_aeroplaneStates__WEBPACK_IMPORTED_MODULE_0__.GOING_AROUND])) {\n            return false\n        }\n        const distanceToWaypoint = (0,_utils_geometry__WEBPACK_IMPORTED_MODULE_1__.distance)(this.aeroplane.x, this.aeroplane.y, this.targetX, this.targetY)\n        const arrived = distanceToWaypoint <= 8\n        return !arrived\n    }\n\n    isFutureActionable = () => {\n        return this.aeroplane.is([_Aeroplane_aeroplaneStates__WEBPACK_IMPORTED_MODULE_0__.READY_TO_TAXI, _Aeroplane_aeroplaneStates__WEBPACK_IMPORTED_MODULE_0__.TAXIING, _Aeroplane_aeroplaneStates__WEBPACK_IMPORTED_MODULE_0__.HOLDING_SHORT, _Aeroplane_aeroplaneStates__WEBPACK_IMPORTED_MODULE_0__.TAKING_OFF])\n    }\n\n    validate = () => {\n        let warnings = []\n        let errors = []\n        let validWaypoint = false\n\n        if (this.aeroplane.is([_Aeroplane_aeroplaneStates__WEBPACK_IMPORTED_MODULE_0__.LANDING])) {\n            warnings.push('Cannot set waypoint when landing')\n        }\n\n        for (let x = 0; x < this.map.features.waypoints.length; x++) {\n            if (this.map.features.waypoints[x].id === this.targetWaypoint) {\n                validWaypoint = true\n            }\n        }\n\n        if (!validWaypoint) {\n            errors.push(`${this.targetWaypoint} does not exist`)\n        }\n\n        return {\n            isValid: errors.length === 0 && warnings.length === 0,\n            warnings: warnings,\n            errors: errors,\n            targetValue: this.targetWaypoint\n        }\n    }\n\n    apply = () => {\n        const currentHeading = this.aeroplane.heading\n        const targetHeading = this._determine_heading()\n\n        if ((0,_Action__WEBPACK_IMPORTED_MODULE_3__.wouldEndUpTurningBeyondTarget)(this.aeroplane, targetHeading, currentHeading)) {\n            this.aeroplane.heading = targetHeading\n            return\n        }\n\n        if ((0,_utils_geometry__WEBPACK_IMPORTED_MODULE_1__.shortestAngle)(currentHeading, targetHeading) > 0) {\n            // turn right\n            this.aeroplane.heading = (this.aeroplane.heading + (0,_Action__WEBPACK_IMPORTED_MODULE_3__.turning_change_rate)(this.aeroplane)) % 360;\n        } else {\n            // turn left\n            let newHeading = this.aeroplane.heading - (0,_Action__WEBPACK_IMPORTED_MODULE_3__.turning_change_rate)(this.aeroplane);\n            this.aeroplane.heading = newHeading < 0 ? newHeading + 360 : newHeading;\n        }\n    };\n\n    copy = (aeroplane) => {\n        return new Waypoint(this.map, aeroplane, this.targetWaypoint)\n    }\n\n    _determine_heading = () => {\n        const opposite = Math.abs(this.targetY - this.aeroplane.y)\n        const adjacent = Math.abs(this.targetX - this.aeroplane.x)\n        const theta = Math.round((0,_utils_maths__WEBPACK_IMPORTED_MODULE_2__.toDegrees)(Math.atan((opposite / adjacent))))\n\n        let heading;\n        if (this.targetX > this.aeroplane.x) {\n            if (this.targetY < this.aeroplane.y) {\n                heading = 90 - theta\n            } else {\n                heading = 90 + theta\n            }\n        } else {\n            if (this.targetY < this.aeroplane.y) {\n                heading = 270 + theta\n            } else {\n                heading = 270 - theta\n            }\n        }\n        return heading\n    }\n}\n\n//# sourceURL=webpack://atc/./src/Domain/Action/Waypoint.js?");

/***/ }),

/***/ "./src/Domain/Aeroplane/Aeroplane.js":
/*!*******************************************!*\
  !*** ./src/Domain/Aeroplane/Aeroplane.js ***!
  \*******************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"Aeroplane\": () => (/* binding */ Aeroplane)\n/* harmony export */ });\n/* harmony import */ var _utils_maths__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../utils/maths */ \"./src/utils/maths.js\");\n/* harmony import */ var _utils_geometry__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../utils/geometry */ \"./src/utils/geometry.js\");\n/* harmony import */ var _config_constants__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../config/constants */ \"./src/config/constants.js\");\n/* harmony import */ var _aeroplaneStates__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./aeroplaneStates */ \"./src/Domain/Aeroplane/aeroplaneStates.js\");\n/* harmony import */ var _Action_Speed__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../Action/Speed */ \"./src/Domain/Action/Speed.js\");\n/* harmony import */ var _Action_Heading__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../Action/Heading */ \"./src/Domain/Action/Heading.js\");\n/* harmony import */ var _Action_Altitude__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../Action/Altitude */ \"./src/Domain/Action/Altitude.js\");\n/* harmony import */ var _Action_Waypoint__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ../Action/Waypoint */ \"./src/Domain/Action/Waypoint.js\");\n/* harmony import */ var _Action_Landing__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ../Action/Landing */ \"./src/Domain/Action/Landing.js\");\n/* harmony import */ var _Action_HoldingPattern__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ../Action/HoldingPattern */ \"./src/Domain/Action/HoldingPattern.js\");\n/* harmony import */ var _Action_TaxiToRunway__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ../Action/TaxiToRunway */ \"./src/Domain/Action/TaxiToRunway.js\");\n/* harmony import */ var _Action_Takeoff__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! ../Action/Takeoff */ \"./src/Domain/Action/Takeoff.js\");\n/* harmony import */ var _Action_GoAround__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! ../Action/GoAround */ \"./src/Domain/Action/GoAround.js\");\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nclass Aeroplane {\n    constructor(callSign, shortClass, x, y, speed, hdg, altitude, weight, type = _config_constants__WEBPACK_IMPORTED_MODULE_2__.ARRIVAL, state = _aeroplaneStates__WEBPACK_IMPORTED_MODULE_3__.FLYING, finalTarget = null, fuelLevel) {\n        this.callSign = callSign;\n        this.shortClass = shortClass;\n        this.weight = weight;\n        this.x = x;\n        this.y = y;\n        this.speed = speed;\n        this.heading = hdg;\n        this.altitude = altitude;\n        this.type = type;\n        this.state = state;\n        this.finalTarget = finalTarget;\n        this.fuelLevel = fuelLevel ? fuelLevel : this._determineStartingFuel();\n        this.actions = []\n        this.breachingProximity = false\n        this.lastPositions = []\n        this.nextPositions = []\n\n        this.targetLocation = undefined\n        this.targetAltitude = undefined\n        this.targetSpeed = undefined\n        this.aimingForRunway = undefined\n        this.positionDescription = ''\n        this.hasTakeoffClearance = false\n    }\n\n    hasFinalTarget = () => {\n        return !!this.finalTarget\n    }\n\n    isArrival = () => {\n        return this.type === _config_constants__WEBPACK_IMPORTED_MODULE_2__.ARRIVAL\n    }\n\n    isDeparture = () => {\n        return this.type === _config_constants__WEBPACK_IMPORTED_MODULE_2__.DEPARTURE\n    }\n\n    addAction = (action) => {\n        // Only Go Around overwrites Landing\n        if (this.state === _aeroplaneStates__WEBPACK_IMPORTED_MODULE_3__.LANDING) {\n            if (action.type() === 'GoAround') {\n                this.actions = [action]\n                this._update_targets()\n                return\n            } else {\n                return\n            }\n        }\n\n        // Landing overwrites everything\n        if (action.type() === \"Landing\") {\n            this.actions = [action]\n            this._update_targets()\n            return\n        }\n\n        for (let x = 0; x < this.actions.length; x++) {\n            // replace same action\n            if (this.actions[x].type() === action.type()) {\n                this.actions[x] = action\n                this._update_targets()\n                return\n            }\n            // Directional actions override one another\n            const directionalActions = [\"HoldingPattern\", \"Heading\", \"Waypoint\"]\n            if (directionalActions.includes(action.type()) && directionalActions.includes(this.actions[x].type())) {\n                this.actions[x] = action\n                this._update_targets()\n                return\n            }\n        }\n        this.actions.push(action)\n        this._update_targets()\n    }\n\n    setSpeed = (map, speed) => {\n        const newSpeed = new _Action_Speed__WEBPACK_IMPORTED_MODULE_4__.Speed(map, this, speed);\n        const {isValid, warnings, errors, targetValue} = newSpeed.validate();\n        if (isValid) {\n            this.addAction(newSpeed)\n        }\n        return {isValid, warnings, errors, targetValue}\n    }\n\n    setHeading = (map, heading) => {\n        const newHeading = new _Action_Heading__WEBPACK_IMPORTED_MODULE_5__.Heading(map, this, heading.heading, heading.direction);\n        const {isValid, warnings, errors, targetValue} = newHeading.validate();\n        if (isValid) {\n            this.addAction(newHeading)\n            this.state = this.state === _aeroplaneStates__WEBPACK_IMPORTED_MODULE_3__.HOLDING_PATTERN ? _aeroplaneStates__WEBPACK_IMPORTED_MODULE_3__.FLYING : this.state\n        }\n        return {isValid, warnings, errors, targetValue}\n    }\n\n    setAltitude = (map, altitude) => {\n        const newAltitude = new _Action_Altitude__WEBPACK_IMPORTED_MODULE_6__.Altitude(map, this, altitude);\n        const {isValid, warnings, errors, targetValue} = newAltitude.validate();\n        if (isValid) {\n            this.addAction(newAltitude)\n        }\n        return {isValid, warnings, errors, targetValue}\n    }\n\n    setWaypoint = (map, waypoint) => {\n        const newWaypoint = new _Action_Waypoint__WEBPACK_IMPORTED_MODULE_7__.Waypoint(map, this, waypoint);\n        const {isValid, warnings, errors, targetValue} = newWaypoint.validate();\n\n        if (isValid) {\n            this.addAction(newWaypoint)\n            this.state = this.state === _aeroplaneStates__WEBPACK_IMPORTED_MODULE_3__.HOLDING_PATTERN ? _aeroplaneStates__WEBPACK_IMPORTED_MODULE_3__.FLYING : this.state\n        }\n        return {isValid, warnings, errors, targetValue}\n    }\n\n    clearForLanding = (map, runway) => {\n        const newLanding = new _Action_Landing__WEBPACK_IMPORTED_MODULE_8__.Landing(map, this, runway);\n        const {isValid, warnings, errors, targetValue} = newLanding.validate();\n        if (isValid) {\n            this.addAction(newLanding)\n            this.aimingForRunway = runway\n            this.state = _aeroplaneStates__WEBPACK_IMPORTED_MODULE_3__.LANDING\n        }\n        return {isValid, warnings, errors, targetValue}\n    }\n\n    setHold = (map, direction) => {\n        const newHoldingPattern = new _Action_HoldingPattern__WEBPACK_IMPORTED_MODULE_9__.HoldingPattern(map, this, direction);\n        const {isValid, warnings, errors, targetValue} = newHoldingPattern.validate();\n        if (isValid) {\n            this.addAction(newHoldingPattern)\n            this.state = _aeroplaneStates__WEBPACK_IMPORTED_MODULE_3__.HOLDING_PATTERN\n        }\n        return {isValid, warnings, errors, targetValue}\n    }\n\n    setTaxiAndHold = (map, runway) => {\n        const newTaxiAndHold = new _Action_TaxiToRunway__WEBPACK_IMPORTED_MODULE_10__.TaxiToRunway(map, this, runway);\n        const {isValid, warnings, errors, targetValue} = newTaxiAndHold.validate();\n        if (isValid) {\n            this.addAction(newTaxiAndHold)\n            this.state = _aeroplaneStates__WEBPACK_IMPORTED_MODULE_3__.TAXIING\n        }\n        return {isValid, warnings, errors, targetValue}\n    }\n\n    clearForTakeoff = (map) => {\n        const takeoff = new _Action_Takeoff__WEBPACK_IMPORTED_MODULE_11__.Takeoff(map, this);\n        const {isValid, warnings, errors, targetValue} = takeoff.validate();\n        if (isValid) {\n            this.addAction(takeoff)\n            this.hasTakeoffClearance = true\n            // Takeoff state is set when applying the action as it is future actionable\n        }\n        return {isValid, warnings, errors, targetValue}\n    }\n\n    goAround = (map) => {\n        const goAround = new _Action_GoAround__WEBPACK_IMPORTED_MODULE_12__.GoAround(map, this, this.aimingForRunway);\n        const {isValid, warnings, errors, targetValue} = goAround.validate();\n        if (isValid) {\n            this.addAction(goAround)\n            this.state = _aeroplaneStates__WEBPACK_IMPORTED_MODULE_3__.GOING_AROUND\n        }\n        return {isValid, warnings, errors, targetValue}\n    }\n\n    is = (states) => {\n        return states.includes(this.state)\n    }\n\n    isNot = (states) => {\n        return !this.is(states)\n    }\n\n    applyActions = () => {\n        this.actions.forEach(action => {\n            if (action.isActionable()) {\n                action.apply()\n            }\n        })\n\n        if ([_aeroplaneStates__WEBPACK_IMPORTED_MODULE_3__.READY_TO_TAXI, _aeroplaneStates__WEBPACK_IMPORTED_MODULE_3__.TAXIING, _aeroplaneStates__WEBPACK_IMPORTED_MODULE_3__.HOLDING_SHORT].includes(this.state)) {\n            this._clean_actions()\n            return\n        }\n\n        const headingRadians = (0,_utils_maths__WEBPACK_IMPORTED_MODULE_0__.toRadians)(this.heading)\n        const distancePerTick = 1 + (Math.max(30, this.speed - 100) / 20 * 0.5)\n        this.x = (0,_utils_maths__WEBPACK_IMPORTED_MODULE_0__.round)(this.x + distancePerTick * Math.sin(headingRadians), 2);\n        this.y = (0,_utils_maths__WEBPACK_IMPORTED_MODULE_0__.round)(this.y - distancePerTick * Math.cos(headingRadians), 2);\n\n        this.updateLastPositions(this.x, this.y)\n\n        this._clean_actions()\n    }\n\n    simulatePath = (map, restrictedZones) => {\n        if (this.isLanding()) {\n            this.nextPositions = []\n        } else {\n            const simulatedAeroplane = new Aeroplane(null, null, this.x, this.y, this.speed, this.heading, this.altitude, this.weight, this.type, this.state, this.finalTarget, this.fuelLevel)\n            this.actions.forEach(action => {\n                const copiedAction = action.copy(simulatedAeroplane);\n                if (copiedAction) {\n                    simulatedAeroplane.actions.push(copiedAction)\n                }\n            })\n\n            if (this.positionDescription) {\n                simulatedAeroplane.positionDescription = this.positionDescription\n            }\n\n            const projectedLocations = []\n            let altitudeMarker = false\n            let speedMarker = false\n            for (let x = 0; x < _config_constants__WEBPACK_IMPORTED_MODULE_2__.NUM_PROJECTED_TICKS; x++) {\n                simulatedAeroplane.applyActions()\n\n                let baseLocation = {\n                    x: simulatedAeroplane.x,\n                    y: simulatedAeroplane.y,\n                    headingAtPoint: simulatedAeroplane.heading,\n                    markers: []\n                }\n\n                // Altitude achieved\n                if (!altitudeMarker && this.isChangingAltitude() && simulatedAeroplane.altitude === this.targetAltitude) {\n                    baseLocation.markers.push({type: 'altitude'})\n                    altitudeMarker = true\n                }\n\n                // Speed achieved\n                if (!speedMarker && simulatedAeroplane.is([_aeroplaneStates__WEBPACK_IMPORTED_MODULE_3__.HOLDING_PATTERN, _aeroplaneStates__WEBPACK_IMPORTED_MODULE_3__.FLYING]) && this.isChangingSpeed() && simulatedAeroplane.speed === this.targetSpeed) {\n                    baseLocation.markers.push({type: 'speed'})\n                    speedMarker = true\n                }\n\n                // Breaching ground clearance\n                if (simulatedAeroplane.is([_aeroplaneStates__WEBPACK_IMPORTED_MODULE_3__.HOLDING_PATTERN, _aeroplaneStates__WEBPACK_IMPORTED_MODULE_3__.FLYING]) && simulatedAeroplane.altitude < _config_constants__WEBPACK_IMPORTED_MODULE_2__.MIN_GROUND_CLEARANCE) {\n                    baseLocation.markers.push({type: 'breaching'})\n                }\n\n                // Breaching restricted zone\n                restrictedZones.forEach(zone => {\n                    if (simulatedAeroplane.is([_aeroplaneStates__WEBPACK_IMPORTED_MODULE_3__.HOLDING_PATTERN, _aeroplaneStates__WEBPACK_IMPORTED_MODULE_3__.FLYING]) && simulatedAeroplane.breachingRestrictedZone(map, zone)) {\n                        baseLocation.markers.push({type: 'breaching'})\n                    }\n                })\n\n                projectedLocations.push(baseLocation)\n            }\n            this.nextPositions = projectedLocations\n        }\n    }\n\n    updateLastPositions = (x, y) => {\n        if (this.lastPositions.length === _config_constants__WEBPACK_IMPORTED_MODULE_2__.SPEED_TAIL_LENGTH + 1) {\n            this.lastPositions = this.lastPositions.slice(1)\n        }\n\n        this.lastPositions.push({x: x, y: y})\n    }\n\n    withinPosition = (x, y) => {\n        const minX = x - 30\n        const maxX = x + 30\n        const minY = y - 30\n        const maxY = y + 30\n        const withinX = (minX < this.x && this.x < maxX)\n        const withinY = (minY < this.y && this.y < maxY)\n        return withinX && withinY\n    }\n\n    isArrivalOutsideBoundaries = (mapBoundaries, outsideCallback) => {\n        if (this.isArrival()) {\n            const outside = this._isOutsideBoundaries(mapBoundaries)\n            if (outside && outsideCallback) {\n                outsideCallback()\n            }\n            return outside\n        }\n        return false\n    }\n\n    isDepartureOutsideBoundaries = (mapBoundaries, correctlyDepartedCallback, incorrectlyDepartedCallback) => {\n        if (this.isDeparture()) {\n            const outside = this._isOutsideBoundaries(mapBoundaries)\n            if (outside && this.hasFinalTarget() && incorrectlyDepartedCallback) {\n                incorrectlyDepartedCallback()\n                return true\n            }\n            if (outside && !this.hasFinalTarget() && correctlyDepartedCallback) {\n                correctlyDepartedCallback()\n                return true\n            }\n            return false\n        }\n        return false\n    }\n\n    hasDeparted = (map, correctlyDepartedCallback) => {\n        if (this.isDeparture()) {\n            const correctAltitude = this.altitude >= _config_constants__WEBPACK_IMPORTED_MODULE_2__.DEPARTURE_ALTITUDE\n            const waypoint = map.getWaypointInfo(this.finalTarget)\n            const correctLocation = waypoint && (0,_utils_geometry__WEBPACK_IMPORTED_MODULE_1__.distance)(this.x, this.y, waypoint.x, waypoint.y) <= 5\n            if (correctlyDepartedCallback && correctAltitude && correctLocation) {\n                correctlyDepartedCallback()\n                return true\n            }\n        }\n        return false\n    }\n\n    isLanding = () => {\n        return this.state === _aeroplaneStates__WEBPACK_IMPORTED_MODULE_3__.LANDING\n    }\n\n    isInHoldingPattern = () => {\n        return this.state === _aeroplaneStates__WEBPACK_IMPORTED_MODULE_3__.HOLDING_PATTERN\n    }\n\n    isChangingAltitude = () => {\n        return this.actions.length > 0 && this.actions.map(action => action.type()).includes(\"Altitude\")\n    }\n\n    isChangingSpeed = () => {\n        return this.actions.length > 0 && this.actions.map(action => action.type()).includes(\"Speed\")\n    }\n\n    hasLanded = (map, correctRunwayCallback, incorrectRunwayCallback) => {\n        if (this.isArrival()) {\n            const landed = this.altitude < _config_constants__WEBPACK_IMPORTED_MODULE_2__.LANDED_ALTITUDE;\n            const correctRunway = this.finalTarget ? this.landedCorrectRunway(map) : true\n            if (landed) {\n                if (correctRunway && correctRunwayCallback) {\n                    correctRunwayCallback()\n                }\n                if (!correctRunway && incorrectRunwayCallback) {\n                    incorrectRunwayCallback()\n                }\n            }\n            return landed\n        }\n        return false\n    }\n\n    landedCorrectRunway = (map) => {\n        const runway = map.getRunwayInfo(this.finalTarget)\n        return (0,_utils_geometry__WEBPACK_IMPORTED_MODULE_1__.distance)(this.x, this.y, runway.landingZone.x, runway.landingZone.y) <= 5\n    }\n\n    proximalTo = (otherAeroplane) => {\n        if (this.is([_aeroplaneStates__WEBPACK_IMPORTED_MODULE_3__.TAKING_OFF,_aeroplaneStates__WEBPACK_IMPORTED_MODULE_3__.FLYING, _aeroplaneStates__WEBPACK_IMPORTED_MODULE_3__.HOLDING_PATTERN, _aeroplaneStates__WEBPACK_IMPORTED_MODULE_3__.GOING_AROUND]) && otherAeroplane.is([_aeroplaneStates__WEBPACK_IMPORTED_MODULE_3__.TAKING_OFF, _aeroplaneStates__WEBPACK_IMPORTED_MODULE_3__.FLYING, _aeroplaneStates__WEBPACK_IMPORTED_MODULE_3__.HOLDING_PATTERN, _aeroplaneStates__WEBPACK_IMPORTED_MODULE_3__.GOING_AROUND])) {\n            const horizontalDistance = (0,_utils_geometry__WEBPACK_IMPORTED_MODULE_1__.distance)(this.x, this.y, otherAeroplane.x, otherAeroplane.y);\n            const verticalDistance = Math.abs(this.altitude - otherAeroplane.altitude)\n            return horizontalDistance < _config_constants__WEBPACK_IMPORTED_MODULE_2__.HORIZONTAL_SEPARATION_MINIMUM\n                && verticalDistance < _config_constants__WEBPACK_IMPORTED_MODULE_2__.VERTICAL_SEPARATION_MINIMUM\n        }\n    }\n\n    breachingRestrictedZone = (map, zone) => {\n        const planeInverseY = map.maxY - this.y\n        return (0,_utils_geometry__WEBPACK_IMPORTED_MODULE_1__.isInsidePolygon)(zone.boundaries, this.x, planeInverseY) && this.breachingZoneAltitudeRestriction(zone)\n    }\n\n    breachingZoneAltitudeRestriction = (zone) => {\n        if (zone.minAltitude === null && zone.maxAltitude === null) {\n            return true\n        }\n        if (zone.minAltitude !== null && zone.maxAltitude === null) {\n            return this.altitude < zone.minAltitude\n        }\n        return this.altitude < zone.minAltitude || this.altitude > zone.maxAltitude\n    }\n\n    breachingGroundClearance = () => {\n        return !this.isLanding() && this.is([_aeroplaneStates__WEBPACK_IMPORTED_MODULE_3__.HOLDING_PATTERN, _aeroplaneStates__WEBPACK_IMPORTED_MODULE_3__.FLYING]) && this.altitude < _config_constants__WEBPACK_IMPORTED_MODULE_2__.MIN_GROUND_CLEARANCE\n    }\n\n    markBreachingProximityLimits = () => {\n        this.breachingProximity = true\n    }\n\n    markAdheringProximityLimits = () => {\n        this.breachingProximity = false\n    }\n\n    outOfFuel = (outOfFuelCallback) => {\n        const outOfFuel = this.fuelLevel <= 0;\n        if (outOfFuel) {\n            outOfFuelCallback()\n        }\n        return outOfFuel\n    }\n\n    consumeFuel = () => {\n        if (this.fuelLevel - _config_constants__WEBPACK_IMPORTED_MODULE_2__.BASE_FUEL_CONSUMPTION_RATE <= 0) {\n            this.fuelLevel = 0\n        } else {\n            let rate = _config_constants__WEBPACK_IMPORTED_MODULE_2__.BASE_FUEL_CONSUMPTION_RATE\n\n            rate += this._stateFuelConsumptionRate()\n\n            if (this.targetAltitude && this.targetAltitude > this.altitude) {\n                rate += 0.04\n            } else {\n                rate -= 0.005\n            }\n            if (this.speed >= 240) {\n                rate += 0.04\n            }\n            if (this.speed <= 200) {\n                rate -= 0.005\n            }\n            this.fuelLevel -= rate\n        }\n    }\n\n    _clean_actions = () => {\n        this.actions = this.actions.filter(action => action.isFutureActionable() || action.isActionable())\n        this._clear_targets()\n    }\n\n    _isOutsideBoundaries = (mapBoundaries) => {\n        const outsideX = (this.x < mapBoundaries.minX || this.x > mapBoundaries.maxX)\n        const outsideY = (this.y < mapBoundaries.minY || this.y > mapBoundaries.maxY)\n        return outsideX || outsideY\n    }\n\n    _determineStartingFuel = () => {\n        if (this.isArrival()) {\n            return (0,_utils_maths__WEBPACK_IMPORTED_MODULE_0__.getRandomNumberBetween)(15, 25)\n        } else {\n            return (0,_utils_maths__WEBPACK_IMPORTED_MODULE_0__.getRandomNumberBetween)(90, 100)\n        }\n    }\n\n    _stateFuelConsumptionRate = () => {\n        const consumptionRateMap = {\n            READY_TO_TAXI: 0.1,\n            TAXIING: 0.1,\n            HOLDING_SHORT: 0.1,\n            TAKING_OFF: 0.5,\n            FLYING: 0,\n            LANDING: 0,\n            HOLDING_PATTERN: 0,\n            GOING_AROUND: 0,\n        }\n        return this.state ? consumptionRateMap[this.state] : 0\n    }\n\n    _clear_targets = () => {\n        const activeActions = this.actions.map(action => action.type())\n        if (activeActions.every(action => ![\"Waypoint\", \"Heading\", \"Landing\"].includes(action))) {\n            this.targetLocation = undefined\n        }\n        this.targetAltitude = activeActions.includes('Altitude') ? this.targetAltitude : undefined\n        this.targetSpeed = activeActions.includes('Speed') ? this.targetSpeed : undefined\n    }\n\n    _update_targets = () => {\n        // Add targets from current actions\n        this.actions.forEach(action => {\n            if (action.type() === \"Waypoint\") {\n                this.targetLocation = action.targetWaypoint\n            }\n            if ([\"Heading\", \"Landing\"].includes(action.type())) {\n                this.targetLocation = action.targetValue\n            }\n            if (action.type() === \"Altitude\") {\n                this.targetAltitude = action.targetValue\n            }\n            if (action.type() === \"Speed\") {\n                this.targetSpeed = action.targetValue\n            }\n        })\n    }\n}\n\n\n//# sourceURL=webpack://atc/./src/Domain/Aeroplane/Aeroplane.js?");

/***/ }),

/***/ "./src/Domain/Aeroplane/aeroplaneStates.js":
/*!*************************************************!*\
  !*** ./src/Domain/Aeroplane/aeroplaneStates.js ***!
  \*************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"FLYING\": () => (/* binding */ FLYING),\n/* harmony export */   \"GOING_AROUND\": () => (/* binding */ GOING_AROUND),\n/* harmony export */   \"HOLDING_PATTERN\": () => (/* binding */ HOLDING_PATTERN),\n/* harmony export */   \"HOLDING_SHORT\": () => (/* binding */ HOLDING_SHORT),\n/* harmony export */   \"LANDING\": () => (/* binding */ LANDING),\n/* harmony export */   \"READY_TO_TAXI\": () => (/* binding */ READY_TO_TAXI),\n/* harmony export */   \"TAKING_OFF\": () => (/* binding */ TAKING_OFF),\n/* harmony export */   \"TAXIING\": () => (/* binding */ TAXIING)\n/* harmony export */ });\n// Ground operations\nconst READY_TO_TAXI = \"READY_TO_TAXI\"\nconst TAXIING = \"TAXIING\"\nconst HOLDING_SHORT = \"HOLDING_SHORT\"\n// Air operations\nconst TAKING_OFF = \"TAKING_OFF\"\nconst FLYING = \"FLYING\"\nconst HOLDING_PATTERN = \"HOLDING_PATTERN\"\nconst GOING_AROUND = \"GOING_AROUND\"\nconst LANDING = \"LANDING\"\n\n\n//# sourceURL=webpack://atc/./src/Domain/Aeroplane/aeroplaneStates.js?");

/***/ }),

/***/ "./src/Domain/GameMap/GameMap.js":
/*!***************************************!*\
  !*** ./src/Domain/GameMap/GameMap.js ***!
  \***************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"GameMap\": () => (/* binding */ GameMap)\n/* harmony export */ });\nclass GameMap {\n    constructor(mapConfig) {\n        this.name = mapConfig.name\n        this.shortCode = mapConfig.shortCode\n        this.defaultWaypoint = mapConfig.defaultWaypoint\n        this.maxX = mapConfig.maxX\n        this.maxY = mapConfig.maxY\n        this.focusableConfig = mapConfig.focusableConfig\n        this.mapBoundaries = {\n            minX: 0,\n            maxX: mapConfig.maxX,\n            minY: 0,\n            maxY: mapConfig.maxY,\n        }\n        this.features = mapConfig.features\n        this.terrain = mapConfig.terrain\n    }\n\n    runwayExists = (targetRunway) => {\n        for (let x = 0; x < this.features.runways.length; x++) {\n            let runway = this.features.runways[x]\n            if (runway.start.label === targetRunway || runway.end.label === targetRunway) {\n                return true\n            }\n        }\n        return false\n    }\n\n    getRunwayInfo = (targetRunway) => {\n        for (let x = 0; x < this.features.runways.length; x++) {\n            let runway = this.features.runways[x]\n            if (runway.start.label === targetRunway) {\n                return runway.start\n            }\n            if (runway.end.label === targetRunway) {\n                return runway.end\n            }\n        }\n        return null\n    }\n\n    getWaypointInfo = (waypointId) => {\n        for (let x = 0; x < this.features.waypoints.length; x++) {\n            const waypoint = this.features.waypoints[x];\n            if (waypoint.id === waypointId) {\n                return waypoint\n            }\n        }\n        return null\n    }\n}\n\n//# sourceURL=webpack://atc/./src/Domain/GameMap/GameMap.js?");

/***/ }),

/***/ "./src/Interface/InterfaceController.js":
/*!**********************************************!*\
  !*** ./src/Interface/InterfaceController.js ***!
  \**********************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"InterfaceController\": () => (/* binding */ InterfaceController)\n/* harmony export */ });\n/* harmony import */ var _Command_CommandParser_CommandParser__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../Command/CommandParser/CommandParser */ \"./src/Command/CommandParser/CommandParser.js\");\n/* harmony import */ var _utils_timeFormatters__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../utils/timeFormatters */ \"./src/utils/timeFormatters.js\");\n/* harmony import */ var _elements__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./elements */ \"./src/Interface/elements.js\");\n/* harmony import */ var _States_Tutorial__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../States/Tutorial */ \"./src/States/Tutorial.js\");\n/* harmony import */ var _utils_maths__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../utils/maths */ \"./src/utils/maths.js\");\n/* harmony import */ var _Domain_Aeroplane_aeroplaneStates__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../Domain/Aeroplane/aeroplaneStates */ \"./src/Domain/Aeroplane/aeroplaneStates.js\");\n/* harmony import */ var _States_Easy__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../States/Easy */ \"./src/States/Easy.js\");\n/* harmony import */ var _States_Hard__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ../States/Hard */ \"./src/States/Hard.js\");\n/* harmony import */ var _States_Realistic_RealisticStart__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ../States/Realistic/RealisticStart */ \"./src/States/Realistic/RealisticStart.js\");\n/* harmony import */ var _States_Dynamic__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ../States/Dynamic */ \"./src/States/Dynamic.js\");\n/* harmony import */ var _config_colours__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ../config/colours */ \"./src/config/colours.js\");\n\n\n\n\n\n\n\n\n\n\n\n\nclass TargetValue {\n    constructor(value) {\n        this.value = value\n        this.isTarget = true\n    }\n}\n\nclass CurrentValue {\n    constructor(value) {\n        this.value = value\n        this.isTarget = false\n    }\n}\n\nclass InterfaceController {\n    constructor(aeroplaneService) {\n        this.aeroplaneService = aeroplaneService\n\n        this.lastCallSign = null\n        this.selectedStrip = null\n        this.selectedCallSign = null\n\n        this.gamePaused = false\n        this.unPauseCallback = undefined\n        this.gameSpeed = 1\n        this.projectedPathsOn = false\n        this._init()\n    }\n\n    _init = () => {\n        this._setupCommandInterface()\n        this._setupClickInterface()\n        this._setupPlayPauseInterface()\n        this._setupButtonsInterface()\n        this._setupSettingsButtons()\n        this._setupGameSpeedButtons()\n        this._focusCommandEntry()\n    }\n\n    _setupCommandInterface = () => {\n        document.getElementById(\"send-command\").addEventListener(\"click\", this._newCommandHandler)\n        document.addEventListener('keyup', (e) => {\n            if (e.code === \"Enter\") {\n                this._newCommandHandler()\n            }\n        });\n        document.addEventListener('keyup', (e) => {\n            if (e.code === \"ArrowUp\") {\n                this._previousCallSignHandler()\n            }\n        });\n    }\n\n    _setupClickInterface = () => {\n        document.addEventListener('click', (e) => {\n            const clickedX = e.clientX\n            const clickedY = e.clientY\n            const callSign = this.aeroplaneService.getCallSignByPosition(clickedX, clickedY)\n            if (callSign) {\n                let commandField = document.getElementById(\"command-entry-field\");\n                commandField.value = callSign\n                this.lastCallSign = callSign\n                const strip = this._getStripFor(callSign)\n                this._selectStrip(strip)\n                this._focusCommandEntry()\n            }\n        });\n    }\n\n    _setupPlayPauseInterface = () => {\n        document.getElementById(\"pause-play\").addEventListener(\"click\", this._playPauseHandler)\n        document.addEventListener('keyup', (e) => {\n            if (e.code === \"Escape\") {\n                this._playPauseHandler()\n            }\n        })\n    }\n\n    _setupButtonsInterface = () => {\n        const helpButton = document.getElementById('help')\n        helpButton.addEventListener('click', (_) => {\n            this._handleHelpMenu()\n        });\n    }\n\n    _setupSettingsButtons = () => {\n        document.getElementById(\"tutorial\").addEventListener(\"click\", this.startTutorialMode)\n        document.getElementById(\"easy\").addEventListener(\"click\", this.startEasyMode)\n        document.getElementById(\"realistic\").addEventListener(\"click\", this.startRealisticMode)\n        document.getElementById(\"hard\").addEventListener(\"click\", this.startHardMode)\n        document.getElementById(\"dynamic\").addEventListener(\"click\", this.startDynamicMode)\n        document.getElementById(\"projected-paths\").addEventListener(\"click\", this._toggleProjectedPaths)\n    }\n\n    _setupGameSpeedButtons = () => {\n        document.addEventListener('keyup', (e) => {\n            if (e.code === \"AltLeft\") {\n                this.gameSpeed = this.gameSpeed >= 3 ? this.gameSpeed : this.gameSpeed + 1\n            } else if (e.code === \"ControlLeft\") {\n                this.gameSpeed = this.gameSpeed <= 1 ? this.gameSpeed : this.gameSpeed - 1\n            }\n            document.getElementById(\"game-speed-text\").innerText = `${this.gameSpeed}x`\n            if (this.gameSpeed === 1) {\n                document.getElementById(\"game-speed-text\").classList.remove('bad')\n                document.getElementById(\"game-speed-text\").classList.remove('not-ideal')\n                document.getElementById(\"game-speed-text\").classList.add('neutral')\n            }\n            if (this.gameSpeed === 2) {\n                document.getElementById(\"game-speed-text\").classList.remove('neutral')\n                document.getElementById(\"game-speed-text\").classList.remove('bad')\n                document.getElementById(\"game-speed-text\").classList.add('not-ideal')\n            }\n            if (this.gameSpeed === 3) {\n                document.getElementById(\"game-speed-text\").classList.remove('neutral')\n                document.getElementById(\"game-speed-text\").classList.remove('not-ideal')\n                document.getElementById(\"game-speed-text\").classList.add('bad')\n            }\n            this._focusCommandEntry()\n        });\n\n    }\n\n    _focusCommandEntry = () => {\n        document.getElementById(\"command-entry-field\").focus()\n    }\n\n    // Public Methods\n\n    setUnPauseCallback = (callback) => {\n        this.unPauseCallback = callback\n    }\n\n    setStats = (totalLanded, correctlyLandedPercentage, totalDeparted, correctlyDepartedPercentage, exitedCount, breachedRestrictions, outOfFuelCount) => {\n        if (exitedCount > 0) {\n            document.getElementById(\"exited-count\").classList.remove('good')\n            document.getElementById(\"exited-count\").classList.add('bad')\n        } else {\n            document.getElementById(\"exited-count\").classList.remove('bad')\n            document.getElementById(\"exited-count\").classList.add('good')\n        }\n\n        if (outOfFuelCount > 0) {\n            document.getElementById(\"out-of-fuel\").classList.remove('good')\n            document.getElementById(\"out-of-fuel\").classList.add('bad')\n        } else {\n            document.getElementById(\"out-of-fuel\").classList.remove('bad')\n            document.getElementById(\"out-of-fuel\").classList.add('good')\n        }\n\n        if (breachedRestrictions > 0) {\n            document.getElementById(\"breached-restrictions\").classList.remove('good')\n            document.getElementById(\"breached-restrictions\").classList.add('bad')\n        } else {\n            document.getElementById(\"breached-restrictions\").classList.remove('bad')\n            document.getElementById(\"breached-restrictions\").classList.add('good')\n        }\n\n        if (totalLanded === 0) {\n            document.getElementById(\"correctly-landed-percentage\").classList.remove('not-ideal')\n            document.getElementById(\"correctly-landed-percentage\").classList.remove('bad')\n            document.getElementById(\"correctly-landed-percentage\").classList.remove('good')\n            document.getElementById(\"correctly-landed-percentage\").classList.add('neutral')\n        } else if (correctlyLandedPercentage >= 95) {\n            document.getElementById(\"correctly-landed-percentage\").classList.remove('neutral')\n            document.getElementById(\"correctly-landed-percentage\").classList.remove('not-ideal')\n            document.getElementById(\"correctly-landed-percentage\").classList.remove('bad')\n            document.getElementById(\"correctly-landed-percentage\").classList.add('good')\n\n        } else if (correctlyLandedPercentage >= 75) {\n            document.getElementById(\"correctly-landed-percentage\").classList.remove('neutral')\n            document.getElementById(\"correctly-landed-percentage\").classList.remove('good')\n            document.getElementById(\"correctly-landed-percentage\").classList.remove('bad')\n            document.getElementById(\"correctly-landed-percentage\").classList.add('not-ideal')\n        } else {\n            document.getElementById(\"correctly-landed-percentage\").classList.remove('neutral')\n            document.getElementById(\"correctly-landed-percentage\").classList.remove('good')\n            document.getElementById(\"correctly-landed-percentage\").classList.remove('not-ideal')\n            document.getElementById(\"correctly-landed-percentage\").classList.add('bad')\n        }\n\n        if (totalDeparted === 0) {\n            document.getElementById(\"correctly-departed-percentage\").classList.remove('not-ideal')\n            document.getElementById(\"correctly-departed-percentage\").classList.remove('bad')\n            document.getElementById(\"correctly-departed-percentage\").classList.remove('good')\n            document.getElementById(\"correctly-departed-percentage\").classList.add('neutral')\n        } else if (correctlyDepartedPercentage >= 95) {\n            document.getElementById(\"correctly-departed-percentage\").classList.remove('neutral')\n            document.getElementById(\"correctly-departed-percentage\").classList.remove('not-ideal')\n            document.getElementById(\"correctly-departed-percentage\").classList.remove('bad')\n            document.getElementById(\"correctly-departed-percentage\").classList.add('good')\n        } else if (correctlyDepartedPercentage >= 75) {\n            document.getElementById(\"correctly-departed-percentage\").classList.remove('neutral')\n            document.getElementById(\"correctly-departed-percentage\").classList.remove('good')\n            document.getElementById(\"correctly-departed-percentage\").classList.remove('bad')\n            document.getElementById(\"correctly-departed-percentage\").classList.add('not-ideal')\n        } else {\n            document.getElementById(\"correctly-departed-percentage\").classList.remove('neutral')\n            document.getElementById(\"correctly-departed-percentage\").classList.remove('good')\n            document.getElementById(\"correctly-departed-percentage\").classList.remove('not-ideal')\n            document.getElementById(\"correctly-departed-percentage\").classList.add('bad')\n        }\n\n        document.getElementById(\"total-landed\").innerText = totalLanded\n        document.getElementById(\"total-departed\").innerText = totalDeparted\n\n        document.getElementById(\"correctly-landed-percentage\").innerText = totalLanded > 0 ? correctlyLandedPercentage + '%' : '-'\n        document.getElementById(\"correctly-departed-percentage\").innerText = totalDeparted > 0 ? correctlyDepartedPercentage + '%' : '-'\n        document.getElementById(\"exited-count\").innerText = exitedCount\n        document.getElementById(\"out-of-fuel\").innerText = outOfFuelCount\n        document.getElementById(\"breached-restrictions\").innerText = (0,_utils_timeFormatters__WEBPACK_IMPORTED_MODULE_1__.timeStringFromSeconds)(breachedRestrictions)\n    }\n\n    showHint = (hintTitle, hintBodyBefore, hintCode, hintBodyAfter, confirmButtonText, confirmButtonCallback) => {\n        document.getElementById(\"hint\").style.display = 'none'\n\n        const title = document.getElementById('hint-title')\n        const bodyBefore = document.getElementById('hint-body-before')\n        const code = document.getElementById('hint-code')\n        const bodyAfter = document.getElementById('hint-body-after')\n        const confirmButton = document.getElementById(\"hint-confirm\")\n\n        // Hide optional elements\n        code.style.display = 'none'\n        bodyAfter.style.display = 'none'\n        confirmButton.style.display = 'none'\n\n        // Clear optional elements' content\n        code.innerText = ''\n        bodyAfter.innerText = ''\n        confirmButton.innerText = ''\n\n        // Always have a title and some content\n        title.innerText = hintTitle\n        bodyBefore.innerText = hintBodyBefore\n\n        // Display optional content\n        if (hintCode) {\n            code.innerText = hintCode\n            code.style.display = 'inline-block'\n        } else {\n            code.style.display = 'none'\n        }\n\n        if (hintBodyAfter) {\n            bodyAfter.innerText = hintBodyAfter\n            bodyAfter.style.display = 'inline-block'\n        } else {\n            bodyAfter.style.display = 'none'\n        }\n\n        if (confirmButtonText) {\n            confirmButton.innerText = confirmButtonText\n            confirmButton.style.display = 'inline-block'\n            document.getElementById(\"hint-confirm\").onclick = confirmButtonCallback\n        } else {\n            confirmButton.style.display = 'none'\n        }\n\n        document.getElementById(\"hint\").style.display = 'block'\n    }\n\n    hideHint = () => {\n        document.getElementById(\"hint\").style.display = 'none'\n    }\n\n    focusAttention = (focusableElementConfig) => {\n        const attentionElement = document.getElementById(\"attention-focus\");\n\n        attentionElement.style.left = `${(0,_utils_maths__WEBPACK_IMPORTED_MODULE_4__.round)(focusableElementConfig.minX, 0)}px`\n        attentionElement.style.top = `${focusableElementConfig.minY}px`\n\n        attentionElement.style.width = `${focusableElementConfig.maxX - focusableElementConfig.minX}px`\n        attentionElement.style.height = `${focusableElementConfig.maxY - focusableElementConfig.minY}px`\n\n        attentionElement.style.display = 'block'\n    }\n\n    blurAttention = () => {\n        document.getElementById(\"attention-focus\").style.display = 'none';\n    }\n\n    clearCommandEntry = () => {\n        let commandField = document.getElementById(\"command-entry-field\");\n        commandField.value = \"\"\n    }\n\n    // Wind Indicator\n    updateWindIndicator = () => {\n        const windDirection = this.aeroplaneService.weather.wind.direction\n        const windArrow = document.getElementById(\"wind-arrow\");\n        windArrow.style.transform = `rotate(${windDirection}deg)`\n\n        const windSpeed = this.aeroplaneService.weather.wind.speed\n        const windSpeedIndicator = document.getElementById(\"wind-speed\");\n        windSpeedIndicator.innerText = windSpeed\n    }\n\n    // Message\n\n    _displayCommandMessage = (success, callSign, messages) => {\n        let messageContainer = document.getElementById(\"message-container\");\n\n        const messageItem = (0,_elements__WEBPACK_IMPORTED_MODULE_2__.div)([\"message-item\"])\n        const messageItemMessage = (0,_elements__WEBPACK_IMPORTED_MODULE_2__.p)([\"message-item-message\", \"bold\"])\n\n        messageItemMessage.innerText = callSign ? callSign : ''\n\n        messageItem.appendChild(messageItemMessage)\n        messageContainer.append(messageItem)\n\n        messages.forEach(message => {\n            if (message) {\n                const messageItem = (0,_elements__WEBPACK_IMPORTED_MODULE_2__.div)([\"message-item\"])\n                const messageItemIndicator = (0,_elements__WEBPACK_IMPORTED_MODULE_2__.p)([\"message-item-indicator\"])\n                const messageItemMessage = (0,_elements__WEBPACK_IMPORTED_MODULE_2__.p)([\"message-item-message\"])\n\n                if (message.state === 'valid') {\n                    messageItemIndicator.classList.add('background-green')\n                } else if (message.state === 'error') {\n                    messageItemIndicator.classList.add('background-red')\n                } else {\n                    messageItemIndicator.classList.add('background-orange')\n                }\n\n                messageItemMessage.innerText = message.text ? message.text : ''\n\n                messageItem.appendChild(messageItemIndicator)\n                messageItem.appendChild(messageItemMessage)\n                messageContainer.append(messageItem)\n            }\n        })\n        messageContainer.style.border = success ? '' : '1px solid red'\n        messageContainer.style.display = \"block\"\n    }\n\n    _clearMessage = () => {\n        document.getElementById(\"message-container\").innerHTML = ''\n        document.getElementById(\"message-container\").style.display = \"none\"\n    }\n\n    // Sidebar strips\n    drawStrips = () => {\n        this.aeroplaneService.aeroplanes.forEach(plane => {\n            if (!this._getStripFor(plane.callSign)) {\n                this.addStrip(plane)\n            }\n        })\n    }\n\n    addStrip = (aeroplane) => {\n        const sidebar = document.getElementById(\"sidebar\");\n        const strip = (0,_elements__WEBPACK_IMPORTED_MODULE_2__.div)([\"aeroplane-strip\", aeroplane.type.toLowerCase()], aeroplane.callSign)\n\n        const overview = this._overviewBlock(aeroplane)\n        const state = this._stateBlock(aeroplane)\n        const actionsOverview = this._actionsOverviewBlock(aeroplane)\n\n        strip.appendChild(overview)\n        strip.appendChild(state)\n        strip.appendChild(actionsOverview)\n\n        strip.addEventListener('click', () => this._selectStrip(strip))\n\n        sidebar.appendChild(strip)\n    }\n\n    updateStrips = () => {\n        this.aeroplaneService.aeroplanes.forEach(plane => {\n            // Final Target\n            const finalTargetElement = document.getElementById(`${plane.callSign}-final-target`)\n            finalTargetElement.innerText = plane.finalTarget\n\n            // State\n            const stateCallSignElement = document.getElementById(`${plane.callSign}-state-call-sign`)\n            stateCallSignElement.innerText = this._format_state(plane)\n\n            const overviewValues = this._get_action_overview_values(plane)\n            // Location\n            const locationTextElement = document.getElementById(`${plane.callSign}-location`)\n            const locationColourClass = this._colour_class(overviewValues.location);\n            locationTextElement.classList.add(locationColourClass)\n            locationTextElement.classList.remove(this._invert(locationColourClass))\n            locationTextElement.innerText = overviewValues.location.value\n\n            // Altitude\n            const altitudeTextElement = document.getElementById(`${plane.callSign}-altitude`)\n            const altitudeColourClass = this._colour_class(overviewValues.altitude);\n            altitudeTextElement.classList.add(altitudeColourClass)\n            altitudeTextElement.classList.remove(this._invert(altitudeColourClass))\n            altitudeTextElement.innerText = overviewValues.altitude.value\n\n            // Speed\n            const speedTextElement = document.getElementById(`${plane.callSign}-speed`)\n            const speedColourClass = this._colour_class(overviewValues.speed);\n            speedTextElement.classList.add(speedColourClass)\n            speedTextElement.classList.remove(this._invert(speedColourClass))\n            speedTextElement.innerText = overviewValues.speed.value\n\n            // Fuel\n            this.updateFuelIndicator(plane)\n\n            // State indicator\n            const indicator = document.getElementById(`${plane.callSign}-state-indicator`)\n            indicator.style.backgroundColor = this.determineStateIndicatorColour(plane)\n        })\n    }\n\n    determineStateIndicatorColour = (plane) => {\n        if (plane.hasTakeoffClearance) {\n            return _config_colours__WEBPACK_IMPORTED_MODULE_10__.COLOURS.ORANGE\n        }\n        return 'transparent'\n    }\n\n    clearInactiveStrips = () => {\n        const strips = document.querySelectorAll(\".aeroplane-strip\")\n        const aeroplaneCallSigns = this.aeroplaneService.aeroplanes.map(plane => plane.callSign)\n        strips.forEach(strip => {\n            if (!aeroplaneCallSigns.includes(strip.id)) {\n                strip.remove()\n            }\n        })\n    }\n\n    _overviewBlock = (aeroplane) => {\n        const overview = (0,_elements__WEBPACK_IMPORTED_MODULE_2__.div)([\"row\", \"overview\"])\n\n        //  Call Sign\n        const callSign = (0,_elements__WEBPACK_IMPORTED_MODULE_2__.div)([\"value\"])\n        const callSignText = (0,_elements__WEBPACK_IMPORTED_MODULE_2__.p)([\"text\"], \"call-sign\")\n        callSignText.innerText = aeroplane.callSign\n        callSign.appendChild(callSignText)\n\n        //  Short class\n        const shortClass = (0,_elements__WEBPACK_IMPORTED_MODULE_2__.div)([\"value\"])\n        const shortClassText = (0,_elements__WEBPACK_IMPORTED_MODULE_2__.p)([\"text\", \"center\", \"short-class\"])\n        shortClassText.innerText = aeroplane.shortClass\n        shortClass.appendChild(shortClassText)\n\n        //  Target\n        const target = (0,_elements__WEBPACK_IMPORTED_MODULE_2__.div)([\"value\"])\n        const targetText = (0,_elements__WEBPACK_IMPORTED_MODULE_2__.p)([\"text\", \"right\", \"final-target\"], `${aeroplane.callSign}-final-target`)\n        targetText.innerText = aeroplane.finalTarget\n        target.appendChild(targetText)\n\n\n        overview.appendChild(callSign)\n        overview.appendChild(shortClass)\n        overview.appendChild(target)\n\n        return overview\n    }\n\n    _stateBlock = (aeroplane) => {\n        const stateBlock = (0,_elements__WEBPACK_IMPORTED_MODULE_2__.div)([\"row\", \"state\"])\n\n        // State block\n        // State\n        const state = (0,_elements__WEBPACK_IMPORTED_MODULE_2__.div)([], 'aircraft-state')\n        const stateText = (0,_elements__WEBPACK_IMPORTED_MODULE_2__.p)([\"text\"], `${aeroplane.callSign}-state-call-sign`)\n        stateText.innerText = this._format_state(aeroplane)\n        state.appendChild(stateText)\n        // State indicator\n        const stateIndicator = (0,_elements__WEBPACK_IMPORTED_MODULE_2__.div)(['state-indicator'], `${aeroplane.callSign}-state-indicator`)\n        state.appendChild(stateIndicator)\n\n        stateBlock.appendChild(state)\n\n\n        // Fuel\n        if (aeroplane.fuelLevel !== null) {\n            const fuelContainer = (0,_elements__WEBPACK_IMPORTED_MODULE_2__.div)([\"fuel-container\"])\n            const fuelIndicator = this._fuelIndicator(aeroplane)\n            fuelContainer.appendChild(fuelIndicator)\n\n            stateBlock.appendChild(fuelContainer)\n        }\n\n\n        return stateBlock\n    }\n\n    _fuelIndicator = (aeroplane) => {\n        const pip1 = (0,_elements__WEBPACK_IMPORTED_MODULE_2__.div)([\"fuel-indicator-pip\", \"pip1\"], `${aeroplane.callSign}-pip1`)\n        const pip2 = (0,_elements__WEBPACK_IMPORTED_MODULE_2__.div)([\"fuel-indicator-pip\", \"pip2\"], `${aeroplane.callSign}-pip2`)\n        const pip3 = (0,_elements__WEBPACK_IMPORTED_MODULE_2__.div)([\"fuel-indicator-pip\", \"pip3\"], `${aeroplane.callSign}-pip3`)\n        const pip4 = (0,_elements__WEBPACK_IMPORTED_MODULE_2__.div)([\"fuel-indicator-pip\", \"pip4\"], `${aeroplane.callSign}-pip4`)\n        const pip5 = (0,_elements__WEBPACK_IMPORTED_MODULE_2__.div)([\"fuel-indicator-pip\", \"pip5\"], `${aeroplane.callSign}-pip5`)\n\n        const fuelIndicator = (0,_elements__WEBPACK_IMPORTED_MODULE_2__.div)([\"fuel-indicator\", \"align-right\"])\n\n        fuelIndicator.appendChild(pip1)\n        fuelIndicator.appendChild(pip2)\n        fuelIndicator.appendChild(pip3)\n        fuelIndicator.appendChild(pip4)\n        fuelIndicator.appendChild(pip5)\n\n        return fuelIndicator\n    }\n\n    updateFuelIndicator = (aeroplane) => {\n        const pips = [\n            document.getElementById(`${aeroplane.callSign}-pip1`),\n            document.getElementById(`${aeroplane.callSign}-pip2`),\n            document.getElementById(`${aeroplane.callSign}-pip3`),\n            document.getElementById(`${aeroplane.callSign}-pip4`),\n            document.getElementById(`${aeroplane.callSign}-pip5`)\n        ]\n\n        const fuelLevel = aeroplane.fuelLevel\n        const numFilled = Math.ceil(fuelLevel / 20)\n        const fillColour = this._fuelIndicatorColour(fuelLevel)\n\n        pips.forEach((pip, index) => {\n            pip.classList.remove(\n                'pip-green', 'pip-orange', 'pip-red',\n                'background-green', 'background-orange', 'background-red',\n                'pip-border-green', 'pip-border-orange', 'pip-border-red'\n            )\n            pip.classList.add(`pip-border-${fillColour}`)\n            if (index < numFilled) {\n                pip.classList.add(`background-${fillColour}`)\n            }\n        })\n    }\n\n    _fuelIndicatorColour = (fuelLevel) => {\n        if (fuelLevel <= 20) {\n            return 'red'\n        } else if (fuelLevel <= 60) {\n            return 'orange'\n        } else {\n            return 'green'\n        }\n    }\n\n    _actionsOverviewBlock = (aeroplane) => {\n        const actionsOverview = (0,_elements__WEBPACK_IMPORTED_MODULE_2__.div)([\"row\", \"actions-overview\"])\n\n        const overviewValues = this._get_action_overview_values(aeroplane)\n\n        //  Speed\n        const speed = (0,_elements__WEBPACK_IMPORTED_MODULE_2__.div)([\"action-target\"])\n        const speedText = (0,_elements__WEBPACK_IMPORTED_MODULE_2__.p)([\"text\", this._colour_class(overviewValues.speed)], `${aeroplane.callSign}-speed`)\n        speedText.innerText = overviewValues.speed.value\n        speed.appendChild(speedText)\n\n        //  Location\n        const location = (0,_elements__WEBPACK_IMPORTED_MODULE_2__.div)([\"action-target\"])\n        const locationText = (0,_elements__WEBPACK_IMPORTED_MODULE_2__.p)([\"text\", \"center\", this._colour_class(overviewValues.location)], `${aeroplane.callSign}-location`)\n        locationText.innerText = overviewValues.location.value\n        location.appendChild(locationText)\n\n        //  Altitude\n        const altitude = (0,_elements__WEBPACK_IMPORTED_MODULE_2__.div)([\"action-target\"])\n        const altitudeText = (0,_elements__WEBPACK_IMPORTED_MODULE_2__.p)([\"text\", this._colour_class(overviewValues.altitude), \"right\"], `${aeroplane.callSign}-altitude`)\n        altitudeText.innerText = overviewValues.altitude.value\n        altitude.appendChild(altitudeText)\n\n\n        actionsOverview.appendChild(speed)\n        actionsOverview.appendChild(location)\n        actionsOverview.appendChild(altitude)\n\n        return actionsOverview\n    }\n\n    _format_state = (aeroplane) => {\n        const state_map = {\n            READY_TO_TAXI: \"READY\",\n            TAXIING: \"TAXI\",\n            HOLDING_SHORT: `SHORT ${aeroplane.positionDescription}`,\n            TAKING_OFF: \"T/O\",\n            FLYING: \"FLYING\",\n            HOLDING_PATTERN: \"HOLD\",\n            LANDING: \"LANDING\",\n            GOING_AROUND: \"G/A\",\n        }\n        return state_map[aeroplane.state]\n    }\n\n    _get_action_overview_values = (aeroplane) => {\n        return {\n            altitude: this._get_altitude(aeroplane),\n            location: this._get_location(aeroplane),\n            speed: this._get_speed(aeroplane)\n        }\n    }\n\n    _get_altitude = (aeroplane) => {\n        if (aeroplane.targetAltitude) {\n            return new TargetValue(aeroplane.targetAltitude)\n        }\n        return new CurrentValue((0,_utils_maths__WEBPACK_IMPORTED_MODULE_4__.roundToNearest)(aeroplane.altitude, 10))\n    }\n\n    _get_location = (aeroplane) => {\n        if (aeroplane.isInHoldingPattern()) {\n            return new TargetValue('-')\n        } else {\n            if (aeroplane.targetLocation) {\n                return new TargetValue(aeroplane.targetLocation)\n            }\n            return new CurrentValue((0,_utils_maths__WEBPACK_IMPORTED_MODULE_4__.roundToNearest)(aeroplane.heading, 1))\n        }\n    }\n\n    _get_speed = (aeroplane) => {\n        if (aeroplane.targetSpeed) {\n            return new TargetValue(aeroplane.targetSpeed)\n        }\n        return new CurrentValue((0,_utils_maths__WEBPACK_IMPORTED_MODULE_4__.roundToNearest)(aeroplane.speed, 1))\n    }\n\n    _colour_class = (value) => {\n        if (value.isTarget) {\n            return 'target-value'\n        }\n        return 'current-value'\n    }\n\n    _invert = (cls) => {\n        if (cls === 'target-value') {\n            return 'current-value'\n        }\n        return 'target-value'\n    }\n\n    _clearStripFocus = () => {\n        try {\n            this.selectedStrip.classList.remove('selected')\n        } catch (e) {\n\n        }\n    }\n\n    _selectStrip = (strip) => {\n        this._clearStripFocus()\n        strip.classList.add('selected')\n        this.selectedStrip = strip\n        this.selectedCallSign = strip.id\n        this.lastCallSign = strip.id\n        let commandField = document.getElementById(\"command-entry-field\");\n        commandField.value = this.selectedCallSign\n        this._focusCommandEntry()\n    }\n\n    _getStripFor = (callSign) => {\n        return document.getElementById(callSign)\n    }\n\n    // Event handlers\n\n    // -> Play & Pause\n    _playPauseHandler = () => {\n        if (this.gamePaused) {\n            this._unPauseGame()\n            this._hidePauseMenu()\n        } else {\n            this._pauseGame()\n            this._showPauseMenu()\n        }\n    }\n\n    _pauseGame = () => {\n        document.getElementById(\"pause-play\").style.backgroundColor = 'rgba(255,2,109,0.5)'\n        this.gamePaused = true\n    }\n\n    _unPauseGame = () => {\n        this._hideHelpMenu()\n        this._hidePauseMenu()\n        document.getElementById(\"pause-play\").style.backgroundColor = 'rgba(22, 145, 203, 0.5)'\n        this.gamePaused = false\n        this.unPauseCallback()\n    }\n\n    // -> Pause Menu\n    _hidePauseMenu = () => {\n        const helpMenu = document.getElementById('pause-menu')\n        helpMenu.style.display = 'none'\n    }\n\n    _showPauseMenu = () => {\n        const helpMenu = document.getElementById('pause-menu')\n        helpMenu.style.display = 'flex'\n    }\n\n    // -> Help Menu\n    _handleHelpMenu = () => {\n        const helpMenu = document.getElementById('help-menu')\n        if (this.gamePaused) {\n            const display = helpMenu.style.display;\n            if (display === '' || display === 'none') {\n                this._showHelpMenu()\n            } else {\n                this._hideHelpMenu()\n            }\n        } else {\n            this._pauseGame()\n            this._showHelpMenu()\n        }\n    }\n\n    _hideHelpMenu = () => {\n        const helpMenu = document.getElementById('help-menu')\n        helpMenu.style.display = 'none'\n    }\n\n    _showHelpMenu = () => {\n        const helpMenu = document.getElementById('help-menu')\n        helpMenu.style.display = 'block'\n    }\n\n    // -> Game mode\n    startTutorialMode = () => {\n        this.hideHint()\n        this.blurAttention()\n        this._clearGameModeSelection()\n        document.getElementById(\"tutorial-text\").classList.add('selected-green')\n        this.aeroplaneService.transitionTo(new _States_Tutorial__WEBPACK_IMPORTED_MODULE_3__.Tutorial(this.aeroplaneService.map, this))\n    }\n\n    startEasyMode = () => {\n        this.hideHint()\n        this.blurAttention()\n        this._clearGameModeSelection()\n        document.getElementById(\"easy-text\").classList.add('selected-green')\n        this.aeroplaneService.transitionTo(new _States_Easy__WEBPACK_IMPORTED_MODULE_6__.Easy(true))\n    }\n\n    startRealisticMode = () => {\n        this.hideHint()\n        this.blurAttention()\n        this._clearGameModeSelection()\n        document.getElementById(\"realistic-text\").classList.add('selected-orange')\n        this.aeroplaneService.transitionTo(new _States_Realistic_RealisticStart__WEBPACK_IMPORTED_MODULE_8__.RealisticStart(true))\n    }\n\n    startHardMode = () => {\n        this.hideHint()\n        this.blurAttention()\n        this._clearGameModeSelection()\n        document.getElementById(\"hard-text\").classList.add('selected-red')\n        this.aeroplaneService.transitionTo(new _States_Hard__WEBPACK_IMPORTED_MODULE_7__.Hard(true))\n    }\n\n    startDynamicMode = () => {\n        this.hideHint()\n        this.blurAttention()\n        this._clearGameModeSelection()\n        document.getElementById(\"dynamic-text\").classList.add('selected-red')\n        this.aeroplaneService.transitionTo(new _States_Dynamic__WEBPACK_IMPORTED_MODULE_9__.Dynamic(true))\n    }\n\n    _clearGameModeSelection = () => {\n        document.getElementById(\"tutorial-text\").classList.remove('selected-green')\n        document.getElementById(\"easy-text\").classList.remove('selected-green')\n        document.getElementById(\"realistic-text\").classList.remove('selected-orange')\n        document.getElementById(\"hard-text\").classList.remove('selected-red')\n        document.getElementById(\"dynamic-text\").classList.remove('selected-red')\n    }\n\n    // -> Projected Paths\n    _toggleProjectedPaths = () => {\n        if (this.projectedPathsOn) {\n            this.projectedPathsOn = false\n            document.getElementById(\"projected-paths-text\").innerText = 'Off'\n        } else {\n            this.projectedPathsOn = true\n            document.getElementById(\"projected-paths-text\").innerText = 'On'\n        }\n    }\n\n    // -> Command handling\n\n    _newCommandHandler = () => {\n        let commandField = document.getElementById(\"command-entry-field\");\n        const passedCommands = this.aeroplaneService.sendCommand(commandField.value)\n        this.lastCallSign = passedCommands.callSign ? passedCommands.callSign : this.lastCallSign\n        commandField.value = \"\"\n        this._clearStripFocus()\n        const {success, callSign, messages} = (0,_Command_CommandParser_CommandParser__WEBPACK_IMPORTED_MODULE_0__.commandMessage)(passedCommands);\n        this._displayCommandMessage(success, callSign, messages)\n        setTimeout(() => {\n            this._clearMessage()\n            this.selectedCallSign = \"\"\n        }, 2000)\n    };\n\n    _previousCallSignHandler = () => {\n        let commandField = document.getElementById(\"command-entry-field\");\n        commandField.value = this.lastCallSign\n        this.selectedCallSign = this.lastCallSign\n        const strip = this._getStripFor(this.lastCallSign)\n        this._selectStrip(strip)\n    };\n\n}\n\n//# sourceURL=webpack://atc/./src/Interface/InterfaceController.js?");

/***/ }),

/***/ "./src/Interface/UIController.js":
/*!***************************************!*\
  !*** ./src/Interface/UIController.js ***!
  \***************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"UIController\": () => (/* binding */ UIController)\n/* harmony export */ });\n/* harmony import */ var _config_colours__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../config/colours */ \"./src/config/colours.js\");\n/* harmony import */ var _config_constants__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../config/constants */ \"./src/config/constants.js\");\n/* harmony import */ var _utils_maths__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../utils/maths */ \"./src/utils/maths.js\");\n/* harmony import */ var _Domain_Aeroplane_aeroplaneStates__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../Domain/Aeroplane/aeroplaneStates */ \"./src/Domain/Aeroplane/aeroplaneStates.js\");\n\n\n\n\n\nclass UIController {\n    constructor(map, aeroplaneService, interfaceController, weatherService) {\n        this.map = map\n        this.aeroplaneService = aeroplaneService\n        this.interfaceController = interfaceController\n        this.weatherService = weatherService\n\n        this.backgroundCanvas = document.getElementById(\"background\");\n        this.backgroundContext = this.backgroundCanvas.getContext('2d');\n        this.featuresCanvas = document.getElementById(\"features\");\n        this.featuresContext = this.featuresCanvas.getContext('2d');\n        this.aeroplaneCanvas = document.getElementById(\"aeroplanes\");\n        this.aeroplaneContext = this.aeroplaneCanvas.getContext('2d');\n\n        this.mapBoundaries = {\n            minX: 0,\n            maxX: document.body.clientWidth,\n            minY: 0,\n            maxY: document.body.clientHeight,\n        }\n\n        this.initBackgroundLayer()\n        this.initFeaturesLayer()\n        this.initAeroplaneLayer()\n\n        this.initFeatures()\n    }\n\n    initBackgroundLayer = () => {\n        this.backgroundCanvas.width = document.body.clientWidth;\n        this.backgroundCanvas.height = document.body.clientHeight;\n\n        this.backgroundContext.fillStyle = _config_colours__WEBPACK_IMPORTED_MODULE_0__.COLOURS.BACKGROUND;\n        this.backgroundContext.fillRect(0, 0, this.backgroundCanvas.width, this.backgroundCanvas.height)\n    }\n\n    initFeaturesLayer = () => {\n        this.featuresCanvas.width = document.body.clientWidth;\n        this.featuresCanvas.height = document.body.clientHeight;\n    }\n\n    initAeroplaneLayer = () => {\n        this.aeroplaneCanvas.width = document.body.clientWidth;\n        this.aeroplaneCanvas.height = document.body.clientHeight;\n    }\n\n    clearAeroplaneLayer = () => {\n        this.aeroplaneContext.clearRect(0, 0, document.body.clientWidth, document.body.clientHeight);\n    }\n\n    initFeatures = () => {\n        this._drawRestrictedZones(this.map.features.restrictedZones)\n        this._drawVORs(this.map.features.waypoints)\n        this._drawRunways(this.map.features.runways)\n        this._drawILSFeathers(this.map.features.runways)\n        this._drawMapLines(this.map.features.mapLines)\n        this._drawMapCrosses(this.map.features.crosses)\n        this._drawTallStructures(this.map.features.tallStructures)\n        this._drawTerrain(this.map.terrain)\n        // this._drawRangeIndicators(this.mapBoundaries)\n    }\n\n    drawAeroplanes = () => {\n        this.aeroplaneService.aeroplanes.forEach(plane => {\n            this._drawAeroplanePosition(plane)\n            this._drawAeroplaneSpeedTail(plane)\n            this._drawHeadingLabel(plane)\n            this._drawSpeedLabel(plane)\n            this._drawAltitudeLabel(plane)\n            this._drawCallSignLabel(plane)\n            this._drawFinalTargetLabel(plane)\n            this._drawProjectedPath(plane)\n            this.drawWeather()\n        })\n    }\n\n    _drawRestrictedZones = (restrictedZones) => {\n        restrictedZones.forEach(zone => {\n            const severityColourMap = {\n                critical: {\n                    solid: _config_colours__WEBPACK_IMPORTED_MODULE_0__.COLOURS.RED,\n                    transparent: _config_colours__WEBPACK_IMPORTED_MODULE_0__.COLOURS.RED_TRANSPARENT\n                },\n                moderate: {\n                    solid: _config_colours__WEBPACK_IMPORTED_MODULE_0__.COLOURS.ORANGE,\n                    transparent: _config_colours__WEBPACK_IMPORTED_MODULE_0__.COLOURS.ORANGE_TRANSPARENT\n                },\n                informational: {\n                    solid: _config_colours__WEBPACK_IMPORTED_MODULE_0__.COLOURS.BLUE,\n                    transparent: _config_colours__WEBPACK_IMPORTED_MODULE_0__.COLOURS.BLUE_TRANSPARENT\n                }\n            }\n            // Border\n            this.featuresContext.strokeStyle = severityColourMap[zone.level].solid;\n            this.featuresContext.lineWidth = 3;\n            this.featuresContext.lineJoin = 'round';\n            this.featuresContext.setLineDash([zone.dashes]);\n            this.featuresContext.beginPath();\n            for (let x = 0; x < zone.boundaries.length; x++) {\n                let boundary = zone.boundaries[x]\n                if (x === 0) {\n                    this.featuresContext.moveTo(boundary.x, boundary.y)\n                } else {\n                    this.featuresContext.lineTo(boundary.x, boundary.y)\n                }\n\n            }\n            this.featuresContext.closePath()\n            this.featuresContext.stroke();\n\n            // Fill\n            if (zone.level !== 'informational') {\n                this.featuresContext.fillStyle = severityColourMap[zone.level].transparent;\n                this.featuresContext.beginPath();\n                for (let x = 0; x < zone.boundaries.length; x++) {\n                    let boundary = zone.boundaries[x]\n                    if (x === 0) {\n                        this.featuresContext.moveTo(boundary.x, boundary.y)\n                    } else {\n                        this.featuresContext.lineTo(boundary.x, boundary.y)\n                    }\n                }\n                this.featuresContext.closePath()\n                this.featuresContext.fill();\n            }\n\n            // Label\n            this.featuresContext.fillStyle = _config_colours__WEBPACK_IMPORTED_MODULE_0__.COLOURS.WHITE;\n            this.featuresContext.font = \"12px Courier New\";\n            this.featuresContext.beginPath();\n            this.featuresContext.fillText(zone.label.text, zone.label.location.x, zone.label.location.y);\n\n            const labelHeight = this.featuresContext.measureText(`${zone.label.text}`).fontBoundingBoxAscent;\n            let minAltitudeLabel;\n            if (zone.minAltitude) {\n                minAltitudeLabel = `${zone.minAltitude / 100}`;\n                this.featuresContext.fillStyle = _config_colours__WEBPACK_IMPORTED_MODULE_0__.COLOURS.YELLOW;\n                this.featuresContext.font = \"12px Courier New\";\n                this.featuresContext.beginPath();\n                this.featuresContext.fillText(minAltitudeLabel, zone.label.location.x, zone.label.location.y + labelHeight);\n            }\n            if (zone.minAltitude && zone.maxAltitude) {\n                const maxAltitudeLabel = `${zone.maxAltitude / 100}`;\n                const minAltitudeLabelWidth = this.featuresContext.measureText(minAltitudeLabel).width;\n                this.featuresContext.fillStyle = _config_colours__WEBPACK_IMPORTED_MODULE_0__.COLOURS.WHITE;\n                this.featuresContext.font = \"12px Courier New\";\n                this.featuresContext.beginPath();\n                this.featuresContext.fillText(maxAltitudeLabel, zone.label.location.x + minAltitudeLabelWidth + 4, zone.label.location.y + labelHeight);\n            }\n        })\n    }\n\n    _drawRunways = (runways) => {\n        runways.forEach(runway => {\n            this.featuresContext.strokeStyle = _config_colours__WEBPACK_IMPORTED_MODULE_0__.COLOURS.MINT;\n            this.featuresContext.lineWidth = 4;\n            this.featuresContext.setLineDash([]);\n            this.featuresContext.beginPath();\n            this.featuresContext.moveTo(runway.start.ILS.innerMarker.x, runway.start.ILS.innerMarker.y)\n            this.featuresContext.lineTo(runway.end.ILS.innerMarker.x, runway.end.ILS.innerMarker.y)\n            this.featuresContext.stroke();\n            // Labels\n            this.featuresContext.fillStyle = _config_colours__WEBPACK_IMPORTED_MODULE_0__.COLOURS.WHITE;\n            this.featuresContext.beginPath();\n            this.featuresContext.font = \"12px Courier New\";\n            this.featuresContext.fillText(runway.start.label, runway.start.ILS.innerMarker.x - 20, runway.start.ILS.innerMarker.y - 5);\n            this.featuresContext.fillText(runway.end.label, runway.end.ILS.innerMarker.x + 10, runway.end.ILS.innerMarker.y - 5);\n\n        })\n    }\n\n    _drawILSFeathers = (runways) => {\n        runways.forEach(runway => {\n            this.featuresContext.strokeStyle = _config_colours__WEBPACK_IMPORTED_MODULE_0__.COLOURS.GREY;\n            this.featuresContext.fillStyle = _config_colours__WEBPACK_IMPORTED_MODULE_0__.COLOURS.GREY_TRANSPARENT\n\n            const spikiness = 15\n            const spread = 20;\n\n            // Feathers\n            this.featuresContext.lineWidth = 1;\n            this.featuresContext.setLineDash([4]);\n            this.featuresContext.beginPath();\n            this.featuresContext.moveTo(runway.start.ILS.innerMarker.x, runway.start.ILS.innerMarker.y)\n            this.featuresContext.lineTo(runway.start.ILS.outerMarker.x - spikiness, runway.start.ILS.outerMarker.y - spread)\n            this.featuresContext.lineTo(runway.start.ILS.outerMarker.x, runway.start.ILS.outerMarker.y)\n            this.featuresContext.lineTo(runway.start.ILS.outerMarker.x - spikiness, runway.start.ILS.outerMarker.y + spread)\n            this.featuresContext.lineTo(runway.start.ILS.innerMarker.x, runway.start.ILS.innerMarker.y)\n\n            this.featuresContext.moveTo(runway.end.ILS.innerMarker.x, runway.end.ILS.innerMarker.y)\n            this.featuresContext.lineTo(runway.end.ILS.outerMarker.x + spikiness, runway.end.ILS.outerMarker.y - spread)\n            this.featuresContext.lineTo(runway.end.ILS.outerMarker.x, runway.end.ILS.outerMarker.y)\n            this.featuresContext.lineTo(runway.end.ILS.outerMarker.x + spikiness, runway.end.ILS.outerMarker.y + spread)\n            this.featuresContext.lineTo(runway.end.ILS.innerMarker.x, runway.end.ILS.innerMarker.y)\n            this.featuresContext.stroke();\n\n            // Landing command limits indicator\n            this.featuresContext.lineWidth = 2;\n            this.featuresContext.setLineDash([1]);\n            this.featuresContext.beginPath();\n            this.featuresContext.moveTo(runway.start.ILS.outerMarker.x, runway.start.ILS.outerMarker.y)\n            this.featuresContext.lineTo(runway.start.ILS.innerMarker.x - _config_constants__WEBPACK_IMPORTED_MODULE_1__.ILS_MIN_X, runway.start.ILS.innerMarker.y)\n            this.featuresContext.moveTo(runway.end.ILS.outerMarker.x, runway.end.ILS.outerMarker.y)\n            this.featuresContext.lineTo(runway.end.ILS.innerMarker.x + _config_constants__WEBPACK_IMPORTED_MODULE_1__.ILS_MIN_X, runway.end.ILS.innerMarker.y)\n            this.featuresContext.stroke();\n        })\n    }\n\n    _drawMapLines = (mapLines) => {\n        mapLines.forEach(line => {\n            this.featuresContext.strokeStyle = _config_colours__WEBPACK_IMPORTED_MODULE_0__.COLOURS.WHITE_TRANSPARENT;\n            this.featuresContext.lineWidth = 1;\n            this.featuresContext.setLineDash([line.dashes]);\n            this.featuresContext.beginPath();\n            this.featuresContext.moveTo(line.start.x, line.start.y);\n            this.featuresContext.lineTo(line.end.x, line.end.y);\n            this.featuresContext.stroke();\n        })\n    }\n\n    _drawMapCrosses = (crosses) => {\n        crosses.forEach(cross => {\n            this.featuresContext.strokeStyle = _config_colours__WEBPACK_IMPORTED_MODULE_0__.COLOURS.WHITE;\n            this.featuresContext.lineWidth = 2;\n            this.featuresContext.setLineDash([]);\n            this.featuresContext.beginPath();\n            this.featuresContext.moveTo(cross.x - 4, cross.y);\n            this.featuresContext.lineTo(cross.x + 4, cross.y);\n            this.featuresContext.moveTo(cross.x, cross.y - 4);\n            this.featuresContext.lineTo(cross.x, cross.y + 4);\n            this.featuresContext.stroke();\n        })\n    }\n\n    _drawTallStructures = (structures) => {\n        structures.forEach(structure => {\n            this.featuresContext.fillStyle = _config_colours__WEBPACK_IMPORTED_MODULE_0__.COLOURS.WHITE;\n            this.featuresContext.lineWidth = 1;\n            this.featuresContext.setLineDash([]);\n            this.featuresContext.beginPath();\n            this.featuresContext.moveTo(structure.x - 5, structure.y + 5);\n            this.featuresContext.lineTo(structure.x, structure.y - 5);\n            this.featuresContext.lineTo(structure.x + 5, structure.y + 5);\n            this.featuresContext.closePath();\n            this.featuresContext.fill();\n\n            this.featuresContext.font = \"12px Courier New\";\n            this.featuresContext.beginPath();\n            this.featuresContext.fillText(structure.label, structure.x + 5, structure.y - 5);\n        })\n    }\n\n    _drawAeroplanePosition = (aeroplane) => {\n        if (aeroplane.is([_Domain_Aeroplane_aeroplaneStates__WEBPACK_IMPORTED_MODULE_3__.HOLDING_SHORT, _Domain_Aeroplane_aeroplaneStates__WEBPACK_IMPORTED_MODULE_3__.TAKING_OFF, _Domain_Aeroplane_aeroplaneStates__WEBPACK_IMPORTED_MODULE_3__.FLYING, _Domain_Aeroplane_aeroplaneStates__WEBPACK_IMPORTED_MODULE_3__.HOLDING_PATTERN, _Domain_Aeroplane_aeroplaneStates__WEBPACK_IMPORTED_MODULE_3__.LANDING, _Domain_Aeroplane_aeroplaneStates__WEBPACK_IMPORTED_MODULE_3__.GOING_AROUND])) {\n            if (aeroplane.breachingProximity) {\n                this.aeroplaneContext.strokeStyle = _config_colours__WEBPACK_IMPORTED_MODULE_0__.COLOURS.RED;\n            } else {\n                this.aeroplaneContext.strokeStyle = _config_colours__WEBPACK_IMPORTED_MODULE_0__.COLOURS.YELLOW;\n            }\n            // Construct diamond shape\n            const radius = 6\n            this.aeroplaneContext.lineWidth = 1;\n            this.aeroplaneContext.beginPath();\n            this.aeroplaneContext.moveTo(aeroplane.x, aeroplane.y - radius)\n            this.aeroplaneContext.lineTo(aeroplane.x + radius, aeroplane.y)\n            this.aeroplaneContext.lineTo(aeroplane.x, aeroplane.y + radius)\n            this.aeroplaneContext.lineTo(aeroplane.x - radius, aeroplane.y)\n            this.aeroplaneContext.closePath()\n            this.aeroplaneContext.stroke();\n        }\n    }\n\n    _drawAeroplaneSpeedTail = (aeroplane) => {\n        if (aeroplane.breachingProximity) {\n            this.aeroplaneContext.strokeStyle = _config_colours__WEBPACK_IMPORTED_MODULE_0__.COLOURS.RED;\n        } else {\n            this.aeroplaneContext.strokeStyle = _config_colours__WEBPACK_IMPORTED_MODULE_0__.COLOURS.YELLOW;\n        }\n        for (let x = 0; x < aeroplane.lastPositions.length - 2; x += 2) {\n            let markerX = aeroplane.lastPositions[x].x\n            let markerY = aeroplane.lastPositions[x].y\n            this.aeroplaneContext.beginPath();\n            const offset = 5\n            this.aeroplaneContext.moveTo(markerX - offset, markerY + offset)\n            this.aeroplaneContext.lineTo(markerX + offset / 1.2, markerY - offset / 1.2)\n            this.aeroplaneContext.stroke();\n        }\n    }\n\n    _drawSpeedLabel = (aeroplane) => {\n        if (aeroplane.isNot([_Domain_Aeroplane_aeroplaneStates__WEBPACK_IMPORTED_MODULE_3__.READY_TO_TAXI, _Domain_Aeroplane_aeroplaneStates__WEBPACK_IMPORTED_MODULE_3__.TAXIING])) {\n            if (aeroplane.breachingProximity) {\n                this.aeroplaneContext.fillStyle = _config_colours__WEBPACK_IMPORTED_MODULE_0__.COLOURS.RED;\n            } else {\n                this.aeroplaneContext.fillStyle = _config_colours__WEBPACK_IMPORTED_MODULE_0__.COLOURS.MINT;\n            }\n            this.aeroplaneContext.font = \"bold 12px Courier New\";\n            this.aeroplaneContext.beginPath();\n            this.aeroplaneContext.fillText(`${(0,_utils_maths__WEBPACK_IMPORTED_MODULE_2__.round)(aeroplane.speed, 0)}`, aeroplane.x - 20, aeroplane.y - 20);\n        }\n    }\n\n    _drawHeadingLabel = (aeroplane) => {\n        if (aeroplane.isNot([_Domain_Aeroplane_aeroplaneStates__WEBPACK_IMPORTED_MODULE_3__.READY_TO_TAXI, _Domain_Aeroplane_aeroplaneStates__WEBPACK_IMPORTED_MODULE_3__.TAXIING])) {\n            if (aeroplane.breachingProximity) {\n                this.aeroplaneContext.fillStyle = _config_colours__WEBPACK_IMPORTED_MODULE_0__.COLOURS.RED;\n            } else {\n                this.aeroplaneContext.fillStyle = _config_colours__WEBPACK_IMPORTED_MODULE_0__.COLOURS.YELLOW;\n            }\n            this.aeroplaneContext.font = \"bold 12px Courier New\";\n            this.aeroplaneContext.beginPath();\n            const speedLabelWidth = this.aeroplaneContext.measureText(`${(0,_utils_maths__WEBPACK_IMPORTED_MODULE_2__.round)(aeroplane.speed, 0)}`).width;\n            this.aeroplaneContext.fillText(`${(0,_utils_maths__WEBPACK_IMPORTED_MODULE_2__.round)(aeroplane.heading, 0)}`, aeroplane.x - 20 + speedLabelWidth + 5, aeroplane.y - 20);\n        }\n    }\n\n    _drawAltitudeLabel = (aeroplane) => {\n        if (aeroplane.isNot([_Domain_Aeroplane_aeroplaneStates__WEBPACK_IMPORTED_MODULE_3__.READY_TO_TAXI, _Domain_Aeroplane_aeroplaneStates__WEBPACK_IMPORTED_MODULE_3__.TAXIING])) {\n            if (aeroplane.breachingProximity) {\n                this.aeroplaneContext.fillStyle = _config_colours__WEBPACK_IMPORTED_MODULE_0__.COLOURS.RED;\n            } else {\n                this.aeroplaneContext.fillStyle = _config_colours__WEBPACK_IMPORTED_MODULE_0__.COLOURS.MINT;\n            }\n            this.aeroplaneContext.font = \"bold 12px Courier New\";\n            this.aeroplaneContext.beginPath();\n            const headingLabelWidth = this.aeroplaneContext.measureText(`${(0,_utils_maths__WEBPACK_IMPORTED_MODULE_2__.round)(aeroplane.heading, 0)}`).width;\n            const speedLabelWidth = this.aeroplaneContext.measureText(`${(0,_utils_maths__WEBPACK_IMPORTED_MODULE_2__.round)(aeroplane.speed, 0)}`).width;\n            this.aeroplaneContext.fillText(`${Math.round(aeroplane.altitude / 100)}`, aeroplane.x - 20 + (headingLabelWidth + 5) + (speedLabelWidth + 5), aeroplane.y - 20);\n        }\n    }\n\n    _drawCallSignLabel = (aeroplane) => {\n        if (aeroplane.isNot([_Domain_Aeroplane_aeroplaneStates__WEBPACK_IMPORTED_MODULE_3__.READY_TO_TAXI, _Domain_Aeroplane_aeroplaneStates__WEBPACK_IMPORTED_MODULE_3__.TAXIING])) {\n            if (aeroplane.breachingProximity) {\n                this.aeroplaneContext.fillStyle = _config_colours__WEBPACK_IMPORTED_MODULE_0__.COLOURS.RED;\n            } else {\n                this.aeroplaneContext.fillStyle = _config_colours__WEBPACK_IMPORTED_MODULE_0__.COLOURS.MINT;\n            }\n            this.aeroplaneContext.font = \"bold 12px Courier New\";\n            this.aeroplaneContext.beginPath();\n            this.aeroplaneContext.fillText(aeroplane.callSign, aeroplane.x - 20, aeroplane.y - 30);\n        }\n    }\n\n    _drawFinalTargetLabel = (aeroplane) => {\n        if (aeroplane.isNot([_Domain_Aeroplane_aeroplaneStates__WEBPACK_IMPORTED_MODULE_3__.READY_TO_TAXI, _Domain_Aeroplane_aeroplaneStates__WEBPACK_IMPORTED_MODULE_3__.TAXIING])) {\n            if (aeroplane.finalTarget) {\n                this.aeroplaneContext.fillStyle = _config_colours__WEBPACK_IMPORTED_MODULE_0__.COLOURS.PURPLE;\n                this.aeroplaneContext.font = \"bold 12px Courier New\";\n\n                const callSignWidth = this.featuresContext.measureText(aeroplane.callSign).width;\n\n                this.aeroplaneContext.beginPath();\n                this.aeroplaneContext.fillText(aeroplane.finalTarget, aeroplane.x - 10 + callSignWidth, aeroplane.y - 30);\n            }\n        }\n    }\n\n    _drawProjectedPath = (aeroplane) => {\n        if (this.interfaceController.projectedPathsOn && aeroplane.is([_Domain_Aeroplane_aeroplaneStates__WEBPACK_IMPORTED_MODULE_3__.TAKING_OFF, _Domain_Aeroplane_aeroplaneStates__WEBPACK_IMPORTED_MODULE_3__.FLYING, _Domain_Aeroplane_aeroplaneStates__WEBPACK_IMPORTED_MODULE_3__.HOLDING_PATTERN, _Domain_Aeroplane_aeroplaneStates__WEBPACK_IMPORTED_MODULE_3__.GOING_AROUND])) {\n            if (aeroplane.nextPositions.length > 0) {\n                const firstX = aeroplane.nextPositions[0].x\n                const firstY = aeroplane.nextPositions[0].y\n                const lastX = aeroplane.nextPositions[aeroplane.nextPositions.length - 1].x\n                const lastY = aeroplane.nextPositions[aeroplane.nextPositions.length - 1].y\n\n                const gradient = this.aeroplaneContext.createLinearGradient(firstX, firstY, lastX, lastY);\n                gradient.addColorStop(0, _config_colours__WEBPACK_IMPORTED_MODULE_0__.COLOURS.GREY);\n                gradient.addColorStop(1, _config_colours__WEBPACK_IMPORTED_MODULE_0__.COLOURS.GREY_TRANSPARENT);\n\n                this.aeroplaneContext.strokeStyle = gradient;\n                this.aeroplaneContext.lineWidth = 2;\n\n                // Projected path\n                this.aeroplaneContext.beginPath();\n                this.aeroplaneContext.moveTo(aeroplane.nextPositions[0].x, aeroplane.nextPositions[0].y)\n                aeroplane.nextPositions.forEach(position => {\n                    this.aeroplaneContext.lineTo(position.x, position.y)\n                })\n                this.aeroplaneContext.stroke();\n\n                // Markers\n                aeroplane.nextPositions.forEach(position => {\n                    if (position.markers) {\n                        position.markers.forEach(marker => {\n                            this._drawMarker(position.x, position.y, position.headingAtPoint, marker.type)\n                        })\n                    }\n                })\n            }\n        }\n    }\n\n    _drawMarker = (x, y, heading, type) => {\n        if (type === 'speed') {\n            this.aeroplaneContext.strokeStyle = _config_colours__WEBPACK_IMPORTED_MODULE_0__.COLOURS.ORANGE;\n        } else if (type === 'altitude') {\n            this.aeroplaneContext.strokeStyle = _config_colours__WEBPACK_IMPORTED_MODULE_0__.COLOURS.MINT;\n        } else {\n            this.aeroplaneContext.strokeStyle = _config_colours__WEBPACK_IMPORTED_MODULE_0__.COLOURS.RED;\n        }\n\n        const perpendicularHeadingRight = (heading + 90) % 360\n        const perpendicularHeadingLeft = (perpendicularHeadingRight + 180) % 360\n\n        const perpendicularHeadingRightRadians = (0,_utils_maths__WEBPACK_IMPORTED_MODULE_2__.toRadians)(perpendicularHeadingRight)\n        const perpendicularHeadingLeftRadians = (0,_utils_maths__WEBPACK_IMPORTED_MODULE_2__.toRadians)(perpendicularHeadingLeft)\n\n        const markerWidth = 5\n\n        const rightX = x + markerWidth * Math.sin(perpendicularHeadingRightRadians);\n        const rightY = y - markerWidth * Math.cos(perpendicularHeadingRightRadians);\n\n        const leftX = x + markerWidth * Math.sin(perpendicularHeadingLeftRadians);\n        const leftY = y - markerWidth * Math.cos(perpendicularHeadingLeftRadians);\n\n        // debugger\n\n        this.aeroplaneContext.lineWidth = 2;\n        this.aeroplaneContext.beginPath();\n\n        this.aeroplaneContext.moveTo(rightX, rightY)\n        this.aeroplaneContext.lineTo(leftX, leftY)\n        this.aeroplaneContext.stroke();\n    }\n\n    _drawRangeIndicators = (mapBoundaries) => {\n        this.featuresContext.strokeStyle = _config_colours__WEBPACK_IMPORTED_MODULE_0__.COLOURS.WHITE_TRANSPARENT_MAX;\n        this.featuresContext.lineWidth = 2;\n        [100, 200, 300, 400, 500, 600, 700].forEach(radius => {\n            this.featuresContext.beginPath();\n            this.featuresContext.arc(0.5 * mapBoundaries.maxX, 0.508 * mapBoundaries.maxY, radius, 0, Math.PI * 2, false);\n            this.featuresContext.stroke();\n        })\n        this.featuresContext.strokeStyle = _config_colours__WEBPACK_IMPORTED_MODULE_0__.COLOURS.GREY;\n    }\n\n    _drawVORs = (waypoints) => {\n        for (let x = 0; x < waypoints.length; x++) {\n            const waypoint = waypoints[x]\n            if (waypoint.type === \"VOR\") {\n                this.featuresContext.strokeStyle = _config_colours__WEBPACK_IMPORTED_MODULE_0__.COLOURS.WHITE;\n                this.featuresContext.lineWidth = 2;\n                this.featuresContext.setLineDash([2]);\n                this.featuresContext.beginPath();\n                this.featuresContext.arc(waypoint.x, waypoint.y, 12, 0, Math.PI * 2, false);\n                this.featuresContext.stroke();\n\n                this.featuresContext.fillStyle = _config_colours__WEBPACK_IMPORTED_MODULE_0__.COLOURS.WHITE;\n                this.featuresContext.beginPath();\n                this.featuresContext.arc(waypoint.x, waypoint.y, 2, 0, Math.PI * 2, false);\n                this.featuresContext.fill();\n\n                this.featuresContext.fillStyle = _config_colours__WEBPACK_IMPORTED_MODULE_0__.COLOURS.WHITE;\n                this.featuresContext.font = \"14px Courier New\";\n                this.featuresContext.beginPath();\n                this.featuresContext.fillText(waypoint.id, waypoint.x - 12, waypoint.y - 20);\n            }\n        }\n    }\n\n    _drawTerrain = (terrain) => {\n        terrain.waterBodies.forEach(river => {\n            river.borders.forEach(border => {\n                this.featuresContext.fillStyle = _config_colours__WEBPACK_IMPORTED_MODULE_0__.COLOURS.WHITE_TRANSPARENT_MAX;\n                this.featuresContext.lineWidth = 1;\n                this.featuresContext.beginPath();\n                this.featuresContext.moveTo(border[0].x, border[0].y);\n                border.forEach(point => {\n                    this.featuresContext.lineTo(point.x, point.y);\n                })\n                this.featuresContext.closePath()\n                this.featuresContext.fill();\n            })\n        })\n    }\n\n    drawWeather = () => {\n        this.weatherService.clouds.clouds.forEach(cloud => {\n            const pattern = document.createElement(\"canvas\");\n            pattern.classList.add(\"weather\")\n            pattern.width = 10;\n            pattern.height = 10;\n            const patternContext = pattern.getContext('2d');\n\n            if (cloud.points[0].radius < 60) {\n                cloud.green += 1\n            }\n            if (cloud.points[0].radius < 80) {\n                cloud.red -= 2\n            }\n            if (cloud.points[0].radius < 100) {\n                cloud.green += 1\n            }\n\n            cloud.red = Math.max(128, cloud.red)\n            cloud.green = Math.min(cloud.green, 212)\n            patternContext.fillStyle = `rgba(${cloud.red}, ${cloud.green}, 0, 0.8)`\n\n            patternContext.arc(5, 5, 1, 0, Math.PI * 2, false);\n            patternContext.fill();\n\n            this.aeroplaneContext.fillStyle = patternContext.createPattern(pattern, \"repeat\")\n            // this.aeroplaneContext.strokeStyle = COLOURS.PURPLE\n            this.aeroplaneContext.lineWidth = 1\n            this.aeroplaneContext.beginPath()\n\n            // Border\n            cloud.points.forEach((point, index) => {\n                if (index !== 0) {\n                    let x = cloud.x + point.radius * Math.sin((0,_utils_maths__WEBPACK_IMPORTED_MODULE_2__.toRadians)(point.angle));\n                    let y = cloud.y - point.radius * Math.cos((0,_utils_maths__WEBPACK_IMPORTED_MODULE_2__.toRadians)(point.angle));\n                    this.aeroplaneContext.lineTo(x, y)\n                }\n            })\n\n            this.aeroplaneContext.closePath()\n            this.aeroplaneContext.fill()\n            // this.aeroplaneContext.stroke()\n        })\n    }\n}\n\n\n//# sourceURL=webpack://atc/./src/Interface/UIController.js?");

/***/ }),

/***/ "./src/Interface/elements.js":
/*!***********************************!*\
  !*** ./src/Interface/elements.js ***!
  \***********************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"div\": () => (/* binding */ div),\n/* harmony export */   \"element\": () => (/* binding */ element),\n/* harmony export */   \"p\": () => (/* binding */ p)\n/* harmony export */ });\nconst element = (tag, classes, id) => {\n    const element = document.createElement(tag)\n    classes.forEach(cls => {\n        element.classList.add(cls)\n    })\n    element.setAttribute('id', id)\n    return element\n}\n\nconst div = (classes, id) => {\n    return element(\"div\", classes, id)\n}\n\nconst p = (classes, id) => {\n    return element(\"p\", classes, id)\n}\n\n//# sourceURL=webpack://atc/./src/Interface/elements.js?");

/***/ }),

/***/ "./src/States/Dynamic.js":
/*!*******************************!*\
  !*** ./src/States/Dynamic.js ***!
  \*******************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"Dynamic\": () => (/* binding */ Dynamic)\n/* harmony export */ });\n/* harmony import */ var _config_aircraft__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../config/aircraft */ \"./src/config/aircraft.js\");\n/* harmony import */ var _utils_maths__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../utils/maths */ \"./src/utils/maths.js\");\n/* harmony import */ var _Domain_Aeroplane_Aeroplane__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../Domain/Aeroplane/Aeroplane */ \"./src/Domain/Aeroplane/Aeroplane.js\");\n/* harmony import */ var _GameState__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./GameState */ \"./src/States/GameState.js\");\n/* harmony import */ var _config_constants__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../config/constants */ \"./src/config/constants.js\");\n/* harmony import */ var _Domain_Aeroplane_aeroplaneStates__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../Domain/Aeroplane/aeroplaneStates */ \"./src/Domain/Aeroplane/aeroplaneStates.js\");\n/* harmony import */ var _utils_selectors__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../utils/selectors */ \"./src/utils/selectors.js\");\n\n\n\n\n\n\n\n\n\nclass Dynamic extends _GameState__WEBPACK_IMPORTED_MODULE_3__.GameState {\n    constructor(clearAircraftOnStart = false) {\n        super();\n        this.clearAircraftOnStart = clearAircraftOnStart\n        this.machine = undefined\n        this.initialised = false\n\n        this.num_handled_interval = 4\n        this.total_handled_at_last_difficulty_change = 0\n\n        this.difficultyScore = 0\n        this.currentDifficultyConfig = undefined\n\n        this.targetRunways = (0,_utils_selectors__WEBPACK_IMPORTED_MODULE_6__.randomChoice)([[\"9L\", \"9R\"], [\"27L\", \"27R\"], [\"9L\"], [\"9R\"], [\"27L\"], [\"27R\"]])\n        this.targetRunwayPrefix = ''\n\n    }\n\n    setMachine = (machine) => {\n        this.machine = machine\n        this.init()\n    }\n\n    init = () => {\n        this.machine.statsService.resetInstanceStats()\n        this.machine.weather.dynamic()\n        if (!this.initialised && this.clearAircraftOnStart) {\n            this.machine.clear()\n            this.initialised = true\n        } else {\n            this.initialised = true\n        }\n    }\n\n    tick = () => {\n        this.shouldDetermineDifficulty() && this.determineDifficulty()\n\n        this.currentDifficultyConfig.determineLandingRunways()\n        this.currentDifficultyConfig.updateLandingTargets()\n\n        if (this.currentDifficultyConfig.arrivalSpawnInterval && this.ticks % this.currentDifficultyConfig.arrivalSpawnInterval === 0) {\n            this.initArrival((0,_utils_selectors__WEBPACK_IMPORTED_MODULE_6__.randomChoice)(this.currentDifficultyConfig.targetRunways))\n        }\n\n        if (this.ticks !== 0 && this.currentDifficultyConfig.departureSpawnInterval && this.ticks % this.currentDifficultyConfig.departureSpawnInterval === 0) {\n            this.initDeparture((0,_utils_selectors__WEBPACK_IMPORTED_MODULE_6__.randomChoice)(this.currentDifficultyConfig.targetWaypoints))\n        }\n\n        this.ticks += 1\n    }\n\n    shouldDetermineDifficulty = () => {\n        if (this.ticks === 0) {\n            return true\n        } else if (this.ticks !== 0) {\n            const totalHandled = this.machine.statsService.instanceComplete()\n            if (totalHandled > this.total_handled_at_last_difficulty_change) {\n                if (totalHandled > 0 && totalHandled % this.num_handled_interval === 0) {\n                    this.total_handled_at_last_difficulty_change = totalHandled\n                    return true\n                }\n            }\n        }\n        return false\n    }\n\n    determineDifficulty = () => {\n        if (this.userPerformingWell()) {\n            this.difficultyScore = Math.min(this.difficultyScore + 1, 11)\n            this.num_handled_interval = 4\n        } else {\n            this.difficultyScore = Math.max(0, this.difficultyScore - 1)\n            this.num_handled_interval = 2\n        }\n        this.currentDifficultyConfig = this.difficultyConfig(this.difficultyScore)\n    }\n\n    userPerformingWell = () => {\n        return this.machine.statsService.correctlyLandedPercentage() > 90\n            && this.machine.statsService.correctlyDepartedPercentage() > 90\n            && this.machine.statsService.lostPercentage() < 10\n    }\n\n    difficultyConfig = (difficultyScore) => {\n        const difficultyConfigMap = {\n            0: {\n                arrivalSpawnInterval: 170,\n                departureSpawnInterval: 140,\n                speedRange: [170, 200],\n                altitudeRange: [5000, 7000],\n                targetRunways: null,\n                targetWaypoints: null,\n                arrivalSpawnLocations: [\n                    {x: 1, y: 0.2 * this.map.mapBoundaries.maxY, heading: 90},\n                    {x: this.map.mapBoundaries.maxX, y: 0.8 * this.map.mapBoundaries.maxY, heading: 270},\n                ],\n                updateLandingTargets: () => {\n                },\n                determineLandingRunways: () => {\n                }\n            },\n            1: {\n                arrivalSpawnInterval: 150,\n                departureSpawnInterval: 120,\n                speedRange: [200, 210],\n                altitudeRange: [6000, 9000],\n                targetRunways: null,\n                targetWaypoints: null,\n                arrivalSpawnLocations: [\n                    {x: 1, y: 0.2 * this.map.mapBoundaries.maxY, heading: 90},\n                    {x: 1, y: 0.8 * this.map.mapBoundaries.maxY, heading: 90},\n\n                    {x: this.map.mapBoundaries.maxX, y: 0.2 * this.map.mapBoundaries.maxY, heading: 270},\n                    {x: this.map.mapBoundaries.maxX, y: 0.8 * this.map.mapBoundaries.maxY, heading: 270},\n                ],\n                updateLandingTargets: () => {\n                },\n                determineLandingRunways: () => {\n                },\n            },\n            2: {\n                arrivalSpawnInterval: 140,\n                departureSpawnInterval: 110,\n                speedRange: [210, 230],\n                altitudeRange: [7000, 10000],\n                targetRunways: null,\n                targetWaypoints: null,\n                arrivalSpawnLocations: [\n                    {x: 1, y: 0.2 * this.map.mapBoundaries.maxY, heading: 90},\n                    {x: 1, y: 0.8 * this.map.mapBoundaries.maxY, heading: 90},\n                    {x: 0.2 * this.map.mapBoundaries.maxX, y: this.map.mapBoundaries.maxY, heading: 350},\n\n                    {x: this.map.mapBoundaries.maxX, y: 0.2 * this.map.mapBoundaries.maxY, heading: 270},\n                    {x: this.map.mapBoundaries.maxX, y: 0.8 * this.map.mapBoundaries.maxY, heading: 270},\n                ],\n                updateLandingTargets: () => {\n                },\n                determineLandingRunways: () => {\n                },\n            },\n            3: {\n                arrivalSpawnInterval: 110,\n                departureSpawnInterval: 100,\n                speedRange: [220, 240],\n                altitudeRange: [7000, 10000],\n                targetRunways: null,\n                targetWaypoints: [\"LAM\", \"BPK\", \"MAY\", \"DET\"],\n                arrivalSpawnLocations: [\n                    {x: 1, y: 0.2 * this.map.mapBoundaries.maxY, heading: 90},\n                    {x: 1, y: 0.8 * this.map.mapBoundaries.maxY, heading: 90},\n                    {x: 0.2 * this.map.mapBoundaries.maxX, y: this.map.mapBoundaries.maxY, heading: 350},\n\n                    {x: this.map.mapBoundaries.maxX, y: 0.2 * this.map.mapBoundaries.maxY, heading: 270},\n                    {x: this.map.mapBoundaries.maxX, y: 0.8 * this.map.mapBoundaries.maxY, heading: 270},\n                ],\n                updateLandingTargets: () => {\n                },\n                determineLandingRunways: () => {\n                },\n            },\n            4: {\n                arrivalSpawnInterval: 100,\n                departureSpawnInterval: 90,\n                speedRange: [240, 260],\n                altitudeRange: [10000, 14000],\n                targetRunways: null,\n                targetWaypoints: (0,_utils_selectors__WEBPACK_IMPORTED_MODULE_6__.randomChoice)([\n                    [\"LAM\", \"BPK\", \"MAY\", \"DET\"],\n                    [\"OCK\", \"EPM\", \"MAY\"],\n                    [\"CPT\", \"CHT\"],\n                ]),\n                arrivalSpawnLocations: [\n                    {x: 1, y: 0.2 * this.map.mapBoundaries.maxY, heading: 90},\n                    {x: 1, y: 0.8 * this.map.mapBoundaries.maxY, heading: 90},\n                    {x: 0.2 * this.map.mapBoundaries.maxX, y: this.map.mapBoundaries.maxY, heading: 350},\n\n                    {x: this.map.mapBoundaries.maxX, y: 0.2 * this.map.mapBoundaries.maxY, heading: 270},\n                    {x: this.map.mapBoundaries.maxX, y: 0.8 * this.map.mapBoundaries.maxY, heading: 270},\n                ],\n                updateLandingTargets: () => {\n                },\n                determineLandingRunways: () => {\n                },\n            },\n            5: {\n                arrivalSpawnInterval: 100,\n                departureSpawnInterval: 90,\n                speedRange: [240, 280],\n                altitudeRange: [12000, 16000],\n                targetRunways: null,\n                targetWaypoints: (0,_utils_selectors__WEBPACK_IMPORTED_MODULE_6__.randomChoice)([\n                    [\"LAM\", \"BPK\", \"MAY\", \"DET\"],\n                    [\"OCK\", \"EPM\", \"MAY\"],\n                    [\"CPT\", \"CHT\"],\n                ]),\n                arrivalSpawnLocations: [\n                    {x: 1, y: 0.2 * this.map.mapBoundaries.maxY, heading: 90},\n                    {x: 1, y: 0.8 * this.map.mapBoundaries.maxY, heading: 90},\n\n                    {x: 0.2 * this.map.mapBoundaries.maxX, y: this.map.mapBoundaries.maxY, heading: 350},\n                    {x: 0.5 * this.map.mapBoundaries.maxX, y: this.map.mapBoundaries.maxY, heading: 290},\n\n                    {x: this.map.mapBoundaries.maxX, y: 0.2 * this.map.mapBoundaries.maxY, heading: 270},\n                    {x: this.map.mapBoundaries.maxX, y: 0.8 * this.map.mapBoundaries.maxY, heading: 270},\n                ],\n                updateLandingTargets: () => {\n                },\n                determineLandingRunways: () => {\n                },\n            },\n            6: {\n                arrivalSpawnInterval: 100,\n                departureSpawnInterval: 90,\n                speedRange: [240, 280],\n                altitudeRange: [12000, 16000],\n                targetRunways: [\"9L\", \"9R\", \"27L\", \"27R\"],\n                targetWaypoints: (0,_utils_selectors__WEBPACK_IMPORTED_MODULE_6__.randomChoice)([\n                    [\"LAM\", \"BPK\", \"MAY\", \"DET\"],\n                    [\"OCK\", \"EPM\", \"MAY\"],\n                    [\"CPT\", \"CHT\"],\n                ]),\n                arrivalSpawnLocations: [\n                    {x: 1, y: 0.2 * this.map.mapBoundaries.maxY, heading: 90},\n                    {x: 1, y: 0.8 * this.map.mapBoundaries.maxY, heading: 90},\n\n                    {x: 0.2 * this.map.mapBoundaries.maxX, y: this.map.mapBoundaries.maxY, heading: 350},\n                    {x: 0.5 * this.map.mapBoundaries.maxX, y: this.map.mapBoundaries.maxY, heading: 290},\n\n                    {x: this.map.mapBoundaries.maxX, y: 0.2 * this.map.mapBoundaries.maxY, heading: 270},\n                    {x: this.map.mapBoundaries.maxX, y: 0.8 * this.map.mapBoundaries.maxY, heading: 270},\n                ],\n                updateLandingTargets: () => {\n                },\n                determineLandingRunways: () => {\n                },\n            },\n            7: {\n                arrivalSpawnInterval: 120,\n                departureSpawnInterval: 110,\n                speedRange: [240, 280],\n                altitudeRange: [12000, 16000],\n                targetRunways: (0,_utils_selectors__WEBPACK_IMPORTED_MODULE_6__.randomChoice)([[\"9L\", \"9R\"], [\"27L\", \"27R\"], [\"9L\"], [\"9R\"], [\"27L\"], [\"27R\"]]),\n                targetWaypoints: (0,_utils_selectors__WEBPACK_IMPORTED_MODULE_6__.randomChoice)([\n                    [\"LAM\", \"BPK\", \"MAY\", \"DET\"],\n                    [\"OCK\", \"EPM\", \"MAY\"],\n                    [\"CPT\", \"CHT\"],\n                ]),\n                arrivalSpawnLocations: [\n                    {x: 1, y: 0.2 * this.map.mapBoundaries.maxY, heading: 90},\n                    {x: 1, y: 0.8 * this.map.mapBoundaries.maxY, heading: 90},\n\n                    {x: 0.2 * this.map.mapBoundaries.maxX, y: this.map.mapBoundaries.maxY, heading: 350},\n                    {x: 0.5 * this.map.mapBoundaries.maxX, y: this.map.mapBoundaries.maxY, heading: 290},\n\n                    {x: this.map.mapBoundaries.maxX, y: 0.2 * this.map.mapBoundaries.maxY, heading: 270},\n                    {x: this.map.mapBoundaries.maxX, y: 0.8 * this.map.mapBoundaries.maxY, heading: 270},\n                ],\n                updateLandingTargets: () => {\n                },\n                determineLandingRunways: () => {\n                },\n            },\n            8: {\n                arrivalSpawnInterval: 120,\n                departureSpawnInterval: 110,\n                speedRange: [240, 280],\n                altitudeRange: [12000, 16000],\n                targetRunways: (0,_utils_selectors__WEBPACK_IMPORTED_MODULE_6__.randomChoice)([[\"9L\", \"9R\"], [\"27L\", \"27R\"], [\"9L\"], [\"9R\"], [\"27L\"], [\"27R\"]]),\n                targetWaypoints: (0,_utils_selectors__WEBPACK_IMPORTED_MODULE_6__.randomChoice)([\n                    [\"LAM\", \"BPK\", \"MAY\", \"DET\", \"GWC\"],\n                    [\"OCK\", \"EPM\", \"MAY\"],\n                    [\"CPT\", \"CHT\"],\n                    [\"LAM\"],\n                    [\"DET\"],\n                    [\"GWC\"],\n                ]),\n                arrivalSpawnLocations: [\n                    {x: 1, y: 0.2 * this.map.mapBoundaries.maxY, heading: 90},\n                    {x: 1, y: 0.8 * this.map.mapBoundaries.maxY, heading: 90},\n\n                    {x: 0.2 * this.map.mapBoundaries.maxX, y: this.map.mapBoundaries.maxY, heading: 350},\n                    {x: 0.5 * this.map.mapBoundaries.maxX, y: this.map.mapBoundaries.maxY, heading: 290},\n                    {x: 0.7 * this.map.mapBoundaries.maxX, y: this.map.mapBoundaries.maxY, heading: 360},\n\n                    {x: this.map.mapBoundaries.maxX, y: 0.2 * this.map.mapBoundaries.maxY, heading: 270},\n                    {x: this.map.mapBoundaries.maxX, y: 0.8 * this.map.mapBoundaries.maxY, heading: 270},\n                ],\n                updateLandingTargets: () => {\n                    this.updateTargets()\n                },\n                determineLandingRunways: () => {\n                    this.determineLandingRunwayDirections()\n                },\n            },\n            9: {\n                arrivalSpawnInterval: 120,\n                departureSpawnInterval: 110,\n                speedRange: [240, 280],\n                altitudeRange: [12000, 16000],\n                targetRunways: (0,_utils_selectors__WEBPACK_IMPORTED_MODULE_6__.randomChoice)([[\"9L\", \"9R\"], [\"27L\", \"27R\"], [\"9L\"], [\"9R\"], [\"27L\"], [\"27R\"]]),\n                targetWaypoints: (0,_utils_selectors__WEBPACK_IMPORTED_MODULE_6__.randomChoice)([\n                    [\"LAM\", \"BPK\", \"MAY\", \"DET\", \"GWC\"],\n                    [\"OCK\", \"EPM\", \"MAY\"],\n                    [\"CPT\", \"CHT\"],\n                    [\"LAM\"],\n                    [\"DET\"],\n                    [\"GWC\"],\n                ]),\n                arrivalSpawnLocations: [\n                    {x: 1, y: 0.2 * this.map.mapBoundaries.maxY, heading: 90},\n                    {x: 1, y: 0.8 * this.map.mapBoundaries.maxY, heading: 90},\n\n                    {x: 0.2 * this.map.mapBoundaries.maxX, y: this.map.mapBoundaries.maxY, heading: 350},\n                    {x: 0.5 * this.map.mapBoundaries.maxX, y: this.map.mapBoundaries.maxY, heading: 290},\n                    {x: 0.7 * this.map.mapBoundaries.maxX, y: this.map.mapBoundaries.maxY, heading: 360},\n\n                    {x: this.map.mapBoundaries.maxX, y: 0.2 * this.map.mapBoundaries.maxY, heading: 270},\n                    {x: this.map.mapBoundaries.maxX, y: 0.8 * this.map.mapBoundaries.maxY, heading: 270},\n                ],\n                updateLandingTargets: () => {\n                    this.updateTargets()\n                },\n                determineLandingRunways: () => {\n                    this.determineLandingRunwayDirections()\n                },\n            },\n            10: {\n                arrivalSpawnInterval: 120,\n                departureSpawnInterval: 140,\n                speedRange: [250, 300],\n                altitudeRange: [12000, 18000],\n                targetRunways: (0,_utils_selectors__WEBPACK_IMPORTED_MODULE_6__.randomChoice)([[\"9L\"], [\"9R\"], [\"27L\"], [\"27R\"]]),\n                targetWaypoints: (0,_utils_selectors__WEBPACK_IMPORTED_MODULE_6__.randomChoice)([\n                    [\"CPT\", \"CHT\"],\n                    [\"OCK\", \"EPM\"],\n                    [\"EPM\", \"CHT\"]\n                ]),\n                arrivalSpawnLocations: [\n                    {x: 1, y: 0.2 * this.map.mapBoundaries.maxY, heading: 90},\n                    {x: 1, y: 0.8 * this.map.mapBoundaries.maxY, heading: 90},\n\n                    {x: 0.2 * this.map.mapBoundaries.maxX, y: this.map.mapBoundaries.maxY, heading: 350},\n                    {x: 0.5 * this.map.mapBoundaries.maxX, y: this.map.mapBoundaries.maxY, heading: 290},\n                    {x: 0.7 * this.map.mapBoundaries.maxX, y: this.map.mapBoundaries.maxY, heading: 360},\n\n                    {x: this.map.mapBoundaries.maxX, y: 0.2 * this.map.mapBoundaries.maxY, heading: 270},\n                    {x: this.map.mapBoundaries.maxX, y: 0.8 * this.map.mapBoundaries.maxY, heading: 270},\n                ],\n                updateLandingTargets: () => {\n                    this.updateTargets()\n                },\n                determineLandingRunways: () => {\n                    this.determineLandingRunwayDirections()\n                }\n            },\n            11: {\n                arrivalSpawnInterval: 80,\n                departureSpawnInterval: 100,\n                speedRange: [280, 320],\n                altitudeRange: [15000, 22000],\n                targetRunways: (0,_utils_selectors__WEBPACK_IMPORTED_MODULE_6__.randomChoice)([[\"9L\"], [\"9R\"], [\"27L\"], [\"27R\"]]),\n                targetWaypoints: (0,_utils_selectors__WEBPACK_IMPORTED_MODULE_6__.randomChoice)([\n                    [\"OCK\", \"EPM\"],\n                ]),\n                arrivalSpawnLocations: [\n                    {x: 1, y: 0.2 * this.map.mapBoundaries.maxY, heading: 135},\n                    {x: 1, y: 0.4 * this.map.mapBoundaries.maxY, heading: 90},\n                    {x: 1, y: 0.6 * this.map.mapBoundaries.maxY, heading: 90},\n                    {x: 1, y: 0.8 * this.map.mapBoundaries.maxY, heading: 45},\n\n                    {x: 0.2 * this.map.mapBoundaries.maxX, y: this.map.mapBoundaries.maxY, heading: 350},\n                    {x: 0.5 * this.map.mapBoundaries.maxX, y: this.map.mapBoundaries.maxY, heading: 290},\n                    {x: 0.7 * this.map.mapBoundaries.maxX, y: this.map.mapBoundaries.maxY, heading: 360},\n\n                    {x: this.map.mapBoundaries.maxX, y: 0.2 * this.map.mapBoundaries.maxY, heading: 270},\n                    {x: this.map.mapBoundaries.maxX, y: 0.8 * this.map.mapBoundaries.maxY, heading: 270},\n                ],\n                updateLandingTargets: () => {\n                    this.updateTargets()\n                },\n                determineLandingRunways: () => {\n                    this.determineLandingRunwayDirections()\n                }\n            },\n        };\n        return difficultyConfigMap[difficultyScore]\n    }\n\n    determineLandingRunwayDirections = () => {\n        if (this.machine.weather.wind.easterly()) {\n            if (this.difficultyScore > 3) {\n                this.targetRunways = (0,_utils_selectors__WEBPACK_IMPORTED_MODULE_6__.randomChoice)([[\"9L\", \"9R\"], [\"9L\"], [\"9R\"]])\n            } else {\n                this.targetRunways = (0,_utils_selectors__WEBPACK_IMPORTED_MODULE_6__.randomChoice)([[\"9L\", \"9R\"]])\n            }\n            this.targetRunwayPrefix = '9'\n        } else {\n            if (this.difficultyScore > 3) {\n                this.targetRunways = (0,_utils_selectors__WEBPACK_IMPORTED_MODULE_6__.randomChoice)([[\"27L\"], [\"27R\"]])\n            } else {\n                this.targetRunways = (0,_utils_selectors__WEBPACK_IMPORTED_MODULE_6__.randomChoice)([[\"27L\", \"27R\"]])\n            }\n            this.targetRunwayPrefix = '27'\n        }\n    }\n\n    updateTargets = () => {\n        this.machine.aeroplanes.forEach(aeroplane => {\n            if (aeroplane.isArrival() && !aeroplane.isLanding() && aeroplane.altitude > 3500 && aeroplane.finalTarget && !aeroplane.finalTarget.startsWith(this.targetRunwayPrefix)) {\n                aeroplane.finalTarget = (0,_utils_selectors__WEBPACK_IMPORTED_MODULE_6__.randomChoice)(this.targetRunways)\n            }\n        })\n    }\n\n    arrivalSpawnLocations = () => [\n        {x: 0.2 * this.map.mapBoundaries.maxX, y: 1, heading: 180},\n        {x: 0.5 * this.map.mapBoundaries.maxX, y: 1, heading: 180},\n        {x: 0.7 * this.map.mapBoundaries.maxX, y: 1, heading: 225},\n\n        {x: 0.2 * this.map.mapBoundaries.maxX, y: this.map.mapBoundaries.maxY, heading: 350},\n        {x: 0.5 * this.map.mapBoundaries.maxX, y: this.map.mapBoundaries.maxY, heading: 290},\n        {x: 0.7 * this.map.mapBoundaries.maxX, y: this.map.mapBoundaries.maxY, heading: 360},\n\n        {x: 1, y: 0.2 * this.map.mapBoundaries.maxY, heading: 90},\n        {x: 1, y: 0.8 * this.map.mapBoundaries.maxY, heading: 90},\n\n        {x: this.map.mapBoundaries.maxX, y: 0.2 * this.map.mapBoundaries.maxY, heading: 270},\n        {x: this.map.mapBoundaries.maxX, y: 0.8 * this.map.mapBoundaries.maxY, heading: 270},\n    ]\n\n    initArrival = (targetWaypoint = null) => {\n        const aeroplaneConfig = _config_aircraft__WEBPACK_IMPORTED_MODULE_0__.AIRCRAFT[Math.floor(Math.random() * _config_aircraft__WEBPACK_IMPORTED_MODULE_0__.AIRCRAFT.length)]\n        const callSign = `${aeroplaneConfig.operatorIATA}${(0,_utils_maths__WEBPACK_IMPORTED_MODULE_1__.getRandomNumberBetween)(100, 999)}`\n        const shortClass = aeroplaneConfig.shortClass\n        const spawnLocations = this.currentDifficultyConfig.arrivalSpawnLocations\n        const location = spawnLocations[Math.floor(Math.random() * spawnLocations.length)];\n        const startX = location.x\n        const startY = location.y\n        const startHeading = location.heading\n        const startSpeed = (0,_utils_maths__WEBPACK_IMPORTED_MODULE_1__.roundToNearest)((0,_utils_maths__WEBPACK_IMPORTED_MODULE_1__.getRandomNumberBetween)(...this.currentDifficultyConfig.speedRange), 10)\n        const startAltitude = (0,_utils_maths__WEBPACK_IMPORTED_MODULE_1__.roundToNearest)((0,_utils_maths__WEBPACK_IMPORTED_MODULE_1__.getRandomNumberBetween)(...this.currentDifficultyConfig.altitudeRange), 500)\n        const weight = aeroplaneConfig.weight\n        const plane = new _Domain_Aeroplane_Aeroplane__WEBPACK_IMPORTED_MODULE_2__.Aeroplane(\n            callSign,\n            shortClass,\n            startX,\n            startY,\n            startSpeed,\n            startHeading,\n            startAltitude,\n            weight,\n            _config_constants__WEBPACK_IMPORTED_MODULE_4__.ARRIVAL,\n            _Domain_Aeroplane_aeroplaneStates__WEBPACK_IMPORTED_MODULE_5__.FLYING,\n            targetWaypoint\n        )\n        this.machine.aeroplanes.push(plane)\n    }\n\n    initDeparture = (targetRunway = null) => {\n        const aeroplaneConfig = _config_aircraft__WEBPACK_IMPORTED_MODULE_0__.AIRCRAFT[Math.floor(Math.random() * _config_aircraft__WEBPACK_IMPORTED_MODULE_0__.AIRCRAFT.length)]\n        const callSign = `${aeroplaneConfig.operatorIATA}${(0,_utils_maths__WEBPACK_IMPORTED_MODULE_1__.getRandomNumberBetween)(100, 999)}`\n        const shortClass = aeroplaneConfig.shortClass\n        const startX = 1\n        const startY = 1\n        const startHeading = 0\n        const startSpeed = 0\n        const startAltitude = this.map.features.runways[0].start.altitude\n        const weight = aeroplaneConfig.weight\n        const plane = new _Domain_Aeroplane_Aeroplane__WEBPACK_IMPORTED_MODULE_2__.Aeroplane(\n            callSign,\n            shortClass,\n            startX,\n            startY,\n            startSpeed,\n            startHeading,\n            startAltitude,\n            weight,\n            _config_constants__WEBPACK_IMPORTED_MODULE_4__.DEPARTURE,\n            _Domain_Aeroplane_aeroplaneStates__WEBPACK_IMPORTED_MODULE_5__.READY_TO_TAXI,\n            targetRunway\n        )\n        this.machine.aeroplanes.push(plane)\n    }\n\n}\n\n//# sourceURL=webpack://atc/./src/States/Dynamic.js?");

/***/ }),

/***/ "./src/States/Easy.js":
/*!****************************!*\
  !*** ./src/States/Easy.js ***!
  \****************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"Easy\": () => (/* binding */ Easy)\n/* harmony export */ });\n/* harmony import */ var _config_aircraft__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../config/aircraft */ \"./src/config/aircraft.js\");\n/* harmony import */ var _utils_maths__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../utils/maths */ \"./src/utils/maths.js\");\n/* harmony import */ var _Domain_Aeroplane_Aeroplane__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../Domain/Aeroplane/Aeroplane */ \"./src/Domain/Aeroplane/Aeroplane.js\");\n/* harmony import */ var _GameState__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./GameState */ \"./src/States/GameState.js\");\n/* harmony import */ var _config_constants__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../config/constants */ \"./src/config/constants.js\");\n/* harmony import */ var _Domain_Aeroplane_aeroplaneStates__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../Domain/Aeroplane/aeroplaneStates */ \"./src/Domain/Aeroplane/aeroplaneStates.js\");\n\n\n\n\n\n\n\n\nclass Easy extends _GameState__WEBPACK_IMPORTED_MODULE_3__.GameState {\n    constructor(clearAircraftOnStart = false) {\n        super();\n        this.clearAircraftOnStart = clearAircraftOnStart\n        this.machine = undefined\n        this.initialised = false\n\n        this.arrivalSpawnInterval = 170\n        this.departureSpawnInterval = 140\n        this.speedRange = [180, 220]\n        this.altitudeRange = [5000, 7000]\n    }\n\n    setMachine = (machine) => {\n        this.machine = machine\n    }\n\n    tick = () => {\n        if (!this.initialised && this.clearAircraftOnStart) {\n            this.machine.weather.static()\n            this.machine.clear()\n            // this.initTestAeroplanes()\n            this.initialised = true\n        } else {\n            this.initialised = true\n        }\n        if (this.ticks % this.arrivalSpawnInterval === 0) {\n            this.initArrival()\n        }\n        if (this.ticks !== 0 && this.ticks % this.departureSpawnInterval === 0) {\n            this.initDeparture()\n        }\n\n        this.ticks += 1\n    }\n\n    arrivalSpawnLocations = () => [\n        {x: 0.2 * this.map.mapBoundaries.maxX, y: 1, heading: 180},\n        {x: 0.5 * this.map.mapBoundaries.maxX, y: 1, heading: 180},\n        {x: 0.7 * this.map.mapBoundaries.maxX, y: 1, heading: 225},\n    ]\n\n    initArrival = () => {\n        const aeroplaneConfig = _config_aircraft__WEBPACK_IMPORTED_MODULE_0__.AIRCRAFT[Math.floor(Math.random() * _config_aircraft__WEBPACK_IMPORTED_MODULE_0__.AIRCRAFT.length)]\n        const callSign = `${aeroplaneConfig.operatorIATA}${(0,_utils_maths__WEBPACK_IMPORTED_MODULE_1__.getRandomNumberBetween)(100, 999)}`\n        const shortClass = aeroplaneConfig.shortClass\n        const spawnLocations = this.arrivalSpawnLocations()\n        const location = spawnLocations[Math.floor(Math.random() * spawnLocations.length)];\n        const startX = location.x\n        const startY = location.y\n        const startHeading = location.heading\n        const startSpeed = (0,_utils_maths__WEBPACK_IMPORTED_MODULE_1__.roundToNearest)((0,_utils_maths__WEBPACK_IMPORTED_MODULE_1__.getRandomNumberBetween)(...this.speedRange), 10)\n        const startAltitude = (0,_utils_maths__WEBPACK_IMPORTED_MODULE_1__.roundToNearest)((0,_utils_maths__WEBPACK_IMPORTED_MODULE_1__.getRandomNumberBetween)(...this.altitudeRange), 500)\n        const weight = aeroplaneConfig.weight\n        const plane = new _Domain_Aeroplane_Aeroplane__WEBPACK_IMPORTED_MODULE_2__.Aeroplane(\n            callSign,\n            shortClass,\n            startX,\n            startY,\n            startSpeed,\n            startHeading,\n            startAltitude,\n            weight\n        )\n        this.machine.aeroplanes.push(plane)\n    }\n\n    initDeparture = () => {\n        const aeroplaneConfig = _config_aircraft__WEBPACK_IMPORTED_MODULE_0__.AIRCRAFT[Math.floor(Math.random() * _config_aircraft__WEBPACK_IMPORTED_MODULE_0__.AIRCRAFT.length)]\n        const callSign = `${aeroplaneConfig.operatorIATA}${(0,_utils_maths__WEBPACK_IMPORTED_MODULE_1__.getRandomNumberBetween)(100, 999)}`\n        const shortClass = aeroplaneConfig.shortClass\n        const startX = 1\n        const startY = 1\n        const startHeading = 0\n        const startSpeed = 0\n        const startAltitude = this.map.features.runways[0].start.altitude\n        const weight = aeroplaneConfig.weight\n        const plane = new _Domain_Aeroplane_Aeroplane__WEBPACK_IMPORTED_MODULE_2__.Aeroplane(\n            callSign,\n            shortClass,\n            startX,\n            startY,\n            startSpeed,\n            startHeading,\n            startAltitude,\n            weight,\n            _config_constants__WEBPACK_IMPORTED_MODULE_4__.DEPARTURE,\n            _Domain_Aeroplane_aeroplaneStates__WEBPACK_IMPORTED_MODULE_5__.READY_TO_TAXI\n        )\n        this.machine.aeroplanes.push(plane)\n    }\n\n    initTestAeroplanes = () => {\n        // const aeroplane1 = new Aeroplane(\"BA123\", \"A321\", 1150, 470, 200, 270, 3000, 1)\n        const aeroplane1 = new _Domain_Aeroplane_Aeroplane__WEBPACK_IMPORTED_MODULE_2__.Aeroplane(\"BA123\", \"A321\", 1200, 470, 200, 270, 3000, 3, _config_constants__WEBPACK_IMPORTED_MODULE_4__.ARRIVAL, _Domain_Aeroplane_aeroplaneStates__WEBPACK_IMPORTED_MODULE_5__.FLYING, null, 100)\n        // const aeroplane1 = new Aeroplane(\"BA999\", \"A321\", 1, 1, 0, 0, 0, 1, DEPARTURE, READY_TO_TAXI, \"GWC\")\n        this.machine.aeroplanes = [\n            aeroplane1,\n            // aeroplane2,\n            // new Aeroplane(\"BA789\", \"A321\", 500, 400, 200, 135, 6000, 1),\n            // new Aeroplane(\"BA101\", \"A321\", 500, 500, 200, 180, 6000, 1),\n            // new Aeroplane(\"BA112\", \"A321\", 500, 250, 200, 305, 6000, 1),\n            // new Aeroplane(\"BA131\", \"A321\", 500, 350, 200, 270, 6000, 1),\n            // new Aeroplane(\"BA415\", \"A321\", 500, 450, 200, 225, 6000, 1),\n            // new Aeroplane(\"BA161\", \"A321\", 500, 450, 200, 225, 6000, 1),\n            // new Aeroplane(\"BA171\", \"A321\", 500, 450, 200, 225, 6000, 1),\n            // new Aeroplane(\"BA181\", \"A321\", 500, 450, 200, 225, 6000, 1),\n            // new Aeroplane(\"BA191\", \"A321\", 500, 450, 200, 225, 6000, 1),\n            // new Aeroplane(\"BA202\", \"A321\", 500, 450, 200, 225, 6000, 1),\n            // new Aeroplane(\"BA212\", \"A321\", 500, 450, 200, 225, 6000, 1),\n        ]\n\n        // aeroplane1.setHold(this.map, -1)\n        // aeroplane1.clearForLanding(this.map, \"9L\")\n        // aeroplane1.setTaxiAndHold(this.map, \"27L\")\n        // aeroplane1.setWaypoint(this.map, \"GWC\")\n        // aeroplane1.setSpeed(this.map, 300)\n        // aeroplane1.setAltitude(this.map, 40000)\n\n        // this.machine.aeroplanes.forEach(plane => {\n        //     plane.setAltitude(this.map, 4000)\n        // })\n    }\n\n\n}\n\n//# sourceURL=webpack://atc/./src/States/Easy.js?");

/***/ }),

/***/ "./src/States/GameState.js":
/*!*********************************!*\
  !*** ./src/States/GameState.js ***!
  \*********************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"GameState\": () => (/* binding */ GameState)\n/* harmony export */ });\nclass GameState {\n    constructor() {\n        this.machine = undefined\n        this.map = undefined\n        this.ticks = 0\n    }\n\n    setMachine = (machine) => {\n        this.machine = machine\n    }\n\n    setMap = (map) => {\n        this.map = map\n    }\n\n    tick = () => {\n\n    }\n\n}\n\n//# sourceURL=webpack://atc/./src/States/GameState.js?");

/***/ }),

/***/ "./src/States/Hard.js":
/*!****************************!*\
  !*** ./src/States/Hard.js ***!
  \****************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"Hard\": () => (/* binding */ Hard)\n/* harmony export */ });\n/* harmony import */ var _config_aircraft__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../config/aircraft */ \"./src/config/aircraft.js\");\n/* harmony import */ var _utils_maths__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../utils/maths */ \"./src/utils/maths.js\");\n/* harmony import */ var _Domain_Aeroplane_Aeroplane__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../Domain/Aeroplane/Aeroplane */ \"./src/Domain/Aeroplane/Aeroplane.js\");\n/* harmony import */ var _GameState__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./GameState */ \"./src/States/GameState.js\");\n/* harmony import */ var _config_constants__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../config/constants */ \"./src/config/constants.js\");\n/* harmony import */ var _Domain_Aeroplane_aeroplaneStates__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../Domain/Aeroplane/aeroplaneStates */ \"./src/Domain/Aeroplane/aeroplaneStates.js\");\n/* harmony import */ var _utils_selectors__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../utils/selectors */ \"./src/utils/selectors.js\");\n\n\n\n\n\n\n\n\n\nclass Hard extends _GameState__WEBPACK_IMPORTED_MODULE_3__.GameState {\n    constructor(clearAircraftOnStart = false) {\n        super();\n        this.clearAircraftOnStart = clearAircraftOnStart\n        this.machine = undefined\n        this.initialised = false\n\n        this.arrivalSpawnInterval = 60\n        this.departureSpawnInterval = 90\n        this.speedRange = [240, 320]\n        this.altitudeRange = [10000, 18000]\n        this.targetRunways = (0,_utils_selectors__WEBPACK_IMPORTED_MODULE_6__.randomChoice)([[\"9L\", \"9R\"], [\"27L\", \"27R\"]])\n        this.targetWaypoints = (0,_utils_selectors__WEBPACK_IMPORTED_MODULE_6__.randomChoice)([\n            [\"CPT\", \"CHT\", \"BPK\", \"DET\", \"EPM\", \"OCK\"],\n            [\"CPT\", \"CHT\", \"LON\"],\n            [\"OCK\", \"EPM\"],\n            [\"CPT\"],\n        ])\n        this.targetRunwayPrefix = ''\n    }\n\n    setMachine = (machine) => {\n        this.machine = machine\n        this.init()\n    }\n\n    init = () => {\n        this.machine.weather.dynamic()\n        if (!this.initialised && this.clearAircraftOnStart) {\n            this.machine.clear()\n            this.initialised = true\n        } else {\n            this.initialised = true\n        }\n    }\n\n    tick = () => {\n\n        this.determineRunways()\n        this.updateTargets()\n\n        if (this.ticks % this.arrivalSpawnInterval === 0) {\n            this.initArrival((0,_utils_selectors__WEBPACK_IMPORTED_MODULE_6__.randomChoice)(this.targetRunways))\n        }\n        if (this.ticks !== 0 && this.ticks % this.departureSpawnInterval === 0) {\n            this.initDeparture((0,_utils_selectors__WEBPACK_IMPORTED_MODULE_6__.randomChoice)(this.targetWaypoints))\n        }\n\n        this.ticks += 1\n    }\n\n    determineRunways = () => {\n        if (this.machine.weather.wind.easterly()) {\n            this.targetRunways = [\"9L\", \"9R\"]\n            this.targetRunwayPrefix = '9'\n        } else {\n            this.targetRunways = [\"27L\", \"27R\"]\n            this.targetRunwayPrefix = '27'\n        }\n    }\n\n    updateTargets = () => {\n        this.machine.aeroplanes.forEach(aeroplane => {\n            if (aeroplane.isArrival() && !aeroplane.isLanding() && aeroplane.altitude > 3500 && !aeroplane.finalTarget.startsWith(this.targetRunwayPrefix)) {\n                aeroplane.finalTarget = (0,_utils_selectors__WEBPACK_IMPORTED_MODULE_6__.randomChoice)(this.targetRunways)\n            }\n        })\n    }\n\n    arrivalSpawnLocations = () => [\n        {x: 0.2 * this.map.mapBoundaries.maxX, y: 1, heading: 180},\n        {x: 0.5 * this.map.mapBoundaries.maxX, y: 1, heading: 180},\n        {x: 0.7 * this.map.mapBoundaries.maxX, y: 1, heading: 225},\n\n        {x: 0.2 * this.map.mapBoundaries.maxX, y: this.map.mapBoundaries.maxY, heading: 350},\n        {x: 0.4 * this.map.mapBoundaries.maxX, y: this.map.mapBoundaries.maxY, heading: 10},\n        {x: 0.5 * this.map.mapBoundaries.maxX, y: this.map.mapBoundaries.maxY, heading: 290},\n        {x: 0.6 * this.map.mapBoundaries.maxX, y: this.map.mapBoundaries.maxY, heading: 20},\n        {x: 0.7 * this.map.mapBoundaries.maxX, y: this.map.mapBoundaries.maxY, heading: 360},\n\n        {x: 1, y: 0.2 * this.map.mapBoundaries.maxY, heading: 90},\n        {x: 1, y: 0.8 * this.map.mapBoundaries.maxY, heading: 90},\n\n        {x: this.map.mapBoundaries.maxX, y: 0.2 * this.map.mapBoundaries.maxY, heading: 270},\n        {x: this.map.mapBoundaries.maxX, y: 0.8 * this.map.mapBoundaries.maxY, heading: 270},\n    ]\n\n    initArrival = (targetWaypoint = null) => {\n        const aeroplaneConfig = _config_aircraft__WEBPACK_IMPORTED_MODULE_0__.AIRCRAFT[Math.floor(Math.random() * _config_aircraft__WEBPACK_IMPORTED_MODULE_0__.AIRCRAFT.length)]\n        const callSign = `${aeroplaneConfig.operatorIATA}${(0,_utils_maths__WEBPACK_IMPORTED_MODULE_1__.getRandomNumberBetween)(100, 999)}`\n        const shortClass = aeroplaneConfig.shortClass\n        const spawnLocations = this.arrivalSpawnLocations()\n        const location = spawnLocations[Math.floor(Math.random() * spawnLocations.length)];\n        const startX = location.x\n        const startY = location.y\n        const startHeading = location.heading\n        const startSpeed = (0,_utils_maths__WEBPACK_IMPORTED_MODULE_1__.roundToNearest)((0,_utils_maths__WEBPACK_IMPORTED_MODULE_1__.getRandomNumberBetween)(...this.speedRange), 10)\n        const startAltitude = (0,_utils_maths__WEBPACK_IMPORTED_MODULE_1__.roundToNearest)((0,_utils_maths__WEBPACK_IMPORTED_MODULE_1__.getRandomNumberBetween)(...this.altitudeRange), 500)\n        const weight = aeroplaneConfig.weight\n        const plane = new _Domain_Aeroplane_Aeroplane__WEBPACK_IMPORTED_MODULE_2__.Aeroplane(\n            callSign,\n            shortClass,\n            startX,\n            startY,\n            startSpeed,\n            startHeading,\n            startAltitude,\n            weight,\n            _config_constants__WEBPACK_IMPORTED_MODULE_4__.ARRIVAL,\n            _Domain_Aeroplane_aeroplaneStates__WEBPACK_IMPORTED_MODULE_5__.FLYING,\n            targetWaypoint\n        )\n        this.machine.aeroplanes.push(plane)\n    }\n\n    initDeparture = (targetRunway = null) => {\n        const aeroplaneConfig = _config_aircraft__WEBPACK_IMPORTED_MODULE_0__.AIRCRAFT[Math.floor(Math.random() * _config_aircraft__WEBPACK_IMPORTED_MODULE_0__.AIRCRAFT.length)]\n        const callSign = `${aeroplaneConfig.operatorIATA}${(0,_utils_maths__WEBPACK_IMPORTED_MODULE_1__.getRandomNumberBetween)(100, 999)}`\n        const shortClass = aeroplaneConfig.shortClass\n        const startX = 1\n        const startY = 1\n        const startHeading = 0\n        const startSpeed = 0\n        const startAltitude = this.map.features.runways[0].start.altitude\n        const weight = aeroplaneConfig.weight\n        const plane = new _Domain_Aeroplane_Aeroplane__WEBPACK_IMPORTED_MODULE_2__.Aeroplane(\n            callSign,\n            shortClass,\n            startX,\n            startY,\n            startSpeed,\n            startHeading,\n            startAltitude,\n            weight,\n            _config_constants__WEBPACK_IMPORTED_MODULE_4__.DEPARTURE,\n            _Domain_Aeroplane_aeroplaneStates__WEBPACK_IMPORTED_MODULE_5__.READY_TO_TAXI,\n            targetRunway\n        )\n        this.machine.aeroplanes.push(plane)\n    }\n\n}\n\n//# sourceURL=webpack://atc/./src/States/Hard.js?");

/***/ }),

/***/ "./src/States/Realistic/Consistent.js":
/*!********************************************!*\
  !*** ./src/States/Realistic/Consistent.js ***!
  \********************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"Consistent\": () => (/* binding */ Consistent)\n/* harmony export */ });\n/* harmony import */ var _utils_selectors__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../utils/selectors */ \"./src/utils/selectors.js\");\n/* harmony import */ var _RealisticBase__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./RealisticBase */ \"./src/States/Realistic/RealisticBase.js\");\n/* harmony import */ var _Quiet__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./Quiet */ \"./src/States/Realistic/Quiet.js\");\n\n\n\n\n\nclass Consistent extends _RealisticBase__WEBPACK_IMPORTED_MODULE_1__.RealisticBase {\n    constructor(initStandalone = false) {\n        super(initStandalone)\n\n        this.arrivalSpawnInterval = 120\n        this.departureSpawnInterval = 85\n        this.speedRange = [220, 280]\n        this.altitudeRange = [9000, 15000]\n\n        this.targetArrivals = 6\n        this.targetDepartures = 6\n    }\n\n    tick = () => {\n        this.determineRunways()\n        this.updateTargets()\n\n        if (this.machine.statsService.instanceSpawnedArrivals < this.targetArrivals && this.ticks % this.arrivalSpawnInterval === 0) {\n            this.initArrival((0,_utils_selectors__WEBPACK_IMPORTED_MODULE_0__.randomChoice)(this.targetRunways))\n        }\n        if (this.ticks !== 0 && this.machine.statsService.instanceSpawnedDepartures < this.targetDepartures && this.ticks % this.departureSpawnInterval === 0) {\n            this.initDeparture((0,_utils_selectors__WEBPACK_IMPORTED_MODULE_0__.randomChoice)(this.targetWaypoints))\n        }\n\n        if (this.machine.statsService.instanceComplete() >= (this.targetArrivals + this.targetDepartures)) {\n            this.machine.transitionTo(new _Quiet__WEBPACK_IMPORTED_MODULE_2__.Quiet())\n        }\n\n        this.ticks += 1\n    }\n\n    arrivalSpawnLocations = () => [\n        {x: 1, y: 0.2 * this.map.mapBoundaries.maxY, heading: 90},\n\n        {x: this.map.mapBoundaries.maxX, y: 0.8 * this.map.mapBoundaries.maxY, heading: 270},\n    ]\n\n\n}\n\n//# sourceURL=webpack://atc/./src/States/Realistic/Consistent.js?");

/***/ }),

/***/ "./src/States/Realistic/Flurry.js":
/*!****************************************!*\
  !*** ./src/States/Realistic/Flurry.js ***!
  \****************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"Flurry\": () => (/* binding */ Flurry)\n/* harmony export */ });\n/* harmony import */ var _utils_selectors__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../utils/selectors */ \"./src/utils/selectors.js\");\n/* harmony import */ var _RealisticBase__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./RealisticBase */ \"./src/States/Realistic/RealisticBase.js\");\n/* harmony import */ var _Quiet__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./Quiet */ \"./src/States/Realistic/Quiet.js\");\n\n\n\n\n\nclass Flurry extends _RealisticBase__WEBPACK_IMPORTED_MODULE_1__.RealisticBase {\n    constructor(initStandalone = false) {\n        super(initStandalone)\n\n        this.arrivalSpawnInterval = 30\n        this.departureSpawnInterval = 40\n        this.speedRange = [220, 280]\n        this.altitudeRange = [9000, 15000]\n\n        this.targetArrivals = 4\n        this.targetDepartures = 4\n    }\n\n    tick = () => {\n        this.determineRunways()\n        this.updateTargets()\n\n        if (this.machine.statsService.instanceSpawnedArrivals < this.targetArrivals && this.ticks % this.arrivalSpawnInterval === 0) {\n            this.initArrival((0,_utils_selectors__WEBPACK_IMPORTED_MODULE_0__.randomChoice)(this.targetRunways))\n        }\n        if (this.ticks !== 0 && this.machine.statsService.instanceSpawnedDepartures < this.targetDepartures && this.ticks % this.departureSpawnInterval === 0) {\n            this.initDeparture((0,_utils_selectors__WEBPACK_IMPORTED_MODULE_0__.randomChoice)(this.targetWaypoints))\n        }\n\n        if (this.machine.statsService.instanceComplete() >= (this.targetArrivals + this.targetDepartures)) {\n            this.machine.transitionTo(new _Quiet__WEBPACK_IMPORTED_MODULE_2__.Quiet())\n        }\n\n        this.ticks += 1\n    }\n\n}\n\n//# sourceURL=webpack://atc/./src/States/Realistic/Flurry.js?");

/***/ }),

/***/ "./src/States/Realistic/Quiet.js":
/*!***************************************!*\
  !*** ./src/States/Realistic/Quiet.js ***!
  \***************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"Quiet\": () => (/* binding */ Quiet)\n/* harmony export */ });\n/* harmony import */ var _utils_selectors__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../utils/selectors */ \"./src/utils/selectors.js\");\n/* harmony import */ var _Flurry__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./Flurry */ \"./src/States/Realistic/Flurry.js\");\n/* harmony import */ var _RealisticBase__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./RealisticBase */ \"./src/States/Realistic/RealisticBase.js\");\n/* harmony import */ var _Consistent__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./Consistent */ \"./src/States/Realistic/Consistent.js\");\n\n\n\n\n\n\nclass Quiet extends _RealisticBase__WEBPACK_IMPORTED_MODULE_2__.RealisticBase {\n    constructor(initStandalone = false) {\n        super(initStandalone)\n\n        this.arrivalSpawnInterval = 120\n        this.speedRange = [220, 280]\n        this.altitudeRange = [9000, 15000]\n\n        this.targetArrivals = 4\n    }\n\n    tick = () => {\n        this.determineRunways()\n        this.updateTargets()\n\n        if (this.machine.statsService.instanceSpawnedArrivals < this.targetArrivals && this.ticks % this.arrivalSpawnInterval === 0) {\n            this.initArrival((0,_utils_selectors__WEBPACK_IMPORTED_MODULE_0__.randomChoice)(this.targetRunways))\n        }\n\n        if (this.machine.statsService.instanceComplete() >= this.targetArrivals) {\n            const random = Math.random()\n            if (random < 0.5) {\n                this.machine.transitionTo(new _Consistent__WEBPACK_IMPORTED_MODULE_3__.Consistent())\n            } else {\n                this.machine.transitionTo(new _Flurry__WEBPACK_IMPORTED_MODULE_1__.Flurry())\n            }\n        }\n\n        this.ticks += 1\n    }\n}\n\n//# sourceURL=webpack://atc/./src/States/Realistic/Quiet.js?");

/***/ }),

/***/ "./src/States/Realistic/RealisticBase.js":
/*!***********************************************!*\
  !*** ./src/States/Realistic/RealisticBase.js ***!
  \***********************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"RealisticBase\": () => (/* binding */ RealisticBase)\n/* harmony export */ });\n/* harmony import */ var _GameState__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../GameState */ \"./src/States/GameState.js\");\n/* harmony import */ var _utils_selectors__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../utils/selectors */ \"./src/utils/selectors.js\");\n/* harmony import */ var _config_aircraft__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../config/aircraft */ \"./src/config/aircraft.js\");\n/* harmony import */ var _utils_maths__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../utils/maths */ \"./src/utils/maths.js\");\n/* harmony import */ var _Domain_Aeroplane_Aeroplane__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../../Domain/Aeroplane/Aeroplane */ \"./src/Domain/Aeroplane/Aeroplane.js\");\n/* harmony import */ var _config_constants__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../../config/constants */ \"./src/config/constants.js\");\n/* harmony import */ var _Domain_Aeroplane_aeroplaneStates__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../../Domain/Aeroplane/aeroplaneStates */ \"./src/Domain/Aeroplane/aeroplaneStates.js\");\n\n\n\n\n\n\n\n\n\nclass RealisticBase extends _GameState__WEBPACK_IMPORTED_MODULE_0__.GameState {\n    constructor(initStandalone = false) {\n        super()\n        this.initStandalone = initStandalone\n\n        this.machine = undefined\n        this.initialised = false\n\n        this.targetRunways = (0,_utils_selectors__WEBPACK_IMPORTED_MODULE_1__.randomChoice)([[\"9L\", \"9R\"], [\"27L\", \"27R\"], [\"9L\"], [\"9R\"], [\"27L\"], [\"27R\"]])\n        this.targetWaypoints = (0,_utils_selectors__WEBPACK_IMPORTED_MODULE_1__.randomChoice)([\n            [\"LAM\", \"BPK\", \"MAY\", \"DET\"],\n            [\"CPT\", \"CHT\"],\n            [\"OCK\", \"EPM\", \"MAY\"],\n            [\"CHT\", \"LAM\", \"BPK\"],\n            [\"OCK\"],\n            [\"DET\"],\n        ])\n        this.targetRunwayPrefix = ''\n    }\n\n    setMachine = (machine) => {\n        this.machine = machine\n        this.init()\n    }\n\n    init = () => {\n        if (this.initStandalone) {\n            this.machine.weather.dynamic()\n            this.machine.clear()\n        }\n        this.machine.statsService.resetInstanceStats()\n    }\n\n    tick = () => {\n        throw Error('Not implemented')\n    }\n\n    determineRunways = () => {\n        if (this.machine.weather.wind.easterly()) {\n            this.targetRunways = (0,_utils_selectors__WEBPACK_IMPORTED_MODULE_1__.randomChoice)([[\"9L\", \"9R\"], [\"9L\"], [\"9R\"]])\n            this.targetRunwayPrefix = '9'\n        } else {\n            this.targetRunways = (0,_utils_selectors__WEBPACK_IMPORTED_MODULE_1__.randomChoice)([[\"27L\", \"27R\"], [\"27L\"], [\"27R\"]])\n            this.targetRunwayPrefix = '27'\n        }\n    }\n\n    updateTargets = () => {\n        this.machine.aeroplanes.forEach(aeroplane => {\n            if (aeroplane.isArrival() && !aeroplane.isLanding() && aeroplane.altitude > 3500 && !aeroplane.finalTarget.startsWith(this.targetRunwayPrefix)) {\n                aeroplane.finalTarget = (0,_utils_selectors__WEBPACK_IMPORTED_MODULE_1__.randomChoice)(this.targetRunways)\n            }\n        })\n    }\n\n    arrivalSpawnLocations = () => [\n        {x: 1, y: 0.2 * this.map.mapBoundaries.maxY, heading: 90},\n        {x: 1, y: 0.8 * this.map.mapBoundaries.maxY, heading: 90},\n\n        {x: this.map.mapBoundaries.maxX, y: 0.2 * this.map.mapBoundaries.maxY, heading: 270},\n        {x: this.map.mapBoundaries.maxX, y: 0.8 * this.map.mapBoundaries.maxY, heading: 270},\n    ]\n\n    initArrival = (targetRunway = null) => {\n        const aeroplaneConfig = _config_aircraft__WEBPACK_IMPORTED_MODULE_2__.AIRCRAFT[Math.floor(Math.random() * _config_aircraft__WEBPACK_IMPORTED_MODULE_2__.AIRCRAFT.length)]\n        const callSign = `${aeroplaneConfig.operatorIATA}${(0,_utils_maths__WEBPACK_IMPORTED_MODULE_3__.getRandomNumberBetween)(100, 999)}`\n        const shortClass = aeroplaneConfig.shortClass\n        const spawnLocations = this.arrivalSpawnLocations()\n        const location = spawnLocations[Math.floor(Math.random() * spawnLocations.length)];\n        const startX = location.x\n        const startY = location.y\n        const startHeading = location.heading\n        const startSpeed = (0,_utils_maths__WEBPACK_IMPORTED_MODULE_3__.roundToNearest)((0,_utils_maths__WEBPACK_IMPORTED_MODULE_3__.getRandomNumberBetween)(...this.speedRange), 10)\n        const startAltitude = (0,_utils_maths__WEBPACK_IMPORTED_MODULE_3__.roundToNearest)((0,_utils_maths__WEBPACK_IMPORTED_MODULE_3__.getRandomNumberBetween)(...this.altitudeRange), 500)\n        const weight = aeroplaneConfig.weight\n        const plane = new _Domain_Aeroplane_Aeroplane__WEBPACK_IMPORTED_MODULE_4__.Aeroplane(\n            callSign,\n            shortClass,\n            startX,\n            startY,\n            startSpeed,\n            startHeading,\n            startAltitude,\n            weight,\n            _config_constants__WEBPACK_IMPORTED_MODULE_5__.ARRIVAL,\n            _Domain_Aeroplane_aeroplaneStates__WEBPACK_IMPORTED_MODULE_6__.FLYING,\n            targetRunway\n        )\n        this.machine.aeroplanes.push(plane)\n        this.machine.statsService.incrementSpawnedArrivalCount()\n    }\n\n    initDeparture = (targetWaypoint = null) => {\n        const aeroplaneConfig = _config_aircraft__WEBPACK_IMPORTED_MODULE_2__.AIRCRAFT[Math.floor(Math.random() * _config_aircraft__WEBPACK_IMPORTED_MODULE_2__.AIRCRAFT.length)]\n        const callSign = `${aeroplaneConfig.operatorIATA}${(0,_utils_maths__WEBPACK_IMPORTED_MODULE_3__.getRandomNumberBetween)(100, 999)}`\n        const shortClass = aeroplaneConfig.shortClass\n        const startX = 1\n        const startY = 1\n        const startHeading = 0\n        const startSpeed = 0\n        const startAltitude = this.map.features.runways[0].start.altitude\n        const weight = aeroplaneConfig.weight\n        const plane = new _Domain_Aeroplane_Aeroplane__WEBPACK_IMPORTED_MODULE_4__.Aeroplane(\n            callSign,\n            shortClass,\n            startX,\n            startY,\n            startSpeed,\n            startHeading,\n            startAltitude,\n            weight,\n            _config_constants__WEBPACK_IMPORTED_MODULE_5__.DEPARTURE,\n            _Domain_Aeroplane_aeroplaneStates__WEBPACK_IMPORTED_MODULE_6__.READY_TO_TAXI,\n            targetWaypoint\n        )\n        this.machine.aeroplanes.push(plane)\n        this.machine.statsService.incrementSpawnedDepartureCount()\n    }\n\n}\n\n//# sourceURL=webpack://atc/./src/States/Realistic/RealisticBase.js?");

/***/ }),

/***/ "./src/States/Realistic/RealisticStart.js":
/*!************************************************!*\
  !*** ./src/States/Realistic/RealisticStart.js ***!
  \************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"RealisticStart\": () => (/* binding */ RealisticStart)\n/* harmony export */ });\n/* harmony import */ var _utils_selectors__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../utils/selectors */ \"./src/utils/selectors.js\");\n/* harmony import */ var _Quiet__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./Quiet */ \"./src/States/Realistic/Quiet.js\");\n/* harmony import */ var _RealisticBase__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./RealisticBase */ \"./src/States/Realistic/RealisticBase.js\");\n\n\n\n\n\nclass RealisticStart extends _RealisticBase__WEBPACK_IMPORTED_MODULE_2__.RealisticBase {\n    constructor(initStandalone = false) {\n        super(initStandalone)\n\n        this.arrivalSpawnInterval = 120\n        this.departureSpawnInterval = 100\n        this.speedRange = [220, 280]\n        this.altitudeRange = [9000, 15000]\n\n        this.targetArrivals = 2\n        this.targetDepartures = 5\n    }\n\n    tick = () => {\n        this.determineRunways()\n        this.updateTargets()\n\n        if (this.initStandalone && !this.initialised) {\n            for (let x = 0; x < 3; x++) {\n                this.initDeparture((0,_utils_selectors__WEBPACK_IMPORTED_MODULE_0__.randomChoice)(this.targetWaypoints))\n            }\n            this.initialised = true\n        }\n\n        if (this.ticks !== 0 && this.machine.statsService.instanceSpawnedArrivals < this.targetArrivals && this.ticks % this.arrivalSpawnInterval === 0) {\n            this.initArrival((0,_utils_selectors__WEBPACK_IMPORTED_MODULE_0__.randomChoice)(this.targetRunways))\n        }\n        if (this.ticks !== 0 && this.machine.statsService.instanceSpawnedDepartures < this.targetDepartures && this.ticks % this.departureSpawnInterval === 0) {\n            this.initDeparture((0,_utils_selectors__WEBPACK_IMPORTED_MODULE_0__.randomChoice)(this.targetWaypoints))\n        }\n\n        if (this.machine.statsService.instanceComplete() >= (this.targetArrivals + this.targetDepartures)) {\n            this.machine.transitionTo(new _Quiet__WEBPACK_IMPORTED_MODULE_1__.Quiet())\n        }\n\n        this.ticks += 1\n    }\n}\n\n//# sourceURL=webpack://atc/./src/States/Realistic/RealisticStart.js?");

/***/ }),

/***/ "./src/States/Tutorial.js":
/*!********************************!*\
  !*** ./src/States/Tutorial.js ***!
  \********************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"Tutorial\": () => (/* binding */ Tutorial)\n/* harmony export */ });\n/* harmony import */ var _GameState__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./GameState */ \"./src/States/GameState.js\");\n/* harmony import */ var _Tutorial_TutorialMapOverview__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./Tutorial/TutorialMapOverview */ \"./src/States/Tutorial/TutorialMapOverview.js\");\n\n\n\n\nclass Tutorial extends _GameState__WEBPACK_IMPORTED_MODULE_0__.GameState {\n    constructor(map, interfaceController) {\n        super();\n        this.setMap(map)\n        this.interfaceController = interfaceController\n        this.state = undefined\n        this.transitionTo(new _Tutorial_TutorialMapOverview__WEBPACK_IMPORTED_MODULE_1__.TutorialMapOverview(this.map))\n    }\n\n    transitionTo = (state) => {\n        this.state = state\n        this.state.setMachine(this)\n    }\n\n    tick = () => {\n        if (!this.state.initialised) {\n            this.state.init()\n        }\n        this.ticks += 1\n    }\n\n}\n\n//# sourceURL=webpack://atc/./src/States/Tutorial.js?");

/***/ }),

/***/ "./src/States/Tutorial/TutorialAircraftAltitude.js":
/*!*********************************************************!*\
  !*** ./src/States/Tutorial/TutorialAircraftAltitude.js ***!
  \*********************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"TutorialAircraftAltitude\": () => (/* binding */ TutorialAircraftAltitude)\n/* harmony export */ });\n/* harmony import */ var _Domain_Aeroplane_Aeroplane__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../Domain/Aeroplane/Aeroplane */ \"./src/Domain/Aeroplane/Aeroplane.js\");\n/* harmony import */ var _config_constants__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../config/constants */ \"./src/config/constants.js\");\n/* harmony import */ var _TutorialAircraftHolding__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./TutorialAircraftHolding */ \"./src/States/Tutorial/TutorialAircraftHolding.js\");\n\n\n\n\nclass TutorialAircraftAltitude {\n    constructor(map) {\n        this.map = map\n        this.machine = undefined\n        this.initialised = false\n    }\n\n    setMachine = (machine) => {\n        this.machine = machine\n    }\n\n    init = () => {\n        this.machine.machine.clear()\n        this._aircraftSpeed()\n        this.machine.interfaceController.showHint(\n            \"Controlling altitude\",\n            \"Currently, BA354 is flying at 8,000ft.\\n\\n\" +\n            \"You can see this on the aircraft label and its sidebar strip (the last of the three numbers).\\n\\n\" +\n            \"Notice that on the aircraft label the altitude is specified in 100s of feet (80) but in the sidebar it is shown in its full form.\\n\\n\" +\n            \"Select the aircraft and type the command below into the command field after the call sign, and press Enter.\",\n            \"A40\",\n            \"This will tell the aeroplane to change altitude to 4,000ft.\\n\\n\" +\n            \"Notice that the altitude command is also specified in 100s of feet.\\n\\n\" +\n            \"Watch the last number on the aircraft label change as the aircraft descends.\\n\\n\" +\n            \"Like before, the relevant number on the label and sidebar change.\\n\\n\" +\n            `You can choose any value between ${_config_constants__WEBPACK_IMPORTED_MODULE_1__.MIN_ALTITUDE}ft and ${_config_constants__WEBPACK_IMPORTED_MODULE_1__.MAX_ALTITUDE}ft.`,\n            \"Next\",\n            this.next\n        )\n        this.initialised = true\n    }\n\n    next = () => {\n        this.machine.machine.clear()\n        this.machine.interfaceController.clearCommandEntry()\n        this.machine.transitionTo(new _TutorialAircraftHolding__WEBPACK_IMPORTED_MODULE_2__.TutorialAircraftHolding(this.map))\n    }\n\n    _aircraftSpeed = () => {\n        const plane = new _Domain_Aeroplane_Aeroplane__WEBPACK_IMPORTED_MODULE_0__.Aeroplane(\n            'BA354',\n            'TUT',\n            0.1 * this.map.mapBoundaries.maxX,\n            0.25 * this.map.mapBoundaries.maxY,\n            260,\n            90,\n            8000,\n            1)\n        this.machine.machine.aeroplanes.push(plane)\n    }\n}\n\n//# sourceURL=webpack://atc/./src/States/Tutorial/TutorialAircraftAltitude.js?");

/***/ }),

/***/ "./src/States/Tutorial/TutorialAircraftHeading.js":
/*!********************************************************!*\
  !*** ./src/States/Tutorial/TutorialAircraftHeading.js ***!
  \********************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"TutorialAircraftHeading\": () => (/* binding */ TutorialAircraftHeading)\n/* harmony export */ });\n/* harmony import */ var _Domain_Aeroplane_Aeroplane__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../Domain/Aeroplane/Aeroplane */ \"./src/Domain/Aeroplane/Aeroplane.js\");\n/* harmony import */ var _TutorialAircraftWaypoint__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./TutorialAircraftWaypoint */ \"./src/States/Tutorial/TutorialAircraftWaypoint.js\");\n\n\n\nclass TutorialAircraftHeading {\n    constructor(map) {\n        this.map = map\n        this.machine = undefined\n        this.initialised = false\n    }\n\n    setMachine = (machine) => {\n        this.machine = machine\n    }\n\n    init = () => {\n        this.machine.machine.clear()\n        this._aircraftHeading()\n        this.machine.interfaceController.showHint(\n            \"Turning aircraft\",\n            \"Currently, LH534 is heading 90 degrees.\\n\\n\" +\n            \"You can see this on the aircraft label and its sidebar strip (the middle of the three numbers).\\n\\n\" +\n            \"Select the aircraft and type the command below into the command field after the call sign, and press Enter.\",\n            \"T180\",\n            \"This will tell the aeroplane to turn to heading 180 degrees (directly south).\\n\\n\" +\n            \"Watch the middle number on the aircraft label change as the aircraft turns.\\n\\n\" +\n            \"Notice also that the middle number on the sidebar has changed to Blue and shows the target heading value.\\n\\n\" +\n            \"Once the aircraft has reached the target heading, the sidebar value will display the current heading again, in White.\\n\\n\" +\n            \"You can choose any value between 000 and 360 degrees, always as three digits.\",\n            \"Next\",\n            this.next\n        )\n        this.initialised = true\n    }\n\n    next = () => {\n        this.machine.machine.clear()\n        this.machine.interfaceController.clearCommandEntry()\n        this.machine.transitionTo(new _TutorialAircraftWaypoint__WEBPACK_IMPORTED_MODULE_1__.TutorialAircraftWaypoint(this.map))\n    }\n\n    _aircraftHeading = () => {\n        const plane = new _Domain_Aeroplane_Aeroplane__WEBPACK_IMPORTED_MODULE_0__.Aeroplane(\n            'LH534',\n            'TUT',\n            0.5 * this.map.mapBoundaries.maxX,\n            0.3 * this.map.mapBoundaries.maxY,\n            180,\n            90,\n            5000,\n            1)\n        this.machine.machine.aeroplanes.push(plane)\n    }\n}\n\n//# sourceURL=webpack://atc/./src/States/Tutorial/TutorialAircraftHeading.js?");

/***/ }),

/***/ "./src/States/Tutorial/TutorialAircraftHolding.js":
/*!********************************************************!*\
  !*** ./src/States/Tutorial/TutorialAircraftHolding.js ***!
  \********************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"TutorialAircraftHolding\": () => (/* binding */ TutorialAircraftHolding)\n/* harmony export */ });\n/* harmony import */ var _Domain_Aeroplane_Aeroplane__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../Domain/Aeroplane/Aeroplane */ \"./src/Domain/Aeroplane/Aeroplane.js\");\n/* harmony import */ var _TutorialAircraftMultipleCommands__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./TutorialAircraftMultipleCommands */ \"./src/States/Tutorial/TutorialAircraftMultipleCommands.js\");\n\n\n\nclass TutorialAircraftHolding {\n    constructor(map) {\n        this.map = map\n        this.machine = undefined\n        this.initialised = false\n    }\n\n    setMachine = (machine) => {\n        this.machine = machine\n    }\n\n    init = () => {\n        this.machine.machine.clear()\n        this._baseAircraft()\n        this.machine.interfaceController.showHint(\n            \"Holding pattern\",\n            \"When things get overwhelming or you need more time, you can direct an aircraft to enter a holding pattern.\\n\\n\" +\n            \"This causes the aircraft to turn in a circle until you direct it otherwise.\\n\\n\" +\n            \"The holding pattern can be to the right (R) or to the left (L).\\n\\n\" +\n            \"Select the aircraft and type the command below into the command field after the call sign, and press Enter.\",\n            \"HR\",\n            \"This will direct the aircraft to enter a holding pattern to the right.\\n\\n\" +\n            \"Notice in the sidebar that the heading indicator now shows a Blue 'Hold'. This will remain until you issue a different directional command.\",\n            \"Next\",\n            this.next\n        )\n        this.initialised = true\n    }\n\n    next = () => {\n        this.machine.machine.clear()\n        this.machine.interfaceController.clearCommandEntry()\n        this.machine.transitionTo(new _TutorialAircraftMultipleCommands__WEBPACK_IMPORTED_MODULE_1__.TutorialAircraftMultipleCommands(this.map))\n    }\n\n    _baseAircraft = () => {\n        const plane = new _Domain_Aeroplane_Aeroplane__WEBPACK_IMPORTED_MODULE_0__.Aeroplane(\n            'GN231',\n            'TUT',\n            0.4 * this.map.mapBoundaries.maxX,\n            0.2 * this.map.mapBoundaries.maxY,\n            210,\n            90,\n            5000,\n            1)\n        this.machine.machine.aeroplanes.push(plane)\n    }\n}\n\n//# sourceURL=webpack://atc/./src/States/Tutorial/TutorialAircraftHolding.js?");

/***/ }),

/***/ "./src/States/Tutorial/TutorialAircraftMultipleCommands.js":
/*!*****************************************************************!*\
  !*** ./src/States/Tutorial/TutorialAircraftMultipleCommands.js ***!
  \*****************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"TutorialAircraftMultipleCommands\": () => (/* binding */ TutorialAircraftMultipleCommands)\n/* harmony export */ });\n/* harmony import */ var _Domain_Aeroplane_Aeroplane__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../Domain/Aeroplane/Aeroplane */ \"./src/Domain/Aeroplane/Aeroplane.js\");\n/* harmony import */ var _TutorialLanding__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./TutorialLanding */ \"./src/States/Tutorial/TutorialLanding.js\");\n\n\n\nclass TutorialAircraftMultipleCommands {\n    constructor(map) {\n        this.map = map\n        this.machine = undefined\n        this.initialised = false\n    }\n\n    setMachine = (machine) => {\n        this.machine = machine\n    }\n\n    init = () => {\n        this.machine.machine.clear()\n        this._baseAircraft()\n        this.machine.interfaceController.showHint(\n            \"Multiple Commands\",\n            \"You can issue multiple commands at the same time.\\n\\n\" +\n            \"Try issuing heading, speed and altitude commands at the same time.\\n\\n\" +\n            \"Select the aircraft and type the command below into the command field after the call sign, and press Enter.\",\n            \"T135S200A38\",\n            \"This will direct the aircraft to turn to heading 135, reduce speed to 200 and descend to 3800ft.\\n\\n\" +\n            \"Watch all the relevant indicators change and all values in the sidebar turn Blue until they are attained.\\n\\n\" +\n            \"Note that an aircraft can be in a holding pattern and accept speed and altitude commands so that the aircraft reduces speed and descends whilst holding.\",\n            \"Next\",\n            this.next\n        )\n        this.initialised = true\n    }\n\n    next = () => {\n        this.machine.machine.clear()\n        this.machine.interfaceController.clearCommandEntry()\n        this.machine.transitionTo(new _TutorialLanding__WEBPACK_IMPORTED_MODULE_1__.TutorialLanding(this.map))\n    }\n\n    _baseAircraft = () => {\n        const plane = new _Domain_Aeroplane_Aeroplane__WEBPACK_IMPORTED_MODULE_0__.Aeroplane(\n            'GN231',\n            'TUT',\n            0.2 * this.map.mapBoundaries.maxX,\n            0.2 * this.map.mapBoundaries.maxY,\n            280,\n            90,\n            5000,\n            1)\n        this.machine.machine.aeroplanes.push(plane)\n    }\n}\n\n//# sourceURL=webpack://atc/./src/States/Tutorial/TutorialAircraftMultipleCommands.js?");

/***/ }),

/***/ "./src/States/Tutorial/TutorialAircraftSpeed.js":
/*!******************************************************!*\
  !*** ./src/States/Tutorial/TutorialAircraftSpeed.js ***!
  \******************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"TutorialAircraftSpeed\": () => (/* binding */ TutorialAircraftSpeed)\n/* harmony export */ });\n/* harmony import */ var _Domain_Aeroplane_Aeroplane__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../Domain/Aeroplane/Aeroplane */ \"./src/Domain/Aeroplane/Aeroplane.js\");\n/* harmony import */ var _TutorialAircraftAltitude__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./TutorialAircraftAltitude */ \"./src/States/Tutorial/TutorialAircraftAltitude.js\");\n/* harmony import */ var _config_constants__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../config/constants */ \"./src/config/constants.js\");\n\n\n\n\nclass TutorialAircraftSpeed {\n    constructor(map) {\n        this.map = map\n        this.machine = undefined\n        this.initialised = false\n    }\n\n    setMachine = (machine) => {\n        this.machine = machine\n    }\n\n    init = () => {\n        this.machine.machine.clear()\n        this._aircraftSpeed()\n        this.machine.interfaceController.showHint(\n            \"Controlling speed\",\n            \"Currently, EZ887 is flying at 260 knots.\\n\\n\" +\n            \"You can see this on the aircraft label and its sidebar strip (the first of the three numbers).\\n\\n\" +\n            \"Select the aircraft and type the command below into the command field after the call sign, and press Enter.\",\n            \"S200\",\n            \"This will tell the aeroplane to slow down to 200 knots.\\n\\n\" +\n            \"Watch the first number on the aircraft label change as the aircraft slows down.\\n\\n\" +\n            \"Like before, the first number on the sidebar has changed to Blue and shows the target speed value and will change back to white once the aircraft has reached the target speed.\\n\\n\" +\n            `You can choose any value between ${_config_constants__WEBPACK_IMPORTED_MODULE_2__.MIN_SPEED} and ${_config_constants__WEBPACK_IMPORTED_MODULE_2__.MAX_SPEED} knots.\\n\\n` +\n            \"Notice how the length of the tail of the aircraft becomes shorter as the speed reduces.\",\n            \"Next\",\n            this.next\n        )\n        this.initialised = true\n    }\n\n    next = () => {\n        this.machine.machine.clear()\n        this.machine.interfaceController.clearCommandEntry()\n        this.machine.transitionTo(new _TutorialAircraftAltitude__WEBPACK_IMPORTED_MODULE_1__.TutorialAircraftAltitude(this.map))\n    }\n\n    _aircraftSpeed = () => {\n        const plane = new _Domain_Aeroplane_Aeroplane__WEBPACK_IMPORTED_MODULE_0__.Aeroplane(\n            'EZ887',\n            'TUT',\n            0.1 * this.map.mapBoundaries.maxX,\n            0.1 * this.map.mapBoundaries.maxY,\n            260,\n            110,\n            8000,\n            1)\n        this.machine.machine.aeroplanes.push(plane)\n    }\n}\n\n//# sourceURL=webpack://atc/./src/States/Tutorial/TutorialAircraftSpeed.js?");

/***/ }),

/***/ "./src/States/Tutorial/TutorialAircraftWaypoint.js":
/*!*********************************************************!*\
  !*** ./src/States/Tutorial/TutorialAircraftWaypoint.js ***!
  \*********************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"TutorialAircraftWaypoint\": () => (/* binding */ TutorialAircraftWaypoint)\n/* harmony export */ });\n/* harmony import */ var _Domain_Aeroplane_Aeroplane__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../Domain/Aeroplane/Aeroplane */ \"./src/Domain/Aeroplane/Aeroplane.js\");\n/* harmony import */ var _TutorialAircraftSpeed__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./TutorialAircraftSpeed */ \"./src/States/Tutorial/TutorialAircraftSpeed.js\");\n\n\n\nclass TutorialAircraftWaypoint {\n    constructor(map) {\n        this.map = map\n        this.machine = undefined\n        this.initialised = false\n    }\n\n    setMachine = (machine) => {\n        this.machine = machine\n    }\n\n    init = () => {\n        this.machine.machine.clear()\n        this._baseAircraft()\n        this.machine.interfaceController.showHint(\n            \"Waypoints\",\n            \"You can send an aircraft directly to a waypoint.\\n\\n\" +\n            \"The aircraft will turn the shortest distance and fly towards the specified waypoint.\\n\\n\" +\n            \"Select the aircraft and type the command below into the command field after the call sign, and press Enter.\",\n            \"-EPM\",\n            \"This will direct the aircraft to turn and fly towards waypoint EPM (Epsom) towards the bottom of the map.\\n\\n\" +\n            \"Notice that the heading indicator in the sidebar has turned Blue and references EPM, while the aeroplane label on the map still shows the current heading.\\n\\n\" +\n            \"When the aeroplane reaches the waypoint, it will continue on its current heading.\\n\\n\" +\n            \"Try some other waypoints and notice how the most recent command overrides a previous one.\",\n            \"Next\",\n            this.next\n        )\n        this.initialised = true\n    }\n\n    next = () => {\n        this.machine.machine.clear()\n        this.machine.interfaceController.clearCommandEntry()\n        this.machine.transitionTo(new _TutorialAircraftSpeed__WEBPACK_IMPORTED_MODULE_1__.TutorialAircraftSpeed(this.map))\n    }\n\n    _baseAircraft = () => {\n        const plane = new _Domain_Aeroplane_Aeroplane__WEBPACK_IMPORTED_MODULE_0__.Aeroplane(\n            'GN231',\n            'TUT',\n            0.7 * this.map.mapBoundaries.maxX,\n            0.2 * this.map.mapBoundaries.maxY,\n            240,\n            250,\n            5000,\n            1)\n        this.machine.machine.aeroplanes.push(plane)\n    }\n}\n\n//# sourceURL=webpack://atc/./src/States/Tutorial/TutorialAircraftWaypoint.js?");

/***/ }),

/***/ "./src/States/Tutorial/TutorialDeparting.js":
/*!**************************************************!*\
  !*** ./src/States/Tutorial/TutorialDeparting.js ***!
  \**************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"TutorialDeparting\": () => (/* binding */ TutorialDeparting)\n/* harmony export */ });\n/* harmony import */ var _Domain_Aeroplane_Aeroplane__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../Domain/Aeroplane/Aeroplane */ \"./src/Domain/Aeroplane/Aeroplane.js\");\n/* harmony import */ var _config_constants__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../config/constants */ \"./src/config/constants.js\");\n/* harmony import */ var _Domain_Aeroplane_aeroplaneStates__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../Domain/Aeroplane/aeroplaneStates */ \"./src/Domain/Aeroplane/aeroplaneStates.js\");\n/* harmony import */ var _TutorialTargets__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./TutorialTargets */ \"./src/States/Tutorial/TutorialTargets.js\");\n\n\n\n\n\nclass TutorialDeparting {\n    constructor(map) {\n        this.map = map\n        this.machine = undefined\n        this.initialised = false\n        this.hint = 0\n    }\n\n    setMachine = (machine) => {\n        this.machine = machine\n    }\n\n    init = () => {\n        this.machine.machine.clear()\n        this.next()\n        this.initialised = true\n    }\n\n    next = (clearAeroplanes = true) => {\n        if (clearAeroplanes) {\n            this.machine.machine.clear()\n        }\n        this.machine.interfaceController.clearCommandEntry()\n        this.machine.interfaceController.hideHint()\n        this.machine.interfaceController.blurAttention()\n        const hint = this.getHint(this.hint)\n        hint.spawnFunction && hint.spawnFunction()\n        hint.focusConfig && this.machine.interfaceController.focusAttention(hint.focusConfig)\n        this.machine.interfaceController.showHint(\n            hint.hintTitle,\n            hint.hintBodyBefore,\n            hint.hintCode,\n            hint.hintBodyAfter,\n            hint.confirmButtonText,\n            hint.confirmButtonCallback\n        )\n        this.hint += 1\n    }\n\n    nextTutorialMode = () => {\n        this.machine.transitionTo(new _TutorialTargets__WEBPACK_IMPORTED_MODULE_3__.TutorialTargets(this.map))\n    }\n\n    getHint = (index) => {\n        const hints = [\n            {\n                hintTitle: \"Departing aircraft\",\n                hintBodyBefore: \"So far we have seen how to control aircraft and how to get them to land.\\n\\n\" +\n                    \"Next we will look at how to direct an aircraft to taxi, takeoff and depart in the direction we want.\",\n                hintCode: \"\",\n                hintBodyAfter: \"\",\n                confirmButtonText: \"Next\",\n                confirmButtonCallback: this.next\n            },\n            {\n                hintTitle: \"Identifying a departure\",\n                hintBodyBefore: \"Aircraft that are looking to depart will not appear on the map as they are still waiting at the airport gate.\\n\\n\"\n                    + \"A departing aircraft has been spawned and is ready to be issued commands.\\n\\n\"\n                    + \"Notice the new, pale blue sidebar strip. Notice also, that its current heading, speed and altitude values are all 0 and the aircraft state in the top right of the strip says 'Ready'.\\n\\n\"\n                    + \"This shows you that the aircraft is ready to taxi and can be issued commands.\",\n                hintCode: \"\",\n                hintBodyAfter: \"\",\n                confirmButtonText: \"Next\",\n                confirmButtonCallback: () => this.next(false),\n                spawnFunction: this.newDeparture\n            },\n            {\n                hintTitle: \"Future Commands (optional)\",\n                hintBodyBefore: \"At any point before takeoff, you may issue commands to the aircraft that will be actioned once the aircraft is flying. You can change these as often as you like, except for takeoff clearance.\\n\\n\" +\n                    \"Try issuing a waypoint, speed and altitude command, e.g.:\",\n                hintCode: \"-MAYS300A280\",\n                hintBodyAfter: \"Notice that the target values have been updated on the sidebar strip, but that there is no aircraft on the map yet.\\n\\n\" +\n                    \"Later we will see what happens after takeoff if you decide not to issue commands in advance.\",\n                confirmButtonText: \"Next\",\n                confirmButtonCallback: () => this.next(false),\n            },\n            {\n                hintTitle: \"Taxiing\",\n                hintBodyBefore: \"Now let's issue taxi clearance and have the aircraft hold short of our desired runway.\\n\\n\"\n                    + \"Let's say we want the aircraft to taxi to runway 9R so that it can take off towards the East (90 degrees).\\n\\n\"\n                    + \"Use the following command:\",\n                hintCode: \"TH9R\",\n                hintBodyAfter: \"This stands for T(axi) and H(old) short of runway 9R.\\n\\n\" +\n                    \"Now, the aircraft will begin its taxi (note the 'Taxi' state in the top right of the sidebar strip), which could take some time and eventually you will see it appear at the end of the runway.\\n\\n\" +\n                    \"The strip will then update the aircraft state with the current runway at which it is waiting.\\n\\n\" +\n                    \"The aircraft is now heading 90 degrees on runway 9R and ready to take off.\\n\\n\",\n                confirmButtonText: \"Next\",\n                confirmButtonCallback: () => this.next(false),\n            },\n            {\n                hintTitle: \"Clearing for takeoff\",\n                hintBodyBefore: \"An aircraft can accept takeoff clearance at any point when it is on the ground. Once issued, it cannot be revoked.\\n\\n\" +\n                    \"Issue the C(leared) for T(ake) O(ff) command:\",\n                hintCode: \"CTO\",\n                hintBodyAfter: \"The aircraft will accelerate down the runway to reach 200kts, takeoff, fly the runway heading and then climb and maintain 2,000ft.\\n\\n\" +\n                    \"If you did NOT issue future commands, the aircraft will continue on this course.\\n\\n\" +\n                    \"If you did issue future commands, these will begin to be actioned once 200kts and 2,000ft are achieved.\\n\\n\" +\n                    \"Hopefully you entered the command in the previous step and should now see the aircraft taking off, climbing, accelerating and turning towards the MAY waypoint.\\n\\n\" +\n                    \"Turn on Projected Paths above if you haven't done so already to help visualise the route the aircraft will take!\",\n                confirmButtonText: \"Next\",\n                confirmButtonCallback: this.next,\n            },\n            {\n                hintTitle: \"Departing aircraft - your turn\",\n                hintBodyBefore: \"Now it is your turn.\\n\\n\"\n                    + \"Guide the waiting aircraft to depart towards Brookman's Park (BPK).\\n\\n\"\n                    + \"Consider which runway makes most sense and T(axi) and H(old) and issue the C(leared) for T(ake) O(ff) command.\",\n                hintCode: \"\",\n                hintBodyAfter: \"\",\n                confirmButtonText: \"Next\",\n                confirmButtonCallback: () => this.next(false),\n                spawnFunction: this.theirTurnDeparture\n            },\n            {\n                hintTitle: \"Successful departing aircraft\",\n                hintBodyBefore: \"A departure counts as successful when the aircraft leaves the map.\",\n                hintCode: \"\",\n                hintBodyAfter: \"\",\n                confirmButtonText: \"Next\",\n                confirmButtonCallback: this.next,\n            },\n            {\n                hintTitle: \"Congratulations!\",\n                hintBodyBefore: \"You have learned how to control departing aircraft.\\n\\n\" +\n                    \"Next, we will step things up, and introduce targets and statistics\",\n                hintCode: \"\",\n                hintBodyAfter: \"\",\n                confirmButtonText: \"Next\",\n                confirmButtonCallback: this.nextTutorialMode,\n            },\n        ]\n\n        return hints[index]\n    }\n\n    newDeparture = () => {\n        const plane = new _Domain_Aeroplane_Aeroplane__WEBPACK_IMPORTED_MODULE_0__.Aeroplane(\n            'YK423',\n            'TUT',\n            1,\n            1,\n            0,\n            0,\n            0,\n            2,\n            _config_constants__WEBPACK_IMPORTED_MODULE_1__.DEPARTURE,\n            _Domain_Aeroplane_aeroplaneStates__WEBPACK_IMPORTED_MODULE_2__.READY_TO_TAXI)\n        this.machine.machine.aeroplanes.push(plane)\n    }\n\n    theirTurnDeparture = () => {\n        const plane = new _Domain_Aeroplane_Aeroplane__WEBPACK_IMPORTED_MODULE_0__.Aeroplane(\n            'UN903',\n            'TUT',\n            1,\n            1,\n            0,\n            0,\n            0,\n            2,\n            _config_constants__WEBPACK_IMPORTED_MODULE_1__.DEPARTURE,\n            _Domain_Aeroplane_aeroplaneStates__WEBPACK_IMPORTED_MODULE_2__.READY_TO_TAXI)\n        this.machine.machine.aeroplanes.push(plane)\n    }\n\n\n}\n\n//# sourceURL=webpack://atc/./src/States/Tutorial/TutorialDeparting.js?");

/***/ }),

/***/ "./src/States/Tutorial/TutorialLanding.js":
/*!************************************************!*\
  !*** ./src/States/Tutorial/TutorialLanding.js ***!
  \************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"TutorialLanding\": () => (/* binding */ TutorialLanding)\n/* harmony export */ });\n/* harmony import */ var _Domain_Aeroplane_Aeroplane__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../Domain/Aeroplane/Aeroplane */ \"./src/Domain/Aeroplane/Aeroplane.js\");\n/* harmony import */ var _config_constants__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../config/constants */ \"./src/config/constants.js\");\n/* harmony import */ var _TutorialDeparting__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./TutorialDeparting */ \"./src/States/Tutorial/TutorialDeparting.js\");\n\n\n\n\nclass TutorialLanding {\n    constructor(map) {\n        this.map = map\n        this.machine = undefined\n        this.initialised = false\n        this.hint = 0\n    }\n\n    setMachine = (machine) => {\n        this.machine = machine\n    }\n\n    init = () => {\n        this.machine.machine.clear()\n        this.next()\n        this.initialised = true\n    }\n\n    next = () => {\n        this.machine.machine.clear()\n        this.machine.interfaceController.clearCommandEntry()\n        this.machine.interfaceController.hideHint()\n        this.machine.interfaceController.blurAttention()\n        const hint = this.getHint(this.hint)\n        hint.spawnFunction && hint.spawnFunction()\n        hint.focusConfig && this.machine.interfaceController.focusAttention(hint.focusConfig)\n        this.machine.interfaceController.showHint(\n            hint.hintTitle,\n            hint.hintBodyBefore,\n            hint.hintCode,\n            hint.hintBodyAfter,\n            hint.confirmButtonText,\n            hint.confirmButtonCallback\n        )\n        this.hint += 1\n    }\n\n    nextTutorialMode = () => {\n        this.machine.transitionTo(new _TutorialDeparting__WEBPACK_IMPORTED_MODULE_2__.TutorialDeparting(this.map))\n    }\n\n    getHint = (index) => {\n        const hints = [\n            {\n                hintTitle: \"Landing aircraft\",\n                hintBodyBefore: \"So far we have seen how to control aircraft direction, speed and altitude.\\n\\n\" +\n                    \"Next we will look at how to issue a landing clearance.\",\n                hintCode: \"\",\n                hintBodyAfter: \"\",\n                confirmButtonText: \"Next\",\n                confirmButtonCallback: this.next\n            },\n            {\n                hintTitle: \"Landing - Location\",\n                hintBodyBefore: \"To issue a landing clearance, the aircraft must be within certain tolerances:\\n\\n\"\n                    + \"- At or below 3,000ft\\n\"\n                    + \"- At or below 200 knots\\n\"\n                    + \"- Facing the runway on which to land\\n\"\n                    + \"- Within 10 degrees of the runway heading\\n\"\n                    + \"- Within the width of the landing feather\\n\"\n                    + \"- Horizontally within the inner line of the runway feather\\n\\n\"\n                    + \"The runway 'feather' is the faded grey dotted arrow-shaped line extending from the end of each runway.\\n\\n\"\n                    + \"Let's see some INCORRECT landing configurations in which an aircraft will NOT accept landing clearance.\",\n                hintCode: \"\",\n                hintBodyAfter: \"\",\n                confirmButtonText: \"Next\",\n                confirmButtonCallback: this.next,\n                focusConfig: this.map.focusableConfig.landingFeather\n            },\n            {\n                hintTitle: \"Landing - Incorrect Location\",\n                hintBodyBefore: \"Let's say we're aiming to land on runway 9L.\\n\\n\"\n                    + \"This aeroplane is correctly facing the runway heading but it is too far to the left of the runway (when facing the runway).\\n\\n\"\n                    + \"Therefore landing clearance will not be accepted.\",\n                hintCode: \"\",\n                hintBodyAfter: \"\",\n                confirmButtonText: \"Next\",\n                confirmButtonCallback: this.next,\n                spawnFunction: this.notNearRunway\n            },\n            {\n                hintTitle: \"Landing - Too far away\",\n                hintBodyBefore: \"Aiming for runway 9L, the aircraft is facing the correct direction.\\n\\n\"\n                    + \"However the aircraft is too far away from the landing feather for now.\\n\\n\"\n                    + \"Therefore landing clearance will not be accepted.\",\n                hintCode: \"\",\n                hintBodyAfter: \"\",\n                confirmButtonText: \"Next\",\n                confirmButtonCallback: this.next,\n                spawnFunction: this.tooFarAway\n            },\n            {\n                hintTitle: \"Landing - Too close\",\n                hintBodyBefore: \"Aiming for runway 9L, the aircraft is facing the correct direction.\\n\\n\"\n                    + \"However the aircraft is too close to the runway and has travelled beyond the horizontal line inside the runway feather.\\n\\n\"\n                    + \"This means the aircraft will not have enough time to execute its landing procedure.\\n\\n\"\n                    + \"Therefore landing clearance will not be accepted.\",\n                hintCode: \"\",\n                hintBodyAfter: \"\",\n                confirmButtonText: \"Next\",\n                confirmButtonCallback: this.next,\n                spawnFunction: this.tooClose\n            },\n            {\n                hintTitle: \"Landing - Incorrect Heading\",\n                hintBodyBefore: \"Again we're aiming for 9L.\\n\\n\"\n                    + \"This aeroplane is in line with the runway but not heading within 10 degrees of the runway heading.\\n\\n\"\n                    + \"The aeroplane is heading 070 degrees while the runway has a heading of 090 degrees.\\n\\n\"\n                    + \"Therefore landing clearance will not be accepted.\",\n                hintCode: \"\",\n                hintBodyAfter: \"\",\n                confirmButtonText: \"Next\",\n                confirmButtonCallback: this.next,\n                spawnFunction: this.notCorrectHeading\n            },\n            {\n                hintTitle: \"Landing - Incorrect Speed\",\n                hintBodyBefore: \"We are correctly lined up for runway 9L.\\n\\n\"\n                    + \"However this aeroplane is too fast, travelling at 240 knots.\\n\\n\"\n                    + \"It should be at or below 200 knots to accept landing clearance.\\n\\n\"\n                    + \"Therefore landing clearance will not be accepted.\",\n                hintCode: \"\",\n                hintBodyAfter: \"\",\n                confirmButtonText: \"Next\",\n                confirmButtonCallback: this.next,\n                spawnFunction: this.tooFast\n            },\n            {\n                hintTitle: \"Landing - Incorrect Altitude\",\n                hintBodyBefore: \"We are correctly lined up for runway 9L and travelling at a good speed.\\n\\n\"\n                    + \"However this aeroplane is too high, currently at 4,000ft.\\n\\n\"\n                    + \"It should be at or below 3,000ft to accept landing clearance.\\n\\n\"\n                    + \"Therefore landing clearance will not be accepted.\",\n                hintCode: \"\",\n                hintBodyAfter: \"\",\n                confirmButtonText: \"Next\",\n                confirmButtonCallback: this.next,\n                spawnFunction: this.tooHigh\n            },\n            {\n                hintTitle: \"Landing - Correct Configuration\",\n                hintBodyBefore: \"Now let's look at a correct landing configuration that will allow landing clearance to be accepted.\",\n                hintCode: \"\",\n                hintBodyAfter: \"\",\n                confirmButtonText: \"Next\",\n                confirmButtonCallback: this.next,\n            },\n            {\n                hintTitle: \"Landing - Correct Configuration\",\n                hintBodyBefore: \"This aeroplane is facing the runway and within 10 degrees of the runway heading.\\n\\n\"\n                    + \"It's speed is below 200 and it is below 3,000ft.\\n\\n\"\n                    + \"Therefore landing clearance WILL be accepted.\\n\\n\"\n                    + \"Let's issue the landing clearance next.\",\n                hintCode: \"\",\n                hintBodyAfter: \"\",\n                confirmButtonText: \"Next\",\n                confirmButtonCallback: this.next,\n                spawnFunction: this.correctConfiguration9L\n            },\n            {\n                hintTitle: \"Issuing Landing Clearance [1/2]\",\n                hintBodyBefore: \"Select the aircraft and type the following command to issue landing clearance for runway 9L:\",\n                hintCode: \"ILS9L\",\n                hintBodyAfter: \"'ILS' stands for 'Instrument Landing System'.\\n\\n\" +\n                    \"Notice that the sidebar strip shows a Blue 'Landing' indicator and watch the aircraft label values change as the aircraft follows its landing procedure on your behalf.\\n\\n\" +\n                    \"Once the aircraft lands on the runway, the aircraft and its associated sidebar strip will disappear and the 'Landed' count in the top right corner of the screen will go up by one.\\n\\n\",\n                confirmButtonText: \"Next\",\n                confirmButtonCallback: this.next,\n                spawnFunction: this.correctConfiguration9L\n            },\n            {\n                hintTitle: \"Issuing Landing Clearance [2/2]\",\n                hintBodyBefore: \"Let's try another one for 27R:\",\n                hintCode: \"ILS27R\",\n                hintBodyAfter: \"\",\n                confirmButtonText: \"Next\",\n                confirmButtonCallback: this.next,\n                spawnFunction: this.correctConfiguration27R\n            },\n            {\n                hintTitle: \"Congratulations!\",\n                hintBodyBefore: \"You have landed your first planes!\\n\\n\" +\n                    \"Now let us see how to handle departures.\",\n                hintCode: \"\",\n                hintBodyAfter: \"\",\n                confirmButtonText: \"Next\",\n                confirmButtonCallback: this.nextTutorialMode,\n            },\n        ]\n\n        return hints[index]\n    }\n\n    notNearRunway = () => {\n        const plane = new _Domain_Aeroplane_Aeroplane__WEBPACK_IMPORTED_MODULE_0__.Aeroplane(\n            'AB123',\n            'TUT',\n            0.3 * this.map.mapBoundaries.maxX,\n            0.4 * this.map.mapBoundaries.maxY,\n            200,\n            90,\n            6000,\n            2)\n        this.machine.machine.aeroplanes.push(plane)\n    }\n\n    tooFarAway = () => {\n        const plane = new _Domain_Aeroplane_Aeroplane__WEBPACK_IMPORTED_MODULE_0__.Aeroplane(\n            'AB123',\n            'TUT',\n            0.25 * this.map.mapBoundaries.maxX,\n            0.5 * this.map.mapBoundaries.maxY,\n            200,\n            90,\n            4000,\n            2)\n        this.machine.machine.aeroplanes.push(plane)\n    }\n\n    tooClose = () => {\n        const plane = new _Domain_Aeroplane_Aeroplane__WEBPACK_IMPORTED_MODULE_0__.Aeroplane(\n            'AB123',\n            'TUT',\n            0.4 * this.map.mapBoundaries.maxX,\n            0.5 * this.map.mapBoundaries.maxY,\n            200,\n            90,\n            2500,\n            2)\n        this.machine.machine.aeroplanes.push(plane)\n    }\n\n    notCorrectHeading = () => {\n        const plane = new _Domain_Aeroplane_Aeroplane__WEBPACK_IMPORTED_MODULE_0__.Aeroplane(\n            'AB123',\n            'TUT',\n            0.32 * this.map.mapBoundaries.maxX,\n            0.52 * this.map.mapBoundaries.maxY,\n            200,\n            70,\n            2500,\n            2)\n        this.machine.machine.aeroplanes.push(plane)\n    }\n\n    tooFast = () => {\n        const plane = new _Domain_Aeroplane_Aeroplane__WEBPACK_IMPORTED_MODULE_0__.Aeroplane(\n            'AB123',\n            'TUT',\n            0.33 * this.map.mapBoundaries.maxX,\n            0.5 * this.map.mapBoundaries.maxY,\n            240,\n            90,\n            2500,\n            2)\n        this.machine.machine.aeroplanes.push(plane)\n    }\n\n    tooHigh = () => {\n        const plane = new _Domain_Aeroplane_Aeroplane__WEBPACK_IMPORTED_MODULE_0__.Aeroplane(\n            'AB123',\n            'TUT',\n            0.33 * this.map.mapBoundaries.maxX,\n            0.5 * this.map.mapBoundaries.maxY,\n            180,\n            90,\n            4000,\n            2)\n        this.machine.machine.aeroplanes.push(plane)\n    }\n\n    correctConfiguration9L = () => {\n        const plane = new _Domain_Aeroplane_Aeroplane__WEBPACK_IMPORTED_MODULE_0__.Aeroplane(\n            'AB123',\n            'TUT',\n            0.48 * this.map.mapBoundaries.maxX - _config_constants__WEBPACK_IMPORTED_MODULE_1__.ILS_MAX_X,\n            0.5 * this.map.mapBoundaries.maxY,\n            180,\n            90,\n            2800,\n            2)\n        this.machine.machine.aeroplanes.push(plane)\n    }\n\n    correctConfiguration27R = () => {\n        const plane = new _Domain_Aeroplane_Aeroplane__WEBPACK_IMPORTED_MODULE_0__.Aeroplane(\n            'AB123',\n            'TUT',\n            0.52 * this.map.mapBoundaries.maxX + _config_constants__WEBPACK_IMPORTED_MODULE_1__.ILS_MAX_X,\n            0.5 * this.map.mapBoundaries.maxY,\n            180,\n            270,\n            2800,\n            2)\n        this.machine.machine.aeroplanes.push(plane)\n    }\n\n}\n\n//# sourceURL=webpack://atc/./src/States/Tutorial/TutorialLanding.js?");

/***/ }),

/***/ "./src/States/Tutorial/TutorialMapOverview.js":
/*!****************************************************!*\
  !*** ./src/States/Tutorial/TutorialMapOverview.js ***!
  \****************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"TutorialMapOverview\": () => (/* binding */ TutorialMapOverview)\n/* harmony export */ });\n/* harmony import */ var _Domain_Aeroplane_Aeroplane__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../Domain/Aeroplane/Aeroplane */ \"./src/Domain/Aeroplane/Aeroplane.js\");\n/* harmony import */ var _TutorialSelectingAircraftClicking__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./TutorialSelectingAircraftClicking */ \"./src/States/Tutorial/TutorialSelectingAircraftClicking.js\");\n\n\n\nclass TutorialMapOverview {\n    constructor(map) {\n        this.map = map\n        this.machine = undefined\n        this.initialised = false\n        this.hint = 0\n    }\n\n    setMachine = (machine) => {\n        this.machine = machine\n    }\n\n    init = () => {\n        this.machine.machine.clear()\n        this.next()\n        this.initialised = true\n    }\n\n    next = () => {\n        this.machine.machine.clear()\n        this.machine.interfaceController.clearCommandEntry()\n        this.machine.interfaceController.hideHint()\n        this.machine.interfaceController.blurAttention()\n        const hint = this.getHint(this.hint)\n        hint.spawnFunction && hint.spawnFunction()\n        hint.focusConfig && this.machine.interfaceController.focusAttention(hint.focusConfig)\n        this.machine.interfaceController.showHint(\n            hint.hintTitle,\n            hint.hintBodyBefore,\n            hint.hintCode,\n            hint.hintBodyAfter,\n            hint.confirmButtonText,\n            hint.confirmButtonCallback\n        )\n        this.hint += 1\n    }\n\n    nextTutorialMode = () => {\n        this.machine.transitionTo(new _TutorialSelectingAircraftClicking__WEBPACK_IMPORTED_MODULE_1__.TutorialSelectingAircraftClicking(this.map))\n    }\n\n    getHint = (index) => {\n        const hints = [\n            {\n                hintTitle: \"Welcome!\",\n                hintBodyBefore: \"Your goal in this game is to issue commands to aircraft to guide them to land on a runway or depart correctly.\\n\\n\" +\n                    \"While doing this, avoid guiding planes into restricted areas or getting the planes too close to one another.\",\n                hintCode: \"\",\n                hintBodyAfter: \"\",\n                confirmButtonText: \"Next\",\n                confirmButtonCallback: this.next\n            },\n            {\n                hintTitle: \"Overview\",\n                hintBodyBefore: \"This tutorial will take you through the interface and the core gameplay.\\n\\n\"\n                    + \"You are looking at an air traffic control radioscope.\\n\\n\"\n                    + \"This is a map of the surrounding area of an airport. In this case London Heathrow.\\n\\n\"\n                    + \"The view is from above.\\n\\n\"\n                    + \"The airport is exactly in the middle of the map.\\n\\n\"\n                    + \"Click 'Next' to continue (you may need to scroll down inside this panel).\",\n                hintCode: \"\",\n                hintBodyAfter: \"\",\n                confirmButtonText: \"Next\",\n                confirmButtonCallback: this.next\n            },\n            {\n                hintTitle: \"Projected paths\",\n                hintBodyBefore: \"Before we begin, press the Escape key and set Projected Paths to 'On'.\\n\\n\"\n                    + \"The tutorial will be more enjoyable!\",\n                hintCode: \"\",\n                hintBodyAfter: \"Press Escape to close the pause menu again\",\n                confirmButtonText: \"Next\",\n                confirmButtonCallback: this.next\n            },\n            {\n                hintTitle: \"Compass directions and heading\",\n                hintBodyBefore: \"A core idea is that of 'heading'.\\n\\n\"\n                    + \"A circle is made up of 360 degrees.\\n\\n\"\n                    + \"Now imagine a compass.\\n\\n\"\n                    + \"Directly North is 000 or 360 degrees.\\n\"\n                    + \"Directly East is 090 degrees.\\n\"\n                    + \"Directly South is 180 degrees.\\n\"\n                    + \"Directly West is 270 degrees.\\n\\n\"\n                    + \"Directly North East is 045 degrees.\\n\"\n                    + \"Directly South West is 225 degrees.\\n\"\n                    + \"etc..\\n\\n\"\n                    + \"You can reference any value between 000 and 360. We will see a lot more of this later.\\n\\n\"\n                    + \"The map on screen has North (000 degrees) at the top.\",\n                hintCode: \"\",\n                hintBodyAfter: \"\",\n                confirmButtonText: \"Next\",\n                confirmButtonCallback: this.next\n            },\n            {\n                hintTitle: \"Runways\",\n                hintBodyBefore: \"In the middle of the map are two horizontal green lines.\\n\\n\"\n                    + \"These are the runways.\\n\\n\"\n                    + \"The labels on the end of the runways show how to reference the runway.\\n\\n\"\n                    + \"The structure is the runway heading (in tens of degrees) and its position in relation to other runways.\\n\\n\"\n                    + \"For example, 27L means the runway has a heading of 270 degrees and is to the left of other runways.\\n\\n\"\n                    + \"Equally, 9R means the runway has a heading of 090 degrees and is to the right of other runways.\\n\\n\"\n                    + \"There are two runways but four directions from which aircraft can land, namely: 9L, 9R, 27L and 27R.\\n\\n\",\n                hintCode: \"\",\n                hintBodyAfter: \"\",\n                confirmButtonText: \"Next\",\n                confirmButtonCallback: this.next,\n                focusConfig: this.map.focusableConfig.runways\n            },\n            {\n                hintTitle: \"Waypoints\",\n                hintBodyBefore: \"Waypoints are shown as dotted circles with a dot in the centre and a three character label above.\\n\\n\" +\n                    \"Just above the runways there is the LON waypoint.\\n\\n\" +\n                    \"A short distance above that, is the CHT waypoint.\\n\\n\" +\n                    \"Waypoints are used to make navigation easier which we will see later.\",\n                hintCode: \"\",\n                hintBodyAfter: \"\",\n                confirmButtonText: \"Next\",\n                confirmButtonCallback: this.next,\n                focusConfig: this.map.focusableConfig.waypoint\n            },\n            {\n                hintTitle: \"Aeroplanes\",\n                hintBodyBefore: \"An aeroplane has been placed on the map.\\n\\n\" +\n                    \"Just above the aeroplane, is a label that shows current information about the aeroplane.\\n\\n\" +\n                    \"At the top is its Call Sign (AB123). This is how you refer to the plane.\\n\\n\" +\n                    \"The three numbers underneath show:\\n\\n\" +\n                    \"- Speed (200 knots)\\n\" +\n                    \"- Heading (90 degrees, directly East)\\n\" +\n                    \"- Altitude (6000ft)\\n\\n\" +\n                    \"Note: altitude is specified in 100s of feet\",\n                hintCode: \"\",\n                hintBodyAfter: \"\",\n                confirmButtonText: \"Next\",\n                confirmButtonCallback: this.next,\n                spawnFunction: this.basicAeroplane\n            },\n            {\n                hintTitle: \"Aeroplane speed tail\",\n                hintBodyBefore: \"An aeroplane also has a tail of slashes.\\n\\n\" +\n                    \"This tail denotes the speed of the aeroplane and its direction.\\n\\n\" +\n                    \"Compare the two aeroplanes currently on the map.\\n\\n\" +\n                    \"One is at 200 knots and its tail is shorter.\\n\\n\" +\n                    \"The other is at 300 knots and its tail is longer.\\n\\n\",\n                hintCode: \"\",\n                hintBodyAfter: \"\",\n                confirmButtonText: \"Next\",\n                confirmButtonCallback: this.next,\n                spawnFunction: this.speedComparisonAeroplanes\n            },\n            {\n                hintTitle: \"Restricted Zones\",\n                hintBodyBefore: \"Some areas of the map are restricted.\\n\\n\" +\n                    \"This is because they are above populated or protected areas.\\n\\n\" +\n                    \"Three types of restricted zones exist:\\n\\n\" +\n                    \"- Critical (red)\\n\" +\n                    \"- Moderate (orange)\\n\" +\n                    \"- Informational (blue)\",\n                hintCode: \"\",\n                hintBodyAfter: \"\",\n                confirmButtonText: \"Next\",\n                confirmButtonCallback: this.next,\n                focusConfig: this.map.focusableConfig.restrictedZone\n            },\n            {\n                hintTitle: \"Restricted Zone Labels\",\n                hintBodyBefore: \"Restricted zones have a label, for example: EG(R)-157 and indicators for the minimum and/or maximum altitude.\\n\\n\" +\n                    \"- An orange number shows the minimum altitude\\n\" +\n                    \"- A white number shows the maximum altitude.\\n\\n\" +\n                    \"The altitudes are given in 100s of feet. For example, 30 means 3000ft and 250 means 25,000ft.\\n\\n\" +\n                    \"If there are no numbers, then the zone is always out of bounds.\",\n                hintCode: \"\",\n                hintBodyAfter: \"\",\n                confirmButtonText: \"Next\",\n                confirmButtonCallback: this.next,\n                focusConfig: this.map.focusableConfig.restrictedZoneLabel\n            },\n            {\n                hintTitle: \"Breaching Restricted Zones\",\n                hintBodyBefore: \"An aircraft is heading towards a restricted zone.\\n\\n\" +\n                    \"The orange zone ahead, EG(R)-157, has a minimum altitude of 3000ft and a maximum altitude of 5000ft.\\n\\n\" +\n                    \"The aircraft is currently at 2500ft.\\n\\n\" +\n                    \"When the aircraft enters the restricted zone, it will breach the restrictions and you will be penalised.\\n\\n\" +\n                    \"The aeroplane will be highlighted in red and the timer in the top right corner will start counting up.\\n\\n\" +\n                    \"When the aeroplane leaves the area or its altitude falls within restrictions, the timer will stop and the plane will revert to its original colours.\",\n                hintCode: \"\",\n                hintBodyAfter: \"\",\n                confirmButtonText: \"Next\",\n                confirmButtonCallback: this.next,\n                spawnFunction: this.towardsRestrictionBreach\n            },\n            {\n                hintTitle: \"Controlling Aircraft\",\n                hintBodyBefore: \"At the bottom of the screen, in the middle, is the command entry field.\\n\\n\" +\n                    \"This is where you will type commands to aeroplanes.\\n\\n\" +\n                    \"Let's see how that works\",\n                hintCode: \"\",\n                hintBodyAfter: \"\",\n                confirmButtonText: \"Next\",\n                confirmButtonCallback: this.nextTutorialMode,\n            }\n        ]\n\n        return hints[index]\n    }\n\n    basicAeroplane = () => {\n        const plane = new _Domain_Aeroplane_Aeroplane__WEBPACK_IMPORTED_MODULE_0__.Aeroplane(\n            'AB123',\n            'TUT',\n            0.1 * this.map.mapBoundaries.maxX,\n            0.25 * this.map.mapBoundaries.maxY,\n            200,\n            90,\n            6000,\n            2)\n        this.machine.machine.aeroplanes.push(plane)\n    }\n\n    speedComparisonAeroplanes = () => {\n        const plane1 = new _Domain_Aeroplane_Aeroplane__WEBPACK_IMPORTED_MODULE_0__.Aeroplane(\n            'AB123',\n            'TUT',\n            0.1 * this.map.mapBoundaries.maxX,\n            0.25 * this.map.mapBoundaries.maxY,\n            200,\n            90,\n            2500,\n            2)\n        const plane2 = new _Domain_Aeroplane_Aeroplane__WEBPACK_IMPORTED_MODULE_0__.Aeroplane(\n            'CD456',\n            'TUT',\n            0.1 * this.map.mapBoundaries.maxX,\n            0.4 * this.map.mapBoundaries.maxY,\n            300,\n            90,\n            2500,\n            2)\n        this.machine.machine.aeroplanes.push(plane1)\n        this.machine.machine.aeroplanes.push(plane2)\n    }\n\n    towardsRestrictionBreach = () => {\n        const plane = new _Domain_Aeroplane_Aeroplane__WEBPACK_IMPORTED_MODULE_0__.Aeroplane(\n            'AB123',\n            'TUT',\n            0.55 * this.map.mapBoundaries.maxX,\n            0.45 * this.map.mapBoundaries.maxY,\n            220,\n            90,\n            2500,\n            2)\n        this.machine.machine.aeroplanes.push(plane)\n    }\n\n}\n\n//# sourceURL=webpack://atc/./src/States/Tutorial/TutorialMapOverview.js?");

/***/ }),

/***/ "./src/States/Tutorial/TutorialSelectingAircraftClicking.js":
/*!******************************************************************!*\
  !*** ./src/States/Tutorial/TutorialSelectingAircraftClicking.js ***!
  \******************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"TutorialSelectingAircraftClicking\": () => (/* binding */ TutorialSelectingAircraftClicking)\n/* harmony export */ });\n/* harmony import */ var _Domain_Aeroplane_Aeroplane__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../Domain/Aeroplane/Aeroplane */ \"./src/Domain/Aeroplane/Aeroplane.js\");\n/* harmony import */ var _TutorialSelectingAircraftSidebar__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./TutorialSelectingAircraftSidebar */ \"./src/States/Tutorial/TutorialSelectingAircraftSidebar.js\");\n\n\n\nclass TutorialSelectingAircraftClicking {\n    constructor(map) {\n        this.map = map\n        this.machine = undefined\n        this.initialised = false\n    }\n\n    setMachine = (machine) => {\n        this.machine = machine\n    }\n\n    init = () => {\n        this.machine.machine.clear()\n        this._selectingAircraftClick()\n        this.machine.interfaceController.showHint(\n            \"Selecting aircraft [Click]\",\n            \"We always start by selecting an aircraft. There are several ways to do this.\\n\\n\" +\n            \"Select one of the aircraft on the map by clicking on it.\\n\\n\" +\n            \"The call sign will appear in the command entry field at the bottom of the map.\\n\\n\" +\n            \"The strip in the right hand sidebar associated with that aeroplane will also be highlighted.\\n\\n\" +\n            \"Try clicking one aircraft, then the other and see how the command entry and sidebar highlights change\",\n            \"\",\n            \"\",\n            \"Next\",\n            this.next\n        )\n        this.initialised = true\n    }\n\n    next = () => {\n        this.machine.machine.clear()\n        this.machine.interfaceController.clearCommandEntry()\n        this.machine.transitionTo(new _TutorialSelectingAircraftSidebar__WEBPACK_IMPORTED_MODULE_1__.TutorialSelectingAircraftSidebar(this.map))\n    }\n\n    _selectingAircraftClick = () => {\n        const plane1 = new _Domain_Aeroplane_Aeroplane__WEBPACK_IMPORTED_MODULE_0__.Aeroplane(\n            'AB123',\n            'TUT',\n            0.1 * this.map.mapBoundaries.maxX,\n            0.35 * this.map.mapBoundaries.maxY,\n            200,\n            90,\n            5000,\n            2)\n        const plane2 = new _Domain_Aeroplane_Aeroplane__WEBPACK_IMPORTED_MODULE_0__.Aeroplane(\n            'CD789',\n            'TUT',\n            0.7 * this.map.mapBoundaries.maxX,\n            0.1 * this.map.mapBoundaries.maxY,\n            200,\n            225,\n            5000,\n            2)\n        this.machine.machine.aeroplanes.push(plane1)\n        this.machine.machine.aeroplanes.push(plane2)\n    }\n}\n\n//# sourceURL=webpack://atc/./src/States/Tutorial/TutorialSelectingAircraftClicking.js?");

/***/ }),

/***/ "./src/States/Tutorial/TutorialSelectingAircraftSidebar.js":
/*!*****************************************************************!*\
  !*** ./src/States/Tutorial/TutorialSelectingAircraftSidebar.js ***!
  \*****************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"TutorialSelectingAircraftSidebar\": () => (/* binding */ TutorialSelectingAircraftSidebar)\n/* harmony export */ });\n/* harmony import */ var _Domain_Aeroplane_Aeroplane__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../Domain/Aeroplane/Aeroplane */ \"./src/Domain/Aeroplane/Aeroplane.js\");\n/* harmony import */ var _TutorialAircraftHeading__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./TutorialAircraftHeading */ \"./src/States/Tutorial/TutorialAircraftHeading.js\");\n\n\n\nclass TutorialSelectingAircraftSidebar {\n    constructor(map) {\n        this.map = map\n        this.machine = undefined\n        this.initialised = false\n    }\n\n    setMachine = (machine) => {\n        this.machine = machine\n    }\n\n    init = () => {\n        this.machine.machine.clear()\n        this._selectingAircraftSidebar()\n        this.machine.interfaceController.showHint(\n            \"Selecting aircraft [Sidebar]\",\n            \"You can also select an aircraft by clicking its associated strip in the right hand sidebar.\\n\\nLike before, the call sign will appear in the command entry field at the bottom of the map.\",\n            \"\",\n            \"\",\n            \"Next\",\n            this.next\n        )\n        this.initialised = true\n    }\n\n    next = () => {\n        this.machine.machine.clear()\n        this.machine.interfaceController.clearCommandEntry()\n        this.machine.transitionTo(new _TutorialAircraftHeading__WEBPACK_IMPORTED_MODULE_1__.TutorialAircraftHeading(this.map))\n    }\n\n    _selectingAircraftSidebar = () => {\n        const plane1 = new _Domain_Aeroplane_Aeroplane__WEBPACK_IMPORTED_MODULE_0__.Aeroplane(\n            'NM232',\n            'TUT',\n            0.75 * this.map.mapBoundaries.maxX,\n            0.8 * this.map.mapBoundaries.maxY,\n            200,\n            295,\n            5000,\n            2)\n        const plane2 = new _Domain_Aeroplane_Aeroplane__WEBPACK_IMPORTED_MODULE_0__.Aeroplane(\n            'LH562',\n            'TUT',\n            0.4 * this.map.mapBoundaries.maxX,\n            0.4 * this.map.mapBoundaries.maxY,\n            200,\n            75,\n            5000,\n            2)\n        this.machine.machine.aeroplanes.push(plane1)\n        this.machine.machine.aeroplanes.push(plane2)\n    }\n}\n\n//# sourceURL=webpack://atc/./src/States/Tutorial/TutorialSelectingAircraftSidebar.js?");

/***/ }),

/***/ "./src/States/Tutorial/TutorialTargets.js":
/*!************************************************!*\
  !*** ./src/States/Tutorial/TutorialTargets.js ***!
  \************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"TutorialTargets\": () => (/* binding */ TutorialTargets)\n/* harmony export */ });\n/* harmony import */ var _Domain_Aeroplane_Aeroplane__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../Domain/Aeroplane/Aeroplane */ \"./src/Domain/Aeroplane/Aeroplane.js\");\n/* harmony import */ var _config_constants__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../config/constants */ \"./src/config/constants.js\");\n/* harmony import */ var _Domain_Aeroplane_aeroplaneStates__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../Domain/Aeroplane/aeroplaneStates */ \"./src/Domain/Aeroplane/aeroplaneStates.js\");\n\n\n\n\nclass TutorialTargets {\n    constructor(map) {\n        this.map = map\n        this.machine = undefined\n        this.initialised = false\n        this.hint = 0\n    }\n\n    setMachine = (machine) => {\n        this.machine = machine\n    }\n\n    init = () => {\n        this.machine.machine.clear()\n        this.next()\n        this.initialised = true\n    }\n\n    next = (clearAeroplanes = true) => {\n        if (clearAeroplanes) {\n            this.machine.machine.clear()\n        }\n        this.machine.interfaceController.clearCommandEntry()\n        this.machine.interfaceController.hideHint()\n        this.machine.interfaceController.blurAttention()\n        const hint = this.getHint(this.hint)\n        hint.spawnFunction && hint.spawnFunction()\n        hint.focusConfig && this.machine.interfaceController.focusAttention(hint.focusConfig)\n        this.machine.interfaceController.showHint(\n            hint.hintTitle,\n            hint.hintBodyBefore,\n            hint.hintCode,\n            hint.hintBodyAfter,\n            hint.confirmButtonText,\n            hint.confirmButtonCallback\n        )\n        this.hint += 1\n    }\n\n    getHint = (index) => {\n        const hints = [\n            {\n                hintTitle: \"Aircraft targets\",\n                hintBodyBefore: \"Now let's look at aircraft targets.\\n\\n\" +\n                    \"There are two types of target:\\n\\n\" +\n                    \"1. Target runways (landing aircraft)\\n\" +\n                    \"2. Target waypoints (departing aircraft)\",\n                hintCode: \"\",\n                hintBodyAfter: \"\",\n                confirmButtonText: \"Next\",\n                confirmButtonCallback: this.next\n            },\n            {\n                hintTitle: \"Target runways (Arrivals)\",\n                hintBodyBefore: \"Sometimes an incoming aircraft will have a runway on which it must land.\\n\\n\"\n                    + \"This runway will be specified in two ways:\\n\\n\"\n                    + \"1. On the sidebar strip\\n\"\n                    + \"2. On the aircraft label\\n\\n\" +\n                    \"Have a look at the aeroplane on the map. The target runway is shown in Pink.\\n\\n\" +\n                    \"In this case it is runway 27R\",\n                hintCode: \"\",\n                hintBodyAfter: \"\",\n                confirmButtonText: \"Next\",\n                confirmButtonCallback: () => this.next(false),\n                spawnFunction: this.arrivalWithTargetRunway\n            },\n            {\n                hintTitle: \"Target runways\",\n                hintBodyBefore: \"You do not HAVE TO land the aircraft on its target runway.\\n\\n\" +\n                    \"However, if you don't, it will not count as a successful landing and it will count against your 'Correct landings' percentage\",\n                hintCode: \"\",\n                hintBodyAfter: \"\",\n                confirmButtonText: \"Next\",\n                confirmButtonCallback: this.next,\n            },\n            {\n                hintTitle: \"Target runways - Stats\",\n                hintBodyBefore: \"The aeroplane is now landing on runway 27R.\\n\\n\"\n                    + \"Watch how the landing counter increases to 1 and how the correct landings percentage shows 100% when the aeroplane lands.\",\n                hintCode: \"\",\n                hintBodyAfter: \"\",\n                confirmButtonText: \"Next\",\n                confirmButtonCallback: this.next,\n                spawnFunction: this.landingWithTargetRunway\n            },\n            {\n                hintTitle: \"Target waypoints (Departures)\",\n                hintBodyBefore: \"When an aircraft is departing, it may have a waypoint that it must depart towards.\\n\\n\" +\n                    \"Like before this is shown in two ways:\\n\\n\" +\n                    \"1. On the sidebar strip\\n\" +\n                    \"2. On the aircraft label\\n\\n\" +\n                    \"Both are in Pink\\n\\n\" +\n                    \"Note: Since this is a departure and the aircraft is ready to taxi, it is not yet on the map.\",\n                hintCode: \"\",\n                hintBodyAfter: \"\",\n                confirmButtonText: \"Next\",\n                confirmButtonCallback: this.next,\n                spawnFunction: this.departureWithTargetWaypoint\n            },\n            {\n                hintTitle: \"Target waypoints\",\n                hintBodyBefore: \"The aeroplane is now taxiing to the runway.\\n\\n\" +\n                    \"In the meantime, to count as a successful departure towards a waypoint the aircraft must:\\n\\n\"\n                    + \"1. be faster than 200kts\\n\"\n                    + \"2. be at or above 2,000ft\\n\"\n                    + \"3. pass over the waypoint\",\n                hintCode: \"\",\n                hintBodyAfter: \"\",\n                confirmButtonText: \"Next\",\n                confirmButtonCallback: () => this.next(false),\n                spawnFunction: this.departureWithTargetWaypointReadyToTakeoff,\n            },\n            {\n                hintTitle: \"Target waypoints\",\n                hintBodyBefore: \"The aeroplane is now holding short and waiting for takeoff clearance at runway 9R.\\n\\n\" +\n                    \"Clear the aircraft for takeoff\",\n                hintCode: \"CTO\",\n                hintBodyAfter: \"The aeroplane will depart towards the Mayfield (MAY) waypoint.\\n\\n\" +\n                    \"When it reaches the waypoint, if it satisfies the speed and altitude requirements, it will be removed from the map.\\n\\n\" +\n                    \"The stats will show a successful departure.\\n\\n\" +\n                    \"If the aircraft does not pass the intended waypoint and ends up leaving the map, it will count as an unsuccessful departure.\",\n                confirmButtonText: \"Next\",\n                confirmButtonCallback: () => this.next(false),\n            },\n            {\n                hintTitle: \"Congratulations!\",\n                hintBodyBefore: \"You have finished the tutorial.\\n\\n\" +\n                    \"Click 'Game' at the top of the screen to start playing!\",\n                hintCode: \"\",\n                hintBodyAfter: \"\",\n                confirmButtonText: \"\",\n                confirmButtonCallback: undefined,\n            },\n        ]\n\n        return hints[index]\n    }\n\n    arrivalWithTargetRunway = () => {\n        const plane = new _Domain_Aeroplane_Aeroplane__WEBPACK_IMPORTED_MODULE_0__.Aeroplane(\n            'NS112',\n            'TUT',\n            140,\n            225,\n            220,\n            100,\n            5000,\n            2,\n            _config_constants__WEBPACK_IMPORTED_MODULE_1__.ARRIVAL,\n            _Domain_Aeroplane_aeroplaneStates__WEBPACK_IMPORTED_MODULE_2__.FLYING,\n            '27R')\n        this.machine.machine.aeroplanes.push(plane)\n    }\n\n    landingWithTargetRunway = () => {\n        const plane = new _Domain_Aeroplane_Aeroplane__WEBPACK_IMPORTED_MODULE_0__.Aeroplane(\n            'NS112',\n            'TUT',\n            0.48 * this.map.mapBoundaries.maxX + _config_constants__WEBPACK_IMPORTED_MODULE_1__.ILS_MAX_X,\n            0.5 * this.map.mapBoundaries.maxY,\n            180,\n            270,\n            2800,\n            2,\n            _config_constants__WEBPACK_IMPORTED_MODULE_1__.ARRIVAL,\n            _Domain_Aeroplane_aeroplaneStates__WEBPACK_IMPORTED_MODULE_2__.FLYING,\n            '27R')\n        plane.clearForLanding(this.map, '27R')\n        this.machine.machine.aeroplanes.push(plane)\n    }\n\n    departureWithTargetWaypoint = () => {\n        const plane = new _Domain_Aeroplane_Aeroplane__WEBPACK_IMPORTED_MODULE_0__.Aeroplane(\n            'NS112',\n            'TUT',\n            1,\n            1,\n            0,\n            0,\n            0,\n            2,\n            _config_constants__WEBPACK_IMPORTED_MODULE_1__.DEPARTURE,\n            _Domain_Aeroplane_aeroplaneStates__WEBPACK_IMPORTED_MODULE_2__.READY_TO_TAXI,\n            'MAY')\n        this.machine.machine.aeroplanes.push(plane)\n    }\n\n    departureWithTargetWaypointReadyToTakeoff = () => {\n        const plane = new _Domain_Aeroplane_Aeroplane__WEBPACK_IMPORTED_MODULE_0__.Aeroplane(\n            'NS112',\n            'TUT',\n            1,\n            1,\n            0,\n            0,\n            0,\n            2,\n            _config_constants__WEBPACK_IMPORTED_MODULE_1__.DEPARTURE,\n            _Domain_Aeroplane_aeroplaneStates__WEBPACK_IMPORTED_MODULE_2__.HOLDING_SHORT,\n            'MAY')\n        plane.setSpeed(this.map, 300)\n        plane.setAltitude(this.map, 25000)\n        plane.setWaypoint(this.map, 'MAY')\n        plane.setTaxiAndHold(this.map, '9R')\n        this.machine.machine.aeroplanes.push(plane)\n    }\n}\n\n//# sourceURL=webpack://atc/./src/States/Tutorial/TutorialTargets.js?");

/***/ }),

/***/ "./src/config/aircraft.js":
/*!********************************!*\
  !*** ./src/config/aircraft.js ***!
  \********************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"AIRCRAFT\": () => (/* binding */ AIRCRAFT),\n/* harmony export */   \"SPECIAL_AIRCRAFT\": () => (/* binding */ SPECIAL_AIRCRAFT)\n/* harmony export */ });\nconst AIRCRAFT = [\n    {\n        \"operator\": \"British Airways\",\n        \"operatorIATA\": \"BA\",\n        \"type\": \"Airbus\",\n        \"class\": \"A340-400\",\n        \"shortClass\": \"A340\",\n        \"weight\": 3,\n    },\n    {\n        \"operator\": \"Lufthansa\",\n        \"operatorIATA\": \"LH\",\n        \"type\": \"Airbus\",\n        \"class\": \"A321xlr\",\n        \"shortClass\": \"A321\",\n        \"weight\": 2,\n    },\n    {\n        \"operator\": \"Virgin Atlantic\",\n        \"operatorIATA\": \"VS\",\n        \"type\": \"Boeing\",\n        \"class\": \"B747-400\",\n        \"shortClass\": \"B747\",\n        \"weight\": 3,\n    },\n    {\n        \"operator\": \"EasyJet\",\n        \"operatorIATA\": \"EZ\",\n        \"type\": \"Airbus\",\n        \"class\": \"A319neo\",\n        \"shortClass\": \"A319\",\n        \"weight\": 1,\n    },\n    {\n        \"operator\": \"RyanAir\",\n        \"operatorIATA\": \"RY\",\n        \"type\": \"Boeing\",\n        \"class\": \"B737-300\",\n        \"shortClass\": \"B737\",\n        \"weight\": 2,\n    },\n    {\n        \"operator\": \"Aer Lingus\",\n        \"operatorIATA\": \"AL\",\n        \"type\": \"Airbus\",\n        \"class\": \"A320-200\",\n        \"shortClass\": \"A320\",\n        \"weight\": 2,\n    },\n    {\n        \"operator\": \"American Airlines\",\n        \"operatorIATA\": \"AA\",\n        \"type\": \"Boeing\",\n        \"class\": \"B777-800\",\n        \"shortClass\": \"B777\",\n        \"weight\": 3,\n    }\n]\n\nconst SPECIAL_AIRCRAFT = [\n    {\n        \"operator\": \"BAE\",\n        \"operatorIATA\": \"ZK\",\n        \"type\": \"Eurofighter\",\n        \"class\": \"Typhoon\",\n        \"shortClass\": \"FGR4\",\n        \"weight\": 1,\n        \"minSpeed\": 500,\n        \"maxSpeed\": 800,\n    },\n    {\n        \"operator\": \"HMG\",\n        \"operatorIATA\": \"ZZ\",\n        \"type\": \"Airbus\",\n        \"class\": \"Voyager\",\n        \"shortClass\": \"A330\",\n        \"weight\": 2,\n        \"minSpeed\": 300,\n        \"maxSpeed\": 400,\n    }\n]\n\n//# sourceURL=webpack://atc/./src/config/aircraft.js?");

/***/ }),

/***/ "./src/config/colours.js":
/*!*******************************!*\
  !*** ./src/config/colours.js ***!
  \*******************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"COLOURS\": () => (/* binding */ COLOURS)\n/* harmony export */ });\nconst COLOURS = {\n    YELLOW: 'rgb(255,186,0)',\n    MINT: 'rgb(0,213,170)',\n    MINT_TRANSPARENT: 'rgba(0,213,170,0.2)',\n    BLUE: 'rgb(4,230,255)',\n    BLUE_TRANSPARENT: 'rgb(0,151,255,0.5)',\n    RED: 'rgb(253,3,43)',\n    RED_TRANSPARENT: 'rgba(220,46,78,0.2)',\n    PURPLE: 'rgb(221, 126, 229)',\n    BACKGROUND: 'rgb(8,8,19)',\n    WHITE: 'rgb(218,219,243)',\n    WHITE_TRANSPARENT: 'rgb(218,219,243,0.5)',\n    WHITE_TRANSPARENT_MAX: 'rgb(218,219,243,0.08)',\n    ORANGE: 'rgb(255,167,7)',\n    ORANGE_TRANSPARENT: 'rgb(194,127,6,0.15)',\n    GREY: 'rgba(197,197,197,0.25)',\n    GREY_TRANSPARENT: 'rgba(197,197,197,0.05)',\n}\n\n//# sourceURL=webpack://atc/./src/config/colours.js?");

/***/ }),

/***/ "./src/config/constants.js":
/*!*********************************!*\
  !*** ./src/config/constants.js ***!
  \*********************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"ARRIVAL\": () => (/* binding */ ARRIVAL),\n/* harmony export */   \"BASE_FUEL_CONSUMPTION_RATE\": () => (/* binding */ BASE_FUEL_CONSUMPTION_RATE),\n/* harmony export */   \"DEPARTURE\": () => (/* binding */ DEPARTURE),\n/* harmony export */   \"DEPARTURE_ALTITUDE\": () => (/* binding */ DEPARTURE_ALTITUDE),\n/* harmony export */   \"HORIZONTAL_SEPARATION_MINIMUM\": () => (/* binding */ HORIZONTAL_SEPARATION_MINIMUM),\n/* harmony export */   \"ILS_MAX_X\": () => (/* binding */ ILS_MAX_X),\n/* harmony export */   \"ILS_MIN_X\": () => (/* binding */ ILS_MIN_X),\n/* harmony export */   \"LANDED_ALTITUDE\": () => (/* binding */ LANDED_ALTITUDE),\n/* harmony export */   \"MAX_ALTITUDE\": () => (/* binding */ MAX_ALTITUDE),\n/* harmony export */   \"MAX_SPEED\": () => (/* binding */ MAX_SPEED),\n/* harmony export */   \"MAX_WIND_SPEED\": () => (/* binding */ MAX_WIND_SPEED),\n/* harmony export */   \"MIN_ALTITUDE\": () => (/* binding */ MIN_ALTITUDE),\n/* harmony export */   \"MIN_APPROACH_SPEED\": () => (/* binding */ MIN_APPROACH_SPEED),\n/* harmony export */   \"MIN_GROUND_CLEARANCE\": () => (/* binding */ MIN_GROUND_CLEARANCE),\n/* harmony export */   \"MIN_SPEED\": () => (/* binding */ MIN_SPEED),\n/* harmony export */   \"MIN_WIND_SPEED\": () => (/* binding */ MIN_WIND_SPEED),\n/* harmony export */   \"NUM_PROJECTED_TICKS\": () => (/* binding */ NUM_PROJECTED_TICKS),\n/* harmony export */   \"SPEED_TAIL_LENGTH\": () => (/* binding */ SPEED_TAIL_LENGTH),\n/* harmony export */   \"TAKEOFF_SPEED\": () => (/* binding */ TAKEOFF_SPEED),\n/* harmony export */   \"VERTICAL_SEPARATION_MINIMUM\": () => (/* binding */ VERTICAL_SEPARATION_MINIMUM)\n/* harmony export */ });\nconst MIN_SPEED = 120;\nconst MAX_SPEED = 999;\nconst TAKEOFF_SPEED = 200;\nconst LANDED_ALTITUDE = 40\nconst DEPARTURE_ALTITUDE = 3000\nconst MIN_APPROACH_SPEED = 200\nconst MIN_ALTITUDE = 1000;\nconst MAX_ALTITUDE = 40000;\nconst MIN_GROUND_CLEARANCE = 2000;\nconst ILS_MAX_X = 220\nconst ILS_MIN_X = 140\nconst VERTICAL_SEPARATION_MINIMUM = 1000\nconst HORIZONTAL_SEPARATION_MINIMUM = 70\nconst SPEED_TAIL_LENGTH = 10\nconst NUM_PROJECTED_TICKS = 67 // 67 ticks at 900ms per tick ~= 60s\nconst BASE_FUEL_CONSUMPTION_RATE = 0.02\n\nconst MIN_WIND_SPEED = 1\nconst MAX_WIND_SPEED = 22\n\nconst ARRIVAL = \"ARRIVAL\"\nconst DEPARTURE = \"DEPARTURE\"\n\n\n//# sourceURL=webpack://atc/./src/config/constants.js?");

/***/ }),

/***/ "./src/config/maps/EGLL.js":
/*!*********************************!*\
  !*** ./src/config/maps/EGLL.js ***!
  \*********************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"EGLL\": () => (/* binding */ EGLL)\n/* harmony export */ });\n/* harmony import */ var _constants__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../constants */ \"./src/config/constants.js\");\n\n\nconst x = document.body.clientWidth\nconst y = document.body.clientHeight\nconst runwayWidth = x / 35\nconst runwayGap = x / 60\n\nconst EGLL = {\n    name: \"London Heathrow\",\n    shortCode: \"LHR\",\n    defaultWaypoint: \"LON\",\n    maxX: x,\n    maxY: y,\n    focusableConfig: {\n        runways: {\n            minX: x / 2 - (runwayWidth / 2) - 5,\n            minY: y / 2 - 10,\n            maxX: x / 2 + (runwayWidth / 2),\n            maxY: y / 2 + runwayGap + 10\n        },\n        waypoint: {\n            minX: (0.44 * x),\n            minY: (0.26 * y),\n            maxX: (0.48 * x),\n            maxY: (0.34 * y)\n        },\n        restrictedZone: {\n            minX: 0.65 * x,\n            minY: 0.3 * y,\n            maxX: 0.88 * x,\n            maxY: 0.67 * y,\n        },\n        restrictedZoneLabel: {\n            minX: 0.725 * x,\n            minY: 0.57 * y,\n            maxX: 0.78 * x,\n            maxY: 0.61 * y,\n        },\n        landingFeather: {\n            minX: x / 2 - (runwayWidth / 2) - _constants__WEBPACK_IMPORTED_MODULE_0__.ILS_MAX_X - 25,\n            minY: y / 2 - runwayGap,\n            maxX: x / 2 - (runwayWidth / 2) + 5,\n            maxY: y / 2 + runwayGap\n        }\n    },\n    features: {\n        runways: [\n            {\n                start: {\n                    label: \"9L\",\n                    heading: 90,\n                    altitude: 0,\n                    focusableConfig: {\n                        minX: x / 2 - (runwayWidth / 2) - _constants__WEBPACK_IMPORTED_MODULE_0__.ILS_MAX_X - 5,\n                        minY: y / 2 - 5,\n                        maxX: x / 2 - (runwayWidth / 2) + 5,\n                        maxY: y / 2 + runwayGap,\n                    },\n                    landingZone: {\n                        x: x / 2 - (runwayWidth / 3.5),\n                        y: y / 2,\n                    },\n                    takeoffPoint: {\n                        x: x / 2 + (runwayWidth / 3.5),\n                        y: y / 2,\n                    },\n                    ILS: {\n                        innerMarker: {\n                            x: x / 2 - (runwayWidth / 2),\n                            y: y / 2,\n                        },\n                        outerMarker: {\n                            x: x / 2 - (runwayWidth / 2) - _constants__WEBPACK_IMPORTED_MODULE_0__.ILS_MAX_X,\n                            y: y / 2,\n                        }\n                    },\n                    goAround: {\n                        targetWaypoint: \"CHT\",\n                        targetSpeed: 200,\n                        targetAltitude: 4000,\n                    }\n                },\n                end: {\n                    label: \"27R\",\n                    heading: 270,\n                    altitude: 0,\n                    landingZone: {\n                        x: x / 2 + (runwayWidth / 3.5),\n                        y: y / 2,\n                    },\n                    takeoffPoint: {\n                        x: x / 2 - (runwayWidth / 3.5),\n                        y: y / 2,\n                    },\n                    ILS: {\n                        innerMarker: {\n                            x: x / 2 + (runwayWidth / 2),\n                            y: y / 2,\n                        },\n                        outerMarker: {\n                            x: x / 2 + (runwayWidth / 2) + _constants__WEBPACK_IMPORTED_MODULE_0__.ILS_MAX_X,\n                            y: y / 2,\n                        }\n                    },\n                    goAround: {\n                        targetWaypoint: \"LAM\",\n                        targetSpeed: 200,\n                        targetAltitude: 4000,\n                    }\n                }\n            },\n            {\n                start: {\n                    label: \"9R\",\n                    heading: 90,\n                    altitude: 0,\n                    landingZone: {\n                        x: x / 2 - (runwayWidth / 3.5),\n                        y: y / 2 + runwayGap,\n                    },\n                    takeoffPoint: {\n                        x: x / 2 + (runwayWidth / 3.5),\n                        y: y / 2 + runwayGap,\n                    },\n                    ILS: {\n                        innerMarker: {\n                            x: x / 2 - (runwayWidth / 2),\n                            y: y / 2 + runwayGap,\n                        },\n                        outerMarker: {\n                            x: x / 2 - (runwayWidth / 2) - _constants__WEBPACK_IMPORTED_MODULE_0__.ILS_MAX_X,\n                            y: y / 2 + runwayGap,\n                        }\n                    },\n                    goAround: {\n                        targetWaypoint: \"GWC\",\n                        targetSpeed: 200,\n                        targetAltitude: 4000,\n                    }\n                },\n                end: {\n                    label: \"27L\",\n                    heading: 270,\n                    altitude: 0,\n                    landingZone: {\n                        x: x / 2 + (runwayWidth / 3.5),\n                        y: y / 2 + runwayGap,\n                    },\n                    takeoffPoint: {\n                        x: x / 2 - (runwayWidth / 3.5),\n                        y: y / 2 + runwayGap,\n                    },\n                    ILS: {\n                        innerMarker: {\n                            x: x / 2 + (runwayWidth / 2),\n                            y: y / 2 + runwayGap,\n                        },\n                        outerMarker: {\n                            x: x / 2 + (runwayWidth / 2) + _constants__WEBPACK_IMPORTED_MODULE_0__.ILS_MAX_X,\n                            y: y / 2 + runwayGap,\n                        }\n                    },\n                    goAround: {\n                        targetWaypoint: \"MAY\",\n                        targetSpeed: 200,\n                        targetAltitude: 4000,\n                    }\n                }\n            }\n        ],\n        waypoints: [\n            {type: \"VOR\", id: \"OCK\", name: \"Ockham\", x: (0.51 * x), y: (0.75 * y)},\n            {type: \"VOR\", id: \"GWC\", name: \"Goodwood\", x: (0.32 * x), y: (0.84 * y)},\n            {type: \"VOR\", id: \"LON\", name: \"London\", x: (0.495 * x), y: (0.48 * y)},\n            {type: \"VOR\", id: \"BPK\", name: \"Brookman's Park\", x: (0.8 * x), y: (0.15 * y)},\n            {type: \"VOR\", id: \"CPT\", name: \"Compton\", x: (0.15 * x), y: (0.48 * y)},\n            {type: \"VOR\", id: \"DET\", name: \"Detling\", x: (0.95 * x), y: (0.85 * y)},\n            {type: \"VOR\", id: \"MAY\", name: \"Mayfield\", x: (0.65 * x), y: (0.85 * y)},\n            {type: \"VOR\", id: \"LAM\", name: \"Lambourne\", x: (0.7 * x), y: (0.28 * y)},\n            {type: \"VOR\", id: \"EPM\", name: \"Epsom\", x: (0.55 * x), y: (0.73 * y)},\n            {type: \"VOR\", id: \"CHT\", name: \"Chiltern\", x: (0.46 * x), y: (0.31 * y)},\n\n            {type: \"RWY\", id: \"9L\", name: \"Runway 9L\", x: x / 2 - (runwayWidth / 2), y: y / 2},\n            {type: \"RWY\", id: \"9R\", name: \"Runway 9R\", x: x / 2 - (runwayWidth / 2), y: y / 2 + runwayGap},\n            {type: \"RWY\", id: \"27L\", name: \"Runway 27L\", x: x / 2 + (runwayWidth / 2), y: y / 2 + runwayGap},\n            {type: \"RWY\", id: \"27R\", name: \"Runway 27R\", x: x / 2 + (runwayWidth / 2), y: y / 2},\n        ],\n        restrictedZones: [\n            {\n                level: \"critical\",\n                dashes: 2,\n                label: {text: \"EG(R)-158\", location: {\"x\": 0.787 * x, \"y\": 0.42 * y}},\n                minAltitude: 4000,\n                maxAltitude: null,\n                boundaries: [\n                    {x: (0.785 * x), y: (0.44 * y), inv_y: y - (0.44 * y)},\n                    {x: (0.804 * x), y: (0.434 * y), inv_y: y - (0.434 * y)},\n                    {x: (0.811 * x), y: (0.448 * y), inv_y: y - (0.448 * y)},\n                    {x: (0.809 * x), y: (0.467 * y), inv_y: y - (0.467 * y)},\n                    {x: (0.784 * x), y: (0.456 * y), inv_y: y - (0.456 * y)},\n                ]\n            },\n            {\n                level: \"critical\",\n                dashes: 2,\n                label: {text: \"EG(R)-160\", location: {\"x\": 0.739 * x, \"y\": 0.471 * y}},\n                minAltitude: 4000,\n                maxAltitude: null,\n                boundaries: [\n                    {x: (0.744 * x), y: (0.398 * y), inv_y: y - (0.398 * y)},\n                    {x: (0.748 * x), y: (0.393 * y), inv_y: y - (0.393 * y)},\n                    {x: (0.754 * x), y: (0.397 * y), inv_y: y - (0.397 * y)},\n                    {x: (0.763 * x), y: (0.417 * y), inv_y: y - (0.417 * y)},\n                    {x: (0.783 * x), y: (0.471 * y), inv_y: y - (0.471 * y)},\n                    {x: (0.785 * x), y: (0.489 * y), inv_y: y - (0.489 * y)},\n                    {x: (0.785 * x), y: (0.507 * y), inv_y: y - (0.507 * y)},\n                    {x: (0.784 * x), y: (0.519 * y), inv_y: y - (0.519 * y)},\n                    {x: (0.781 * x), y: (0.525 * y), inv_y: y - (0.525 * y)},\n                    {x: (0.778 * x), y: (0.529 * y), inv_y: y - (0.529 * y)},\n                    {x: (0.774 * x), y: (0.526 * y), inv_y: y - (0.526 * y)},\n                    {x: (0.77 * x), y: (0.523 * y), inv_y: y - (0.523 * y)},\n                    {x: (0.769 * x), y: (0.514 * y), inv_y: y - (0.514 * y)},\n                    {x: (0.768 * x), y: (0.506 * y), inv_y: y - (0.506 * y)},\n                    {x: (0.731 * x), y: (0.493 * y), inv_y: y - (0.493 * y)},\n                    {x: (0.728 * x), y: (0.492 * y), inv_y: y - (0.492 * y)},\n                    {x: (0.724 * x), y: (0.485 * y), inv_y: y - (0.485 * y)},\n                    {x: (0.723 * x), y: (0.479 * y), inv_y: y - (0.479 * y)},\n                    {x: (0.723 * x), y: (0.472 * y), inv_y: y - (0.472 * y)},\n                    {x: (0.726 * x), y: (0.46 * y), inv_y: y - (0.46 * y)},\n                    {x: (0.73 * x), y: (0.441 * y), inv_y: y - (0.441 * y)},\n                    {x: (0.736 * x), y: (0.423 * y), inv_y: y - (0.423 * y)},\n                    {x: (0.742 * x), y: (0.401 * y), inv_y: y - (0.401 * y)},\n                ]\n            },\n            {\n                level: \"critical\",\n                dashes: 2,\n                label: {text: \"EG(R)-107\", location: {\"x\": 0.915 * x, \"y\": 0.52 * y}},\n                minAltitude: null,\n                maxAltitude: null,\n                boundaries: [\n                    {x: (0.935 * x), y: (0.470 * y), inv_y: y - (0.474 * y)},\n                    {x: (0.938 * x), y: (0.483 * y), inv_y: y - (0.483 * y)},\n                    {x: (0.936 * x), y: (0.496 * y), inv_y: y - (0.496 * y)},\n                    {x: (0.93 * x), y: (0.504 * y), inv_y: y - (0.504 * y)},\n                    {x: (0.925 * x), y: (0.498 * y), inv_y: y - (0.498 * y)},\n                    {x: (0.923 * x), y: (0.494 * y), inv_y: y - (0.494 * y)},\n                    {x: (0.927 * x), y: (0.478 * y), inv_y: y - (0.478 * y)},\n                    {x: (0.929 * x), y: (0.472 * y), inv_y: y - (0.472 * y)},\n                ]\n            },\n            {\n                level: \"moderate\",\n                dashes: 2,\n                label: {text: \"EG(D)-133\", location: {\"x\": 0.27 * x, \"y\": 0.455 * y}},\n                minAltitude: 4000,\n                maxAltitude: null,\n                boundaries: [\n                    {x: (0.29 * x), y: (0.471 * y), inv_y: y - (0.471 * y)},\n                    {x: (0.284 * x), y: (0.471 * y), inv_y: y - (0.471 * y)},\n                    {x: (0.278 * x), y: (0.475 * y), inv_y: y - (0.475 * y)},\n                    {x: (0.271 * x), y: (0.484 * y), inv_y: y - (0.484 * y)},\n                    {x: (0.27 * x), y: (0.499 * y), inv_y: y - (0.499 * y)},\n                    {x: (0.279 * x), y: (0.506 * y), inv_y: y - (0.506 * y)},\n                    {x: (0.288 * x), y: (0.505 * y), inv_y: y - (0.505 * y)},\n                    {x: (0.296 * x), y: (0.497 * y), inv_y: y - (0.497 * y)},\n                    {x: (0.303 * x), y: (0.487 * y), inv_y: y - (0.487 * y)},\n                    {x: (0.304 * x), y: (0.477 * y), inv_y: y - (0.477 * y)},\n                ]\n            },\n            {\n                level: \"moderate\",\n                dashes: 2,\n                label: {text: \"EG(R)-157\", location: {\"x\": 0.729 * x, \"y\": 0.587 * y}},\n                minAltitude: 3000,\n                maxAltitude: 5000,\n                boundaries: [\n                    {x: (0.824 * x), y: (0.331 * y), inv_y: y - (0.331 * y)},\n                    {x: (0.855 * x), y: (0.433 * y), inv_y: y - (0.433 * y)},\n                    {x: (0.853 * x), y: (0.602 * y), inv_y: y - (0.602 * y)},\n                    {x: (0.792 * x), y: (0.585 * y), inv_y: y - (0.585 * y)},\n                    {x: (0.722 * x), y: (0.655 * y), inv_y: y - (0.655 * y)},\n                    {x: (0.704 * x), y: (0.544 * y), inv_y: y - (0.544 * y)},\n                    {x: (0.665 * x), y: (0.51 * y), inv_y: y - (0.51 * y)},\n                    {x: (0.677 * x), y: (0.44 * y), inv_y: y - (0.44 * y)},\n                    {x: (0.681 * x), y: (0.429 * y), inv_y: y - (0.429 * y)},\n                    {x: (0.699 * x), y: (0.323 * y), inv_y: y - (0.323 * y)},\n                    {x: (0.759 * x), y: (0.358 * y), inv_y: y - (0.358 * y)},\n                ]\n            }\n        ],\n        mapLines: [\n            {dashes: 3, start: {\"x\": 0, \"y\": 0}, end: {\"x\": 0.3 * x, \"y\": 0.3 * y}},\n            {dashes: 3, start: {\"x\": 0.3 * x, \"y\": 0.3 * y}, end: {\"x\": 0, \"y\": 0.6 * y}},\n            {dashes: 3, start: {\"x\": 0.3 * x, \"y\": 0.3 * y}, end: {\"x\": x, \"y\": 0.3 * y}},\n            {dashes: 3, start: {\"x\": 0.15 * x, \"y\": 0.15 * y}, end: {\"x\": 0.4 * x, \"y\": 0.1 * y}},\n            {dashes: 3, start: {\"x\": 0.4 * x, \"y\": 0.1 * y}, end: {\"x\": 0.45 * x, \"y\": 0.3 * y}},\n            {dashes: 20, start: {\"x\": 0, \"y\": 0.7 * y}, end: {\"x\": 0.38 * x, \"y\": 0.3 * y}},\n\n            {dashes: 20, start: {\"x\": 0.8 * x, \"y\": 0}, end: {\"x\": 0.75 * x, \"y\": 0.3 * y}},\n            {dashes: 20, start: {\"x\": 0.75 * x, \"y\": 0.3 * y}, end: {\"x\": 0.6 * x, \"y\": 0.6 * y}},\n            {dashes: 20, start: {\"x\": 0.6 * x, \"y\": 0.6 * y}, end: {\"x\": 0.5 * x, \"y\": 0.6 * y}},\n            {dashes: 20, start: {\"x\": 0.5 * x, \"y\": 0.6 * y}, end: {\"x\": 0.3 * x, \"y\": y}},\n            {dashes: 20, start: {\"x\": 0.6 * x, \"y\": 0.6 * y}, end: {\"x\": 0.63 * x, \"y\": y}},\n        ],\n        crosses: [\n            {\"x\": 0.3 * x, \"y\": 0.3 * y},\n            {\"x\": 0.38 * x, \"y\": 0.3 * y},\n            {\"x\": 0.15 * x, \"y\": 0.15 * y},\n            {\"x\": 0.4 * x, \"y\": 0.1 * y},\n            {\"x\": 0.45 * x, \"y\": 0.3 * y},\n            {\"x\": 0.75 * x, \"y\": 0.3 * y},\n            {\"x\": 0.6 * x, \"y\": 0.6 * y},\n            {\"x\": 0.5 * x, \"y\": 0.6 * y},\n\n            {\"x\": 0.45 * x, \"y\": 0.7 * y},\n            {\"x\": 0.35 * x, \"y\": 0.8 * y},\n            {\"x\": 0.25 * x, \"y\": 0.85 * y},\n\n            {\"x\": 0.7 * x, \"y\": 0.35 * y},\n            {\"x\": 0.65 * x, \"y\": 0.35 * y},\n            {\"x\": 0.60 * x, \"y\": 0.4 * y},\n\n            {\"x\": 0.80 * x, \"y\": 0.8 * y},\n            {\"x\": 0.70 * x, \"y\": 0.88 * y},\n            {\"x\": 0.87 * x, \"y\": 0.52 * y},\n            {\"x\": 0.55 * x, \"y\": 0.17 * y},\n\n            {\"x\": 0.1 * x, \"y\": 0.17 * y},\n            {\"x\": 0.15 * x, \"y\": 0.3 * y},\n\n        ],\n        tallStructures: [\n            {label: '579', x: 0.909 * x, y: 0.548 * y},\n            {label: '806', x: 0.851 * x, y: 0.475 * y},\n            {label: '671', x: 0.806 * x, y: 0.446 * y},\n            {label: '739', x: 0.763 * x, y: 0.417 * y},\n            {label: '542', x: 0.748 * x, y: 0.353 * y},\n            {label: '528', x: 0.721 * x, y: 0.436 * y},\n            {label: '558', x: 0.645 * x, y: 0.294 * y},\n            {label: '1087', x: 0.817 * x, y: 0.651 * y},\n            {label: '1184', x: 0.195 * x, y: 0.739 * y},\n            {label: '794', x: 0.25 * x, y: 0.180 * y},\n            {label: '1168', x: 0.615 * x, y: 0.693 * y},\n            {label: '766', x: 0.267 * x, y: 0.767 * y},\n        ]\n    },\n    terrain: {\n        waterBodies: [\n            {\n                name: \"Thames\",\n                borders: [\n                    [\n                        {x: x, y: 0.51 * y},\n                        {x: 0.995 * x, y: 0.5 * y},\n                        {x: 0.993 * x, y: 0.48 * y},\n                        {x: 0.984 * x, y: 0.46 * y},\n                        {x: 0.974 * x, y: 0.4605 * y},\n                        {x: 0.964 * x, y: 0.455 * y},\n                        {x: 0.955 * x, y: 0.441 * y},\n                        {x: 0.948 * x, y: 0.44 * y},\n                        {x: 0.947 * x, y: 0.441 * y},\n                        {x: 0.943 * x, y: 0.448 * y},\n                        {x: 0.925 * x, y: 0.449 * y},\n                        {x: 0.92 * x, y: 0.455 * y},\n                        {x: 0.912 * x, y: 0.49 * y},\n                        {x: 0.909 * x, y: 0.493 * y},\n                        {x: 0.903 * x, y: 0.493 * y},\n                        {x: 0.893 * x, y: 0.491 * y},\n                        {x: 0.885 * x, y: 0.492 * y},\n                        {x: 0.879 * x, y: 0.492 * y},\n                        {x: 0.876 * x, y: 0.488 * y},\n                        {x: 0.872 * x, y: 0.481 * y},\n                        {x: 0.87 * x, y: 0.475 * y},\n                        {x: 0.867 * x, y: 0.473 * y},\n                        {x: 0.863 * x, y: 0.474 * y},\n                        {x: 0.86 * x, y: 0.478 * y},\n                        {x: 0.858 * x, y: 0.484 * y},\n                        {x: 0.858 * x, y: 0.494 * y},\n                        {x: 0.86 * x, y: 0.504 * y},\n                        {x: 0.861 * x, y: 0.516 * y},\n                        {x: 0.86 * x, y: 0.519 * y},\n                        {x: 0.857 * x, y: 0.521 * y},\n                        {x: 0.854 * x, y: 0.521 * y},\n                        {x: 0.85 * x, y: 0.521 * y},\n                        {x: 0.846 * x, y: 0.517 * y},\n                        {x: 0.844 * x, y: 0.504 * y},\n                        {x: 0.844 * x, y: 0.488 * y},\n                        {x: 0.844 * x, y: 0.48 * y},\n                        {x: 0.841 * x, y: 0.474 * y},\n                        {x: 0.839 * x, y: 0.47 * y},\n                        {x: 0.835 * x, y: 0.47 * y},\n                        {x: 0.831 * x, y: 0.468 * y},\n                        {x: 0.828 * x, y: 0.472 * y},\n                        {x: 0.821 * x, y: 0.483 * y},\n                        {x: 0.816 * x, y: 0.48 * y},\n                        {x: 0.809 * x, y: 0.475 * y},\n                        {x: 0.802 * x, y: 0.469 * y},\n                        {x: 0.795 * x, y: 0.465 * y},\n                        {x: 0.788 * x, y: 0.465 * y},\n                        {x: 0.781 * x, y: 0.465 * y},\n                        {x: 0.778 * x, y: 0.469 * y},\n                        {x: 0.777 * x, y: 0.479 * y},\n                        {x: 0.774 * x, y: 0.492 * y},\n                        {x: 0.774 * x, y: 0.503 * y},\n                        {x: 0.773 * x, y: 0.511 * y},\n                        {x: 0.771 * x, y: 0.516 * y},\n                        {x: 0.768 * x, y: 0.521 * y},\n                        {x: 0.763 * x, y: 0.524 * y},\n                        {x: 0.756 * x, y: 0.523 * y},\n                        {x: 0.752 * x, y: 0.524 * y},\n                        {x: 0.749 * x, y: 0.532 * y},\n                        {x: 0.745 * x, y: 0.533 * y},\n                        {x: 0.742 * x, y: 0.537 * y},\n                        {x: 0.738 * x, y: 0.541 * y},\n                        {x: 0.733 * x, y: 0.55 * y},\n                        {x: 0.729 * x, y: 0.556 * y},\n                        {x: 0.726 * x, y: 0.56 * y},\n                        {x: 0.723 * x, y: 0.56 * y},\n                        {x: 0.72 * x, y: 0.559 * y},\n                        {x: 0.716 * x, y: 0.556 * y},\n                        {x: 0.713 * x, y: 0.552 * y},\n                        {x: 0.71 * x, y: 0.544 * y},\n                        {x: 0.709 * x, y: 0.534 * y},\n                        {x: 0.707 * x, y: 0.52 * y},\n                        {x: 0.703 * x, y: 0.514 * y},\n                        {x: 0.697 * x, y: 0.512 * y},\n                        {x: 0.694 * x, y: 0.517 * y},\n                        {x: 0.691 * x, y: 0.525 * y},\n                        {x: 0.689 * x, y: 0.535 * y},\n                        {x: 0.686 * x, y: 0.541 * y},\n                        {x: 0.684 * x, y: 0.544 * y},\n                        {x: 0.68 * x, y: 0.546 * y},\n                        {x: 0.676 * x, y: 0.539 * y},\n                        {x: 0.672 * x, y: 0.531 * y},\n                        {x: 0.667 * x, y: 0.521 * y},\n                        {x: 0.663 * x, y: 0.515 * y},\n                        {x: 0.66 * x, y: 0.513 * y},\n                        {x: 0.656 * x, y: 0.514 * y},\n                        {x: 0.652 * x, y: 0.518 * y},\n                        {x: 0.649 * x, y: 0.52 * y},\n\n                        // Switchback\n                        {x: 0.653 * x, y: 0.524 * y},\n                        {x: 0.657 * x, y: 0.519 * y},\n                        {x: 0.66 * x, y: 0.519 * y},\n                        {x: 0.662 * x, y: 0.519 * y},\n                        {x: 0.663 * x, y: 0.521 * y},\n                        {x: 0.665 * x, y: 0.525 * y},\n                        {x: 0.667 * x, y: 0.529 * y},\n                        {x: 0.669 * x, y: 0.533 * y},\n                        {x: 0.671 * x, y: 0.537 * y},\n                        {x: 0.672 * x, y: 0.541 * y},\n                        {x: 0.674 * x, y: 0.547 * y},\n                        {x: 0.677 * x, y: 0.549 * y},\n                        {x: 0.679 * x, y: 0.551 * y},\n                        {x: 0.681 * x, y: 0.552 * y},\n                        {x: 0.683 * x, y: 0.552 * y},\n                        {x: 0.686 * x, y: 0.55 * y},\n                        {x: 0.689 * x, y: 0.547 * y},\n                        {x: 0.69 * x, y: 0.541 * y},\n                        {x: 0.692 * x, y: 0.535 * y},\n                        {x: 0.693 * x, y: 0.532 * y},\n                        {x: 0.694 * x, y: 0.529 * y},\n                        {x: 0.696 * x, y: 0.522 * y},\n                        {x: 0.697 * x, y: 0.52 * y},\n                        {x: 0.698 * x, y: 0.519 * y},\n                        {x: 0.701 * x, y: 0.52 * y},\n                        {x: 0.703 * x, y: 0.52 * y},\n                        {x: 0.705 * x, y: 0.522 * y},\n                        {x: 0.706 * x, y: 0.525 * y},\n                        {x: 0.707 * x, y: 0.531 * y},\n                        {x: 0.707 * x, y: 0.537 * y},\n                        {x: 0.708 * x, y: 0.544 * y},\n                        {x: 0.71 * x, y: 0.552 * y},\n                        {x: 0.711 * x, y: 0.557 * y},\n                        {x: 0.714 * x, y: 0.56 * y},\n                        {x: 0.717 * x, y: 0.564 * y},\n                        {x: 0.72 * x, y: 0.566 * y},\n                        {x: 0.722 * x, y: 0.566 * y},\n                        {x: 0.723 * x, y: 0.566 * y},\n                        {x: 0.726 * x, y: 0.567 * y},\n                        {x: 0.729 * x, y: 0.565 * y},\n                        {x: 0.732 * x, y: 0.561 * y},\n                        {x: 0.734 * x, y: 0.557 * y},\n                        {x: 0.736 * x, y: 0.553 * y},\n                        {x: 0.739 * x, y: 0.55 * y},\n                        {x: 0.742 * x, y: 0.547 * y},\n                        {x: 0.744 * x, y: 0.542 * y},\n                        {x: 0.747 * x, y: 0.539 * y},\n                        {x: 0.749 * x, y: 0.539 * y},\n                        {x: 0.752 * x, y: 0.536 * y},\n                        {x: 0.754 * x, y: 0.534 * y},\n                        {x: 0.756 * x, y: 0.532 * y},\n                        {x: 0.76 * x, y: 0.531 * y},\n                        {x: 0.763 * x, y: 0.532 * y},\n                        {x: 0.769 * x, y: 0.529 * y},\n                        {x: 0.775 * x, y: 0.519 * y},\n                        {x: 0.776 * x, y: 0.511 * y},\n                        {x: 0.778 * x, y: 0.502 * y},\n                        {x: 0.778 * x, y: 0.492 * y},\n                        {x: 0.78 * x, y: 0.481 * y},\n                        {x: 0.781 * x, y: 0.474 * y},\n                        {x: 0.783 * x, y: 0.471 * y},\n                        {x: 0.786 * x, y: 0.471 * y},\n                        {x: 0.792 * x, y: 0.472 * y},\n                        {x: 0.798 * x, y: 0.475 * y},\n                        {x: 0.805 * x, y: 0.479 * y},\n                        {x: 0.81 * x, y: 0.484 * y},\n                        {x: 0.814 * x, y: 0.488 * y},\n                        {x: 0.818 * x, y: 0.489 * y},\n                        {x: 0.822 * x, y: 0.489 * y},\n                        {x: 0.825 * x, y: 0.489 * y},\n                        {x: 0.828 * x, y: 0.485 * y},\n                        {x: 0.831 * x, y: 0.479 * y},\n                        {x: 0.833 * x, y: 0.477 * y},\n                        {x: 0.835 * x, y: 0.477 * y},\n                        {x: 0.838 * x, y: 0.479 * y},\n                        {x: 0.839 * x, y: 0.481 * y},\n                        {x: 0.84 * x, y: 0.485 * y},\n                        {x: 0.84 * x, y: 0.497 * y},\n                        {x: 0.84 * x, y: 0.506 * y},\n                        {x: 0.841 * x, y: 0.514 * y},\n                        {x: 0.844 * x, y: 0.521 * y},\n                        {x: 0.845 * x, y: 0.525 * y},\n                        {x: 0.849 * x, y: 0.529 * y},\n                        {x: 0.852 * x, y: 0.531 * y},\n                        {x: 0.855 * x, y: 0.53 * y},\n                        {x: 0.858 * x, y: 0.529 * y},\n                        {x: 0.861 * x, y: 0.526 * y},\n                        {x: 0.864 * x, y: 0.523 * y},\n                        {x: 0.865 * x, y: 0.52 * y},\n                        {x: 0.865 * x, y: 0.515 * y},\n                        {x: 0.865 * x, y: 0.511 * y},\n                        {x: 0.864 * x, y: 0.504 * y},\n                        {x: 0.863 * x, y: 0.494 * y},\n                        {x: 0.863 * x, y: 0.487 * y},\n                        {x: 0.865 * x, y: 0.483 * y},\n                        {x: 0.866 * x, y: 0.482 * y},\n                        {x: 0.868 * x, y: 0.484 * y},\n                        {x: 0.87 * x, y: 0.487 * y},\n                        {x: 0.873 * x, y: 0.494 * y},\n                        {x: 0.876 * x, y: 0.5 * y},\n                        {x: 0.877 * x, y: 0.504 * y},\n                        {x: 0.879 * x, y: 0.507 * y},\n                        {x: 0.884 * x, y: 0.507 * y},\n                        {x: 0.89 * x, y: 0.506 * y},\n                        {x: 0.894 * x, y: 0.502 * y},\n                        {x: 0.898 * x, y: 0.502 * y},\n                        {x: 0.905 * x, y: 0.502 * y},\n                        {x: 0.911 * x, y: 0.502 * y},\n                        {x: 0.916 * x, y: 0.502 * y},\n                        {x: 0.918 * x, y: 0.497 * y},\n                        {x: 0.922 * x, y: 0.486 * y},\n                        {x: 0.927 * x, y: 0.47 * y},\n                        {x: 0.93 * x, y: 0.465 * y},\n                        {x: 0.933 * x, y: 0.465 * y},\n                        {x: 0.937 * x, y: 0.464 * y},\n                        {x: 0.942 * x, y: 0.464 * y},\n                        {x: 0.944 * x, y: 0.463 * y},\n                        {x: 0.948 * x, y: 0.458 * y},\n                        {x: 0.952 * x, y: 0.458 * y},\n                        {x: 0.955 * x, y: 0.461 * y},\n                        {x: 0.959 * x, y: 0.466 * y},\n                        {x: 0.968 * x, y: 0.474 * y},\n                        {x: 0.979 * x, y: 0.477 * y},\n                        {x: 0.984 * x, y: 0.484 * y},\n                        {x: 0.984 * x, y: 0.508 * y},\n                        {x: 0.991 * x, y: 0.523 * y},\n                        {x: x, y: 0.529 * y},\n                    ],\n                ]\n            },\n            {\n                name: \"Enfield Reservoir\",\n                borders: [\n                    [\n                        {x: 0.855 * x, y: 0.15 * y},\n                        {x: 0.854 * x, y: 0.165 * y},\n                        {x: 0.853 * x, y: 0.167 * y},\n                        {x: 0.852 * x, y: 0.174 * y},\n                        {x: 0.85 * x, y: 0.185 * y},\n                        {x: 0.847 * x, y: 0.195 * y},\n                        {x: 0.845 * x, y: 0.203 * y},\n                        {x: 0.843 * x, y: 0.21 * y},\n                        {x: 0.841 * x, y: 0.211 * y},\n                        {x: 0.84 * x, y: 0.21 * y},\n                        {x: 0.842 * x, y: 0.196 * y},\n                        {x: 0.843 * x, y: 0.185 * y},\n                        {x: 0.844 * x, y: 0.175 * y},\n                        {x: 0.844 * x, y: 0.167 * y},\n                        {x: 0.846 * x, y: 0.158 * y},\n                        {x: 0.848 * x, y: 0.153 * y},\n                        {x: 0.85 * x, y: 0.143 * y},\n                        {x: 0.853 * x, y: 0.143 * y},\n                        {x: 0.855 * x, y: 0.146 * y},\n                    ]\n                ]\n            },\n            {\n                name: \"Walthamstow Filter Beds\",\n                borders: [\n                    [\n                        {x: 0.842 * x, y: 0.241 * y},\n                        {x: 0.843 * x, y: 0.244 * y},\n                        {x: 0.844 * x, y: 0.248 * y},\n                        {x: 0.844 * x, y: 0.252 * y},\n                        {x: 0.841 * x, y: 0.254 * y},\n                        {x: 0.839 * x, y: 0.253 * y},\n                        {x: 0.835 * x, y: 0.251 * y},\n                        {x: 0.836 * x, y: 0.247 * y},\n                        {x: 0.838 * x, y: 0.243 * y},\n                        {x: 0.841 * x, y: 0.24 * y},\n\n                    ],\n                    [\n                        {x: 0.832 * x, y: 0.26 * y},\n                        {x: 0.833 * x, y: 0.265 * y},\n                        {x: 0.832 * x, y: 0.271 * y},\n                        {x: 0.831 * x, y: 0.276 * y},\n                        {x: 0.83 * x, y: 0.28 * y},\n                        {x: 0.828 * x, y: 0.282 * y},\n                        {x: 0.827 * x, y: 0.278 * y},\n                        {x: 0.827 * x, y: 0.271 * y},\n                        {x: 0.828 * x, y: 0.264 * y},\n                        {x: 0.832 * x, y: 0.258 * y},\n                    ],\n                    [\n                        {x: 0.831 * x, y: 0.285 * y},\n                        {x: 0.832 * x, y: 0.293 * y},\n                        {x: 0.831 * x, y: 0.299 * y},\n                        {x: 0.83 * x, y: 0.307 * y},\n                        {x: 0.828 * x, y: 0.308 * y},\n                        {x: 0.826 * x, y: 0.314 * y},\n                        {x: 0.824 * x, y: 0.319 * y},\n                        {x: 0.822 * x, y: 0.315 * y},\n                        {x: 0.822 * x, y: 0.308 * y},\n                        {x: 0.822 * x, y: 0.303 * y},\n                        {x: 0.824 * x, y: 0.298 * y},\n                        {x: 0.826 * x, y: 0.303 * y},\n                        {x: 0.827 * x, y: 0.292 * y},\n                        {x: 0.829 * x, y: 0.288 * y},\n                    ]\n                ]\n            },\n            {\n                name: \"Heathrow Reservoirs\",\n                borders: [\n                    [\n                        {x: 0.445 * x, y: 0.493 * y},\n                        {x: 0.442 * x, y: 0.495 * y},\n                        {x: 0.441 * x, y: 0.495 * y},\n                        {x: 0.44 * x, y: 0.498 * y},\n                        {x: 0.437 * x, y: 0.496 * y},\n                        {x: 0.434 * x, y: 0.498 * y},\n                        {x: 0.432 * x, y: 0.501 * y},\n                        {x: 0.43 * x, y: 0.503 * y},\n                        {x: 0.429 * x, y: 0.508 * y},\n                        {x: 0.429 * x, y: 0.513 * y},\n                        {x: 0.431 * x, y: 0.519 * y},\n                        {x: 0.434 * x, y: 0.524 * y},\n                        {x: 0.437 * x, y: 0.526 * y},\n                        {x: 0.441 * x, y: 0.525 * y},\n                        {x: 0.443 * x, y: 0.518 * y},\n                        {x: 0.444 * x, y: 0.51 * y},\n                        {x: 0.446 * x, y: 0.502 * y},\n                        {x: 0.446 * x, y: 0.494 * y},\n                    ],\n                    [\n                        {x: 0.432 * x, y: 0.538 * y},\n                        {x: 0.436 * x, y: 0.551 * y},\n                        {x: 0.437 * x, y: 0.553 * y},\n                        {x: 0.437 * x, y: 0.554 * y},\n                        {x: 0.435 * x, y: 0.558 * y},\n                        {x: 0.435 * x, y: 0.563 * y},\n                        {x: 0.433 * x, y: 0.564 * y},\n                        {x: 0.431 * x, y: 0.565 * y},\n                        {x: 0.43 * x, y: 0.559 * y},\n                        {x: 0.428 * x, y: 0.556 * y},\n                        {x: 0.427 * x, y: 0.555 * y},\n                        {x: 0.428 * x, y: 0.549 * y},\n                        {x: 0.43 * x, y: 0.549 * y},\n                        {x: 0.432 * x, y: 0.543 * y},\n                        {x: 0.432 * x, y: 0.54 * y},\n                    ],\n                    [\n                        {x: 0.457 * x, y: 0.531 * y},\n                        {x: 0.459 * x, y: 0.536 * y},\n                        {x: 0.461 * x, y: 0.54 * y},\n                        {x: 0.46 * x, y: 0.547 * y},\n                        {x: 0.459 * x, y: 0.554 * y},\n                        {x: 0.459 * x, y: 0.566 * y},\n                        {x: 0.456 * x, y: 0.569 * y},\n                        {x: 0.454 * x, y: 0.572 * y},\n                        {x: 0.451 * x, y: 0.579 * y},\n                        {x: 0.451 * x, y: 0.581 * y},\n                        {x: 0.449 * x, y: 0.577 * y},\n                        {x: 0.447 * x, y: 0.573 * y},\n                        {x: 0.446 * x, y: 0.571 * y},\n                        {x: 0.445 * x, y: 0.567 * y},\n                        {x: 0.446 * x, y: 0.563 * y},\n                        {x: 0.448 * x, y: 0.56 * y},\n                        {x: 0.449 * x, y: 0.551 * y},\n                        {x: 0.45 * x, y: 0.541 * y},\n                        {x: 0.453 * x, y: 0.532 * y},\n                        {x: 0.456 * x, y: 0.53 * y},\n                    ],\n                    [\n                        {x: 0.466 * x, y: 0.564 * y},\n                        {x: 0.472 * x, y: 0.565 * y},\n                        {x: 0.476 * x, y: 0.566 * y},\n                        {x: 0.479 * x, y: 0.568 * y},\n                        {x: 0.482 * x, y: 0.573 * y},\n                        {x: 0.482 * x, y: 0.581 * y},\n                        {x: 0.484 * x, y: 0.585 * y},\n                        {x: 0.487 * x, y: 0.588 * y},\n                        {x: 0.488 * x, y: 0.593 * y},\n                        {x: 0.489 * x, y: 0.597 * y},\n                        {x: 0.489 * x, y: 0.601 * y},\n                        {x: 0.486 * x, y: 0.604 * y},\n                        {x: 0.482 * x, y: 0.607 * y},\n                        {x: 0.479 * x, y: 0.61 * y},\n                        {x: 0.476 * x, y: 0.612 * y},\n                        {x: 0.474 * x, y: 0.612 * y},\n                        {x: 0.472 * x, y: 0.61 * y},\n                        {x: 0.47 * x, y: 0.605 * y},\n                        {x: 0.468 * x, y: 0.605 * y},\n                        {x: 0.466 * x, y: 0.602 * y},\n                        {x: 0.464 * x, y: 0.599 * y},\n                        {x: 0.464 * x, y: 0.592 * y},\n                        {x: 0.466 * x, y: 0.588 * y},\n                        {x: 0.465 * x, y: 0.577 * y},\n                        {x: 0.465 * x, y: 0.572 * y},\n                        {x: 0.465 * x, y: 0.569 * y},\n                    ],\n                    [\n                        {x: 0.501 * x, y: 0.633 * y},\n                        {x: 0.506 * x, y: 0.637 * y},\n                        {x: 0.509 * x, y: 0.643 * y},\n                        {x: 0.511 * x, y: 0.648 * y},\n                        {x: 0.512 * x, y: 0.657 * y},\n                        {x: 0.513 * x, y: 0.665 * y},\n                        {x: 0.51 * x, y: 0.671 * y},\n                        {x: 0.507 * x, y: 0.677 * y},\n                        {x: 0.504 * x, y: 0.68 * y},\n                        {x: 0.501 * x, y: 0.68 * y},\n                        {x: 0.495 * x, y: 0.68 * y},\n                        {x: 0.493 * x, y: 0.677 * y},\n                        {x: 0.491 * x, y: 0.667 * y},\n                        {x: 0.489 * x, y: 0.664 * y},\n                        {x: 0.487 * x, y: 0.658 * y},\n                        {x: 0.487 * x, y: 0.654 * y},\n                        {x: 0.489 * x, y: 0.651 * y},\n                        {x: 0.492 * x, y: 0.647 * y},\n                        {x: 0.494 * x, y: 0.639 * y},\n                        {x: 0.497 * x, y: 0.635 * y},\n                        {x: 0.501 * x, y: 0.633 * y},\n                    ],\n                    [\n                        {x: 0.543 * x, y: 0.633 * y},\n                        {x: 0.546 * x, y: 0.635 * y},\n                        {x: 0.549 * x, y: 0.637 * y},\n                        {x: 0.552 * x, y: 0.642 * y},\n                        {x: 0.552 * x, y: 0.648 * y},\n                        {x: 0.552 * x, y: 0.653 * y},\n                        {x: 0.548 * x, y: 0.65 * y},\n                        {x: 0.544 * x, y: 0.647 * y},\n                        {x: 0.54 * x, y: 0.641 * y},\n                        {x: 0.54 * x, y: 0.64 * y},\n                    ],\n                    [\n                        {x: 0.456 * x, y: 0.646 * y},\n                        {x: 0.457 * x, y: 0.651 * y},\n                        {x: 0.46 * x, y: 0.656 * y},\n                        {x: 0.464 * x, y: 0.663 * y},\n                        {x: 0.465 * x, y: 0.669 * y},\n                        {x: 0.466 * x, y: 0.679 * y},\n                        {x: 0.466 * x, y: 0.686 * y},\n                        {x: 0.465 * x, y: 0.688 * y},\n                        {x: 0.463 * x, y: 0.689 * y},\n                        {x: 0.46 * x, y: 0.686 * y},\n                        {x: 0.459 * x, y: 0.68 * y},\n                        {x: 0.458 * x, y: 0.676 * y},\n                        {x: 0.456 * x, y: 0.669 * y},\n                        {x: 0.454 * x, y: 0.671 * y},\n                        {x: 0.452 * x, y: 0.669 * y},\n                        {x: 0.451 * x, y: 0.667 * y},\n                        {x: 0.451 * x, y: 0.655 * y},\n                        {x: 0.456 * x, y: 0.645 * y},\n                    ]\n                ]\n            }\n        ]\n    }\n}\n\n//# sourceURL=webpack://atc/./src/config/maps/EGLL.js?");

/***/ }),

/***/ "./src/index.js":
/*!**********************!*\
  !*** ./src/index.js ***!
  \**********************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _Interface_UIController__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./Interface/UIController */ \"./src/Interface/UIController.js\");\n/* harmony import */ var _Application_AeroplaneService__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./Application/AeroplaneService */ \"./src/Application/AeroplaneService.js\");\n/* harmony import */ var _Application_GameLoop__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./Application/GameLoop */ \"./src/Application/GameLoop.js\");\n/* harmony import */ var _Interface_InterfaceController__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./Interface/InterfaceController */ \"./src/Interface/InterfaceController.js\");\n/* harmony import */ var _config_maps_EGLL__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./config/maps/EGLL */ \"./src/config/maps/EGLL.js\");\n/* harmony import */ var _Application_StatsService__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./Application/StatsService */ \"./src/Application/StatsService.js\");\n/* harmony import */ var _Domain_GameMap_GameMap__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./Domain/GameMap/GameMap */ \"./src/Domain/GameMap/GameMap.js\");\n/* harmony import */ var _Application_Weather_WeatherService__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./Application/Weather/WeatherService */ \"./src/Application/Weather/WeatherService.js\");\n\n\n\n\n\n\n\n\n\n\nconst map = new _Domain_GameMap_GameMap__WEBPACK_IMPORTED_MODULE_6__.GameMap(_config_maps_EGLL__WEBPACK_IMPORTED_MODULE_4__.EGLL)\nconst weather = new _Application_Weather_WeatherService__WEBPACK_IMPORTED_MODULE_7__.Weather(map)\n\nconst statsService = new _Application_StatsService__WEBPACK_IMPORTED_MODULE_5__.StatsService();\n\nconst aeroplaneService = new _Application_AeroplaneService__WEBPACK_IMPORTED_MODULE_1__.AeroplaneService(map, statsService, weather)\n\nconst interfaceController = new _Interface_InterfaceController__WEBPACK_IMPORTED_MODULE_3__.InterfaceController(aeroplaneService)\nconst uiController = new _Interface_UIController__WEBPACK_IMPORTED_MODULE_0__.UIController(map, aeroplaneService, interfaceController, weather)\n\nconst gameLoop = new _Application_GameLoop__WEBPACK_IMPORTED_MODULE_2__.GameLoop(uiController, interfaceController, aeroplaneService, statsService)\n\ninterfaceController.startEasyMode()\ngameLoop.init()\ngameLoop.start()\n\n//# sourceURL=webpack://atc/./src/index.js?");

/***/ }),

/***/ "./src/utils/geometry.js":
/*!*******************************!*\
  !*** ./src/utils/geometry.js ***!
  \*******************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"distance\": () => (/* binding */ distance),\n/* harmony export */   \"isInsidePolygon\": () => (/* binding */ isInsidePolygon),\n/* harmony export */   \"shortestAngle\": () => (/* binding */ shortestAngle)\n/* harmony export */ });\nconst distance = (currentX, currentY, targetX, targetY) => {\n    return Math.sqrt(Math.pow((currentX - targetX), 2) + Math.pow((currentY - targetY), 2))\n}\n\nconst shortestAngle = (currentHeading, targetHeading) => {\n    if (currentHeading === 180 && targetHeading === 0) {\n        return 180\n    }\n    if (currentHeading === 0 && (targetHeading < 360 && targetHeading > 180)) {\n        return targetHeading - 360\n    }\n    if (currentHeading - targetHeading < -180) {\n        return -(currentHeading + 360 - targetHeading)\n    }\n    if (currentHeading - targetHeading > 180) {\n        return targetHeading + 360 - currentHeading\n    }\n    if (targetHeading - currentHeading === -180) {\n        return 180\n    }\n    return targetHeading - currentHeading\n}\n\n\nconst pointOnCorner = (polygon, x, y, i) => {\n    return (x === polygon[i].x) && (y === polygon[i].inv_y)\n}\n\nconst points_not_horizontal = (poly, y, i, j) => {\n    return (polygon_point_higher(poly, y, i)) !== (polygon_point_higher(poly, y, j))\n}\n\nconst polygon_point_higher = (poly, y, i) => {\n    return poly[i].inv_y > y\n}\n\nconst calculate_slope = (poly, x, y, i, j) => {\n    const point1_x = poly[i].x\n    const point1_y = poly[i].inv_y\n\n    const point2_x = poly[j].x\n    const point2_y = poly[j].inv_y\n\n    return (x - point1_x) * (point2_y - point1_y) - (point2_x - point1_x) * (y - point1_y)\n}\n\nconst pointOnBoundary = (slope) => {\n    return slope === 0\n}\n\nconst isInsidePolygon = (polygon, x, y) => {\n    const numSides = polygon.length\n    let j = numSides - 1\n    let inside = false\n\n    for (let i = 0; i < numSides; i++) {\n        if (pointOnCorner(polygon, x, y, i)) {\n            return false\n        }\n\n        if (points_not_horizontal(polygon, y, i, j)) {\n            const slope = calculate_slope(polygon, x, y, i, j)\n            if (pointOnBoundary(slope)) {\n                return true\n            }\n            if ((slope < 0) !== (polygon[j].inv_y < polygon[i].inv_y)) {\n                inside = !inside  // Invert location with every traversed edge\n            }\n        }\n        j = i\n    }\n\n    return inside\n}\n\n//# sourceURL=webpack://atc/./src/utils/geometry.js?");

/***/ }),

/***/ "./src/utils/maths.js":
/*!****************************!*\
  !*** ./src/utils/maths.js ***!
  \****************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"getRandomFloatBetween\": () => (/* binding */ getRandomFloatBetween),\n/* harmony export */   \"getRandomNumberBetween\": () => (/* binding */ getRandomNumberBetween),\n/* harmony export */   \"range\": () => (/* binding */ range),\n/* harmony export */   \"round\": () => (/* binding */ round),\n/* harmony export */   \"roundToNearest\": () => (/* binding */ roundToNearest),\n/* harmony export */   \"toDegrees\": () => (/* binding */ toDegrees),\n/* harmony export */   \"toRadians\": () => (/* binding */ toRadians)\n/* harmony export */ });\nconst getRandomNumberBetween = (min, max) => {\n    return Math.floor(Math.random() * (max - min + 1) + min)\n}\n\nconst getRandomFloatBetween = (min, max) => {\n    return Math.random() * (max - min) + min\n}\n\nconst toRadians = (degrees) => {\n    return (Math.PI / 180) * degrees\n}\n\nconst toDegrees = (radians) => {\n    return (180 * radians) / Math.PI\n}\n\nconst round = (number, n) => {\n    return Math.round(number * Math.pow(10, n)) / Math.pow(10, n)\n}\n\nconst roundToNearest = (number, nearest) => {\n    return Math.ceil(number / nearest) * nearest\n}\n\nconst range = (a, b, step) => {\n    if (!step) {\n        throw 'Step cannot be 0'\n    }\n    let array = []\n\n    if (b > a) {\n        for (let x = a; x < b; x += step) {\n            array.push(x)\n        }\n        return array\n    }\n\n    if (a > b) {\n        for (let x = a; x > b; x -= step) {\n            array.push(x)\n        }\n        return array\n    }\n\n    return []\n}\n\n//# sourceURL=webpack://atc/./src/utils/maths.js?");

/***/ }),

/***/ "./src/utils/selectors.js":
/*!********************************!*\
  !*** ./src/utils/selectors.js ***!
  \********************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"randomChoice\": () => (/* binding */ randomChoice)\n/* harmony export */ });\nconst randomChoice = (list) => {\n    if (!list) {\n        return list\n    }\n    return list[Math.floor(Math.random() * list.length)]\n}\n\n//# sourceURL=webpack://atc/./src/utils/selectors.js?");

/***/ }),

/***/ "./src/utils/timeFormatters.js":
/*!*************************************!*\
  !*** ./src/utils/timeFormatters.js ***!
  \*************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"timeStringFromSeconds\": () => (/* binding */ timeStringFromSeconds)\n/* harmony export */ });\nconst timeStringFromSeconds = (seconds) => {\n    return new Date(seconds * 1000).toISOString().slice(14, 19)\n}\n\n\n//# sourceURL=webpack://atc/./src/utils/timeFormatters.js?");

/***/ })

/******/ 	});
/************************************************************************/
/******/ 	// The module cache
/******/ 	var __webpack_module_cache__ = {};
/******/ 	
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/ 		// Check if module is in cache
/******/ 		var cachedModule = __webpack_module_cache__[moduleId];
/******/ 		if (cachedModule !== undefined) {
/******/ 			return cachedModule.exports;
/******/ 		}
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = __webpack_module_cache__[moduleId] = {
/******/ 			// no module.id needed
/******/ 			// no module.loaded needed
/******/ 			exports: {}
/******/ 		};
/******/ 	
/******/ 		// Execute the module function
/******/ 		__webpack_modules__[moduleId](module, module.exports, __webpack_require__);
/******/ 	
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/ 	
/************************************************************************/
/******/ 	/* webpack/runtime/define property getters */
/******/ 	(() => {
/******/ 		// define getter functions for harmony exports
/******/ 		__webpack_require__.d = (exports, definition) => {
/******/ 			for(var key in definition) {
/******/ 				if(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {
/******/ 					Object.defineProperty(exports, key, { enumerable: true, get: definition[key] });
/******/ 				}
/******/ 			}
/******/ 		};
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/hasOwnProperty shorthand */
/******/ 	(() => {
/******/ 		__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/make namespace object */
/******/ 	(() => {
/******/ 		// define __esModule on exports
/******/ 		__webpack_require__.r = (exports) => {
/******/ 			if(typeof Symbol !== 'undefined' && Symbol.toStringTag) {
/******/ 				Object.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });
/******/ 			}
/******/ 			Object.defineProperty(exports, '__esModule', { value: true });
/******/ 		};
/******/ 	})();
/******/ 	
/************************************************************************/
/******/ 	
/******/ 	// startup
/******/ 	// Load entry module and return exports
/******/ 	// This entry module can't be inlined because the eval devtool is used.
/******/ 	var __webpack_exports__ = __webpack_require__("./src/index.js");
/******/ 	
/******/ })()
;